<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1005.1835                               -->
<workbook original-version='18.1' source-build='2022.3.0 (20223.22.1005.1835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='2014' caption='Year' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2014-05-02#'>
        <calculation class='tableau' formula='#2014-05-02#' />
        <aliases>
          <alias key='#2014-05-02#' value='2014' />
          <alias key='#2015-05-27#' value='2015' />
        </aliases>
        <members>
          <member alias='2014' value='#2014-05-02#' />
          <member alias='2015' value='#2015-05-27#' />
        </members>
      </column>
    </datasource>
    <datasource caption='Data_MidTerm_Project_Real_State_Regression' inline='true' name='federated.1a45c5706zag3910h5ka00sn5u7x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data_MidTerm_Project_Real_State_Regression' name='excel-direct.1ca03rh0zan90m16of6ks0vv5bhn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Stephan/Downloads/proyecto-compartido/Data_MidTerm_Project_Real_State_Regression.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='renovated' name='excel-direct.04ref781fqtvvu1foxn9719na3qg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Stephan/Downloads/renovated.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='zip_code_database' name='excel-direct.0laah2h0kqpeqv0zw3ucm1emb38w'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Stephan/Downloads/zip_code_database.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='clasificar' name='excel-direct.0ccmh9u1t2lkds15bqwkt0bjgqwz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Stephan/Downloads/clasificar.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='zip_custumers_review' name='excel-direct.1gki5zj14goqhy17ee9u91o1h1nn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Stephan/Downloads/proyecto-compartido/zip_custumers_review.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='binario.reventa' name='excel-direct.1ndxe5z15tqd0414xgg1x0rvqree'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Stephan/Downloads/proyecto-compartido/binario.reventa.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='Sheet1+' type='union'>
          <columns header='yes'>
            <column datatype='integer' name='id' />
            <column datatype='integer' name='date' />
            <column datatype='integer' name='bedrooms' />
            <column datatype='real' name='bathrooms' />
            <column datatype='integer' name='sqft_living' />
            <column datatype='integer' name='sqft_lot' />
            <column datatype='real' name='floors' />
            <column datatype='integer' name='waterfront' />
            <column datatype='integer' name='view' />
            <column datatype='integer' name='condition' />
            <column datatype='integer' name='grade' />
            <column datatype='integer' name='sqft_above' />
            <column datatype='integer' name='sqft_basement' />
            <column datatype='integer' name='yr_built' />
            <column datatype='integer' name='yr_renovated' />
            <column datatype='integer' name='zipcode' />
            <column datatype='real' name='lat' />
            <column datatype='real' name='long' />
            <column datatype='integer' name='sqft_living15' />
            <column datatype='integer' name='sqft_lot15' />
            <column datatype='integer' name='price' />
            <column datatype='string' name='city' />
            <column datatype='string' name='Sheet' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='excel-direct.0ccmh9u1t2lkds15bqwkt0bjgqwz' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:V10001:no:A1:V10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='date' ordinal='1' />
              <column datatype='integer' name='bedrooms' ordinal='2' />
              <column datatype='real' name='bathrooms' ordinal='3' />
              <column datatype='integer' name='sqft_living' ordinal='4' />
              <column datatype='integer' name='sqft_lot' ordinal='5' />
              <column datatype='real' name='floors' ordinal='6' />
              <column datatype='integer' name='waterfront' ordinal='7' />
              <column datatype='integer' name='view' ordinal='8' />
              <column datatype='integer' name='condition' ordinal='9' />
              <column datatype='integer' name='grade' ordinal='10' />
              <column datatype='integer' name='sqft_above' ordinal='11' />
              <column datatype='integer' name='sqft_basement' ordinal='12' />
              <column datatype='integer' name='yr_built' ordinal='13' />
              <column datatype='integer' name='yr_renovated' ordinal='14' />
              <column datatype='integer' name='zipcode' ordinal='15' />
              <column datatype='real' name='lat' ordinal='16' />
              <column datatype='real' name='long' ordinal='17' />
              <column datatype='integer' name='sqft_living15' ordinal='18' />
              <column datatype='integer' name='sqft_lot15' ordinal='19' />
              <column datatype='integer' name='price' ordinal='20' />
              <column datatype='string' name='city' ordinal='21' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1ca03rh0zan90m16of6ks0vv5bhn' name='regression_data1' table='[regression_data1$]' type='table'>
            <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='integer' name='bedrooms' ordinal='2' />
              <column datatype='real' name='bathrooms' ordinal='3' />
              <column datatype='integer' name='sqft_living' ordinal='4' />
              <column datatype='integer' name='sqft_lot' ordinal='5' />
              <column datatype='real' name='floors' ordinal='6' />
              <column datatype='integer' name='waterfront' ordinal='7' />
              <column datatype='integer' name='view' ordinal='8' />
              <column datatype='integer' name='condition' ordinal='9' />
              <column datatype='integer' name='grade' ordinal='10' />
              <column datatype='integer' name='sqft_above' ordinal='11' />
              <column datatype='integer' name='sqft_basement' ordinal='12' />
              <column datatype='integer' name='yr_built' ordinal='13' />
              <column datatype='integer' name='yr_renovated' ordinal='14' />
              <column datatype='integer' name='zipcode' ordinal='15' />
              <column datatype='real' name='lat' ordinal='16' />
              <column datatype='real' name='long' ordinal='17' />
              <column datatype='integer' name='sqft_living15' ordinal='18' />
              <column datatype='integer' name='sqft_lot15' ordinal='19' />
              <column datatype='integer' name='price' ordinal='20' />
            </columns>
          </relation>
          <relation all='true' name='Sheet1+' type='union'>
            <columns header='yes'>
              <column datatype='integer' name='id' />
              <column datatype='integer' name='date' />
              <column datatype='integer' name='bedrooms' />
              <column datatype='real' name='bathrooms' />
              <column datatype='integer' name='sqft_living' />
              <column datatype='integer' name='sqft_lot' />
              <column datatype='real' name='floors' />
              <column datatype='integer' name='waterfront' />
              <column datatype='integer' name='view' />
              <column datatype='integer' name='condition' />
              <column datatype='integer' name='grade' />
              <column datatype='integer' name='sqft_above' />
              <column datatype='integer' name='sqft_basement' />
              <column datatype='integer' name='yr_built' />
              <column datatype='integer' name='yr_renovated' />
              <column datatype='integer' name='zipcode' />
              <column datatype='real' name='lat' />
              <column datatype='real' name='long' />
              <column datatype='integer' name='sqft_living15' />
              <column datatype='integer' name='sqft_lot15' />
              <column datatype='integer' name='price' />
              <column datatype='string' name='city' />
              <column datatype='string' name='Sheet' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='excel-direct.0ccmh9u1t2lkds15bqwkt0bjgqwz' name='Sheet1' table='[Sheet1$]' type='table'>
              <columns gridOrigin='A1:V10001:no:A1:V10001:0' header='yes' outcome='6'>
                <column datatype='integer' name='id' ordinal='0' />
                <column datatype='integer' name='date' ordinal='1' />
                <column datatype='integer' name='bedrooms' ordinal='2' />
                <column datatype='real' name='bathrooms' ordinal='3' />
                <column datatype='integer' name='sqft_living' ordinal='4' />
                <column datatype='integer' name='sqft_lot' ordinal='5' />
                <column datatype='real' name='floors' ordinal='6' />
                <column datatype='integer' name='waterfront' ordinal='7' />
                <column datatype='integer' name='view' ordinal='8' />
                <column datatype='integer' name='condition' ordinal='9' />
                <column datatype='integer' name='grade' ordinal='10' />
                <column datatype='integer' name='sqft_above' ordinal='11' />
                <column datatype='integer' name='sqft_basement' ordinal='12' />
                <column datatype='integer' name='yr_built' ordinal='13' />
                <column datatype='integer' name='yr_renovated' ordinal='14' />
                <column datatype='integer' name='zipcode' ordinal='15' />
                <column datatype='real' name='lat' ordinal='16' />
                <column datatype='real' name='long' ordinal='17' />
                <column datatype='integer' name='sqft_living15' ordinal='18' />
                <column datatype='integer' name='sqft_lot15' ordinal='19' />
                <column datatype='integer' name='price' ordinal='20' />
                <column datatype='string' name='city' ordinal='21' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1ndxe5z15tqd0414xgg1x0rvqree' name='Sheet2' table='[Sheet2$]' type='table'>
            <columns gridOrigin='A2:C21439:no:A2:C21439:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row Labels' ordinal='0' />
              <column datatype='integer' name='Count of id' ordinal='1' />
              <column datatype='integer' name='binary' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.04ref781fqtvvu1foxn9719na3qg' name='regression_data11' table='[regression_data1$]' type='table'>
            <columns gridOrigin='A1:D21598:no:A1:D21598:0' header='yes' outcome='6'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='renovated' ordinal='2' />
              <column datatype='integer' name='zipcode' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0laah2h0kqpeqv0zw3ucm1emb38w' name='zip_code_database' table='[zip_code_database$]' type='table'>
            <columns gridOrigin='A1:O42736:no:A1:O42736:0' header='yes' outcome='2'>
              <column datatype='integer' name='zip' ordinal='0' />
              <column datatype='string' name='type' ordinal='1' />
              <column datatype='integer' name='decommissioned' ordinal='2' />
              <column datatype='string' name='primary_city' ordinal='3' />
              <column datatype='string' name='acceptable_cities' ordinal='4' />
              <column datatype='string' name='unacceptable_cities' ordinal='5' />
              <column datatype='string' name='state' ordinal='6' />
              <column datatype='string' name='county' ordinal='7' />
              <column datatype='string' name='timezone' ordinal='8' />
              <column datatype='real' name='area_codes' ordinal='9' />
              <column datatype='string' name='world_region' ordinal='10' />
              <column datatype='string' name='country' ordinal='11' />
              <column datatype='real' name='latitude' ordinal='12' />
              <column datatype='real' name='longitude' ordinal='13' />
              <column datatype='integer' name='irs_estimated_population' ordinal='14' />
            </columns>
          </relation>
          <relation connection='excel-direct.1gki5zj14goqhy17ee9u91o1h1nn' name='Table1' table='[Table1$]' type='table'>
            <columns gridOrigin='A1:B71:no:A1:B71:0' header='yes' outcome='6'>
              <column datatype='integer' name='zipcode' ordinal='0' />
              <column datatype='integer' name='floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100)' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Count of id]' value='[Sheet2].[Count of id]' />
          <map key='[Row Labels]' value='[Sheet2].[Row Labels]' />
          <map key='[Sheet]' value='[Sheet1+].[Sheet]' />
          <map key='[Table Name]' value='[Sheet1+].[Table Name]' />
          <map key='[acceptable_cities]' value='[zip_code_database].[acceptable_cities]' />
          <map key='[area_codes]' value='[zip_code_database].[area_codes]' />
          <map key='[bathrooms (Sheet1+)]' value='[Sheet1+].[bathrooms]' />
          <map key='[bathrooms]' value='[regression_data1].[bathrooms]' />
          <map key='[bedrooms (Sheet1+)]' value='[Sheet1+].[bedrooms]' />
          <map key='[bedrooms]' value='[regression_data1].[bedrooms]' />
          <map key='[binary]' value='[Sheet2].[binary]' />
          <map key='[city]' value='[Sheet1+].[city]' />
          <map key='[condition (Sheet1+)]' value='[Sheet1+].[condition]' />
          <map key='[condition]' value='[regression_data1].[condition]' />
          <map key='[country]' value='[zip_code_database].[country]' />
          <map key='[county]' value='[zip_code_database].[county]' />
          <map key='[date (Sheet1+)]' value='[Sheet1+].[date]' />
          <map key='[date (regression!data11)]' value='[regression_data11].[date]' />
          <map key='[date]' value='[regression_data1].[date]' />
          <map key='[decommissioned]' value='[zip_code_database].[decommissioned]' />
          <map key='[floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100)]' value='[Table1].[floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100)]' />
          <map key='[floors (Sheet1+)]' value='[Sheet1+].[floors]' />
          <map key='[floors]' value='[regression_data1].[floors]' />
          <map key='[grade (Sheet1+)]' value='[Sheet1+].[grade]' />
          <map key='[grade]' value='[regression_data1].[grade]' />
          <map key='[id (Sheet1+)]' value='[Sheet1+].[id]' />
          <map key='[id (regression!data11)]' value='[regression_data11].[id]' />
          <map key='[id]' value='[regression_data1].[id]' />
          <map key='[irs_estimated_population]' value='[zip_code_database].[irs_estimated_population]' />
          <map key='[lat (Sheet1+)]' value='[Sheet1+].[lat]' />
          <map key='[lat]' value='[regression_data1].[lat]' />
          <map key='[latitude]' value='[zip_code_database].[latitude]' />
          <map key='[long (Sheet1+)]' value='[Sheet1+].[long]' />
          <map key='[long]' value='[regression_data1].[long]' />
          <map key='[longitude]' value='[zip_code_database].[longitude]' />
          <map key='[price (Sheet1+)]' value='[Sheet1+].[price]' />
          <map key='[price]' value='[regression_data1].[price]' />
          <map key='[primary_city]' value='[zip_code_database].[primary_city]' />
          <map key='[renovated]' value='[regression_data11].[renovated]' />
          <map key='[sqft_above (Sheet1+)]' value='[Sheet1+].[sqft_above]' />
          <map key='[sqft_above]' value='[regression_data1].[sqft_above]' />
          <map key='[sqft_basement (Sheet1+)]' value='[Sheet1+].[sqft_basement]' />
          <map key='[sqft_basement]' value='[regression_data1].[sqft_basement]' />
          <map key='[sqft_living (Sheet1+)]' value='[Sheet1+].[sqft_living]' />
          <map key='[sqft_living15 (Sheet1+)]' value='[Sheet1+].[sqft_living15]' />
          <map key='[sqft_living15]' value='[regression_data1].[sqft_living15]' />
          <map key='[sqft_living]' value='[regression_data1].[sqft_living]' />
          <map key='[sqft_lot (Sheet1+)]' value='[Sheet1+].[sqft_lot]' />
          <map key='[sqft_lot15 (Sheet1+)]' value='[Sheet1+].[sqft_lot15]' />
          <map key='[sqft_lot15]' value='[regression_data1].[sqft_lot15]' />
          <map key='[sqft_lot]' value='[regression_data1].[sqft_lot]' />
          <map key='[state]' value='[zip_code_database].[state]' />
          <map key='[timezone]' value='[zip_code_database].[timezone]' />
          <map key='[type]' value='[zip_code_database].[type]' />
          <map key='[unacceptable_cities]' value='[zip_code_database].[unacceptable_cities]' />
          <map key='[view (Sheet1+)]' value='[Sheet1+].[view]' />
          <map key='[view]' value='[regression_data1].[view]' />
          <map key='[waterfront (Sheet1+)]' value='[Sheet1+].[waterfront]' />
          <map key='[waterfront]' value='[regression_data1].[waterfront]' />
          <map key='[world_region]' value='[zip_code_database].[world_region]' />
          <map key='[yr_built (Sheet1+)]' value='[Sheet1+].[yr_built]' />
          <map key='[yr_built]' value='[regression_data1].[yr_built]' />
          <map key='[yr_renovated (Sheet1+)]' value='[Sheet1+].[yr_renovated]' />
          <map key='[yr_renovated]' value='[regression_data1].[yr_renovated]' />
          <map key='[zip]' value='[zip_code_database].[zip]' />
          <map key='[zipcode (Sheet1+)]' value='[Sheet1+].[zipcode]' />
          <map key='[zipcode (Table1)]' value='[Table1].[zipcode]' />
          <map key='[zipcode (regression!data11)]' value='[regression_data11].[zipcode]' />
          <map key='[zipcode]' value='[regression_data1].[zipcode]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bedrooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bedrooms]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>bedrooms</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bathrooms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bathrooms]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>bathrooms</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_living</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_living]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_living</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_lot</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_lot]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_lot</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>floors</remote-name>
            <remote-type>5</remote-type>
            <local-name>[floors]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>floors</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>waterfront</remote-name>
            <remote-type>20</remote-type>
            <local-name>[waterfront]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>waterfront</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>view</remote-name>
            <remote-type>20</remote-type>
            <local-name>[view]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>view</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>condition</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[grade]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>grade</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_above</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_above]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_above</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_basement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_basement]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_basement</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yr_built</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yr_built]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>yr_built</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yr_renovated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yr_renovated]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>yr_renovated</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_living15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_living15]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_living15</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_lot15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_lot15]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>sqft_lot15</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[regression_data1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10001:no:A1:U10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:V10001:no:A1:V10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>20</remote-type>
            <local-name>[date (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bedrooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bedrooms (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>bedrooms</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bathrooms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bathrooms (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>bathrooms</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_living</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_living (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>sqft_living</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_lot</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_lot (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>sqft_lot</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>floors</remote-name>
            <remote-type>5</remote-type>
            <local-name>[floors (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>floors</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>waterfront</remote-name>
            <remote-type>20</remote-type>
            <local-name>[waterfront (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>waterfront</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>view</remote-name>
            <remote-type>20</remote-type>
            <local-name>[view (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>view</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[condition (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>condition</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[grade (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>grade</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_above</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_above (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>sqft_above</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_basement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_basement (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>sqft_basement</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yr_built</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yr_built (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>yr_built</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yr_renovated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yr_renovated (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>yr_renovated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_living15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_living15 (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>sqft_living15</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sqft_lot15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sqft_lot15 (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>sqft_lot15</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price (Sheet1+)]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Sheet1+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row Labels</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row Labels]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Row Labels</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count of id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count of id]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Count of id</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>binary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[binary]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>binary</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A2:C21439:no:A2:C21439:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id (regression!data11)]</local-name>
            <parent-name>[regression_data11]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date (regression!data11)]</local-name>
            <parent-name>[regression_data11]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>49</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>renovated</remote-name>
            <remote-type>130</remote-type>
            <local-name>[renovated]</local-name>
            <parent-name>[regression_data11]</parent-name>
            <remote-alias>renovated</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode (regression!data11)]</local-name>
            <parent-name>[regression_data11]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[regression_data11]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D21598:no:A1:D21598:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zip]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>zip</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>decommissioned</remote-name>
            <remote-type>20</remote-type>
            <local-name>[decommissioned]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>decommissioned</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>primary_city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[primary_city]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>primary_city</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>acceptable_cities</remote-name>
            <remote-type>130</remote-type>
            <local-name>[acceptable_cities]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>acceptable_cities</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unacceptable_cities</remote-name>
            <remote-type>130</remote-type>
            <local-name>[unacceptable_cities]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>unacceptable_cities</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timezone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timezone]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>timezone</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_codes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[area_codes]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>area_codes</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>world_region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[world_region]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>world_region</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>irs_estimated_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[irs_estimated_population]</local-name>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias>irs_estimated_population</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[zip_code_database]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O42736:no:A1:O42736:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode (Table1)]</local-name>
            <parent-name>[Table1]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100)]</local-name>
            <parent-name>[Table1]</parent-name>
            <remote-alias>floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100)</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Table1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B71:no:A1:B71:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]&quot;' value='N° of  properties' />
          <alias key='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cum:avg:price:qk:4]&quot;' value='Avg. Price ' />
          <alias key='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cum:max:price:qk]&quot;' value=' Max. Price ' />
          <alias key='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cum:med:price:qk]&quot;' value='Median Price' />
          <alias key='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cum:min:price:qk]&quot;' value=' Min. Price ' />
          <alias key='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:price:qk]&quot;' value='Sum market movements value' />
          <alias key='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389843752058888:qk]&quot;' value='AVG Price' />
        </aliases>
      </column>
      <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
          <bin default-name='false' value='&quot;0,5 - 1&quot;'>
            <value>0.5</value>
            <value>0.75</value>
            <value>1.0</value>
          </bin>
          <bin default-name='false' value='&quot;1,25 - 2&quot;'>
            <value>1.25</value>
            <value>1.5</value>
            <value>1.75</value>
            <value>2.0</value>
          </bin>
          <bin default-name='false' value='&quot;2,25 - 3&quot;'>
            <value>2.25</value>
            <value>2.5</value>
            <value>2.75</value>
            <value>3.0</value>
          </bin>
          <bin default-name='false' value='&quot;3,25 - 4&quot;'>
            <value>3.25</value>
            <value>3.5</value>
            <value>3.75</value>
            <value>4.0</value>
          </bin>
          <bin default-name='false' value='&quot;4,25 - 5&quot;'>
            <value>4.25</value>
            <value>4.5</value>
            <value>4.75</value>
            <value>5.0</value>
          </bin>
          <bin default-name='false' value='&quot;5,25 - 6&quot;'>
            <value>5.25</value>
            <value>5.5</value>
            <value>5.75</value>
            <value>6.0</value>
          </bin>
          <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
            <value>6.25</value>
            <value>6.5</value>
            <value>6.75</value>
          </bin>
          <bin default-name='false' value='&quot;7,5 -  8&quot;'>
            <value>7.5</value>
            <value>7.75</value>
            <value>8.0</value>
          </bin>
        </calculation>
      </column>
      <column caption='avg price floor' datatype='integer' name='[Calculation_761389843752058888]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOOR(AVG([price]))' />
      </column>
      <column caption='Calculation y' datatype='real' name='[Calculation_761389843799560202]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='497414.55307262 -13787.9155057*[grade] +  19850.27900452*[sqft_living] + 87542.72046603*[lat] + 15612.8563094*[yr_built] -61738.00182949*[view] +  5632.79162094*[bathrooms] + 9602.84185567*[zipcode] + 28486.87659874*[floors] + 15383.07477168*[condition] +100721.52111329*[bedrooms] -18639.47918712*[waterfront] +80242.25277166*[long] -8702.806518*[yr_renovated]' />
      </column>
      <column caption='mode' datatype='integer' name='[Calculation_761389844023275533]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED  [id]: max(&#13;&#10;if { FIXED [id],price:count(price)}&#13;&#10;=&#13;&#10;{ fixed[id]:max({FIXED [id],price: count([id])})}then&#13;&#10;[id]&#13;&#10;END)&#13;&#10;}' />
      </column>
      <column caption='avgPRICE.aggregation' datatype='real' name='[Calculation_761389844027891727]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='AVG([price])' />
      </column>
      <column caption='Rest of cities' datatype='string' name='[City (copy) (group) (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[City (copy) (group)]' new-bin='true' />
      </column>
      <column datatype='string' name='[City (copy) (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[City (copy)_761389843660566532]' new-bin='true'>
          <bin default-name='false' value='&quot;County&quot;'>
            <value>&quot;Auburn&quot;</value>
            <value>&quot;Bellevue&quot;</value>
            <value>&quot;Black Diamond&quot;</value>
            <value>&quot;Bothell&quot;</value>
            <value>&quot;Carnation&quot;</value>
            <value>&quot;Duvall&quot;</value>
            <value>&quot;Enumclaw&quot;</value>
            <value>&quot;Fall City&quot;</value>
            <value>&quot;Federal Way&quot;</value>
            <value>&quot;Issaquah&quot;</value>
            <value>&quot;Kenmore&quot;</value>
            <value>&quot;Kent&quot;</value>
            <value>&quot;Kirkland&quot;</value>
            <value>&quot;Maple Valley&quot;</value>
            <value>&quot;Medina&quot;</value>
            <value>&quot;Mercer Island&quot;</value>
            <value>&quot;North Bend&quot;</value>
            <value>&quot;Redmond&quot;</value>
            <value>&quot;Renton&quot;</value>
            <value>&quot;Sammamish&quot;</value>
            <value>&quot;Snoqualmie&quot;</value>
            <value>&quot;Vashon&quot;</value>
            <value>&quot;Woodinville&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='City (copy)' datatype='string' name='[City (copy)_761389843660566532]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='tableau' formula='[city]' />
      </column>
      <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[floors]' new-bin='true'>
          <bin default-name='false' value='&quot;1 - 1,5&quot;'>
            <value>1.0</value>
            <value>1.5</value>
          </bin>
          <bin default-name='false' value='&quot;2 - 2,5&quot;'>
            <value>2.0</value>
            <value>2.5</value>
          </bin>
          <bin default-name='false' value='&quot;3 - 3,5&quot;'>
            <value>3.0</value>
            <value>3.5</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='None' datatype='integer' name='[Id (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='8' formula='[id]' peg='0' size='1.51579e+08' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7070F0B019364D05818C4FC710D7638E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet2' datatype='table' name='[__tableau_internal_object_id__].[Sheet2_D455470991C14B02AA82BE647CC5BC87]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='zip%' datatype='table' name='[__tableau_internal_object_id__].[Table1_C3653261FC414FDCA80BDFBBAC837E9B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='regression_data11' datatype='table' name='[__tableau_internal_object_id__].[regression!data1_1444D4035436484C96A62E2D15E302F1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='regression_data1' datatype='table' name='[__tableau_internal_object_id__].[regression!data1_6E1E0865AEB845D1BDB0544B49B7F923]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='zip_code_database' datatype='table' name='[__tableau_internal_object_id__].[zip!code!database_31F8A1A90334498888E9393DD709BDFB]' role='measure' type='quantitative' />
      <column caption='Acceptable Cities' datatype='string' name='[acceptable_cities]' role='dimension' type='nominal' />
      <column caption='Area Codes' datatype='real' name='[area_codes]' role='measure' type='quantitative' />
      <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
      <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
      <column caption='Binary' datatype='integer' name='[binary]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Date (Regression!Data11)' datatype='date' name='[date (regression!data11)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Decommissioned' datatype='integer' name='[decommissioned]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Floor(((Zip 2015.Price - Zip 2014.Price)/Zip 2014.Price)*100)' datatype='integer' default-format='*00000' name='[floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
      <column caption='Grade' datatype='integer' name='[grade]' role='measure' type='quantitative' />
      <column caption='Id (Regression!Data11)' datatype='integer' name='[id (regression!data11)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Irs Estimated Population' datatype='integer' name='[irs_estimated_population]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[lat (Sheet1+)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Primary City' datatype='string' name='[primary_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Renovated' datatype='string' name='[renovated]' role='dimension' type='nominal' />
      <column caption='Sqft Above' datatype='integer' name='[sqft_above]' role='measure' type='quantitative' />
      <column caption='Sqft Basement' datatype='integer' name='[sqft_basement]' role='measure' type='quantitative' />
      <column caption='Sqft Living15' datatype='integer' name='[sqft_living15]' role='measure' type='quantitative' />
      <column caption='Sqft Living' datatype='integer' name='[sqft_living]' role='measure' type='quantitative' />
      <column caption='Sqft Lot15' datatype='integer' name='[sqft_lot15]' role='measure' type='quantitative' />
      <column caption='Sqft Lot' datatype='integer' name='[sqft_lot]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Timezone' datatype='string' name='[timezone]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Unacceptable Cities' datatype='string' name='[unacceptable_cities]' role='dimension' type='nominal' />
      <column caption='View' datatype='integer' name='[view]' role='measure' type='quantitative' />
      <column caption='Waterfront' datatype='integer' name='[waterfront]' role='measure' type='quantitative' />
      <column caption='World Region' datatype='string' name='[world_region]' role='dimension' type='nominal' />
      <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='quantitative' />
      <column caption='Yr Renovated' datatype='integer' name='[yr_renovated]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Zip' datatype='integer' default-format='*00000' name='[zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[zipcode (Sheet1+)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[zipcode (Table1)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='Sum' caption='Zipcode (Regression!Data11)' datatype='integer' default-format='*00000' name='[zipcode (regression!data11)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[price]' derivation='Attribute' name='[attr:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Avg' name='[avg:price:ok]' pivot='key' type='ordinal' />
      <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Count' name='[cnt:price:ok]' pivot='key' type='ordinal' />
      <column-instance column='[price]' derivation='Count' name='[cnt:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Avg' name='[cum:avg:price:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:qk]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[price]' derivation='Avg' name='[cum:avg:price:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[price]' derivation='Max' name='[cum:max:price:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:qk]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[price]' derivation='Median' name='[cum:med:price:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:qk]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[price]' derivation='Min' name='[cum:min:price:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:qk]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance aggregation-param='95' column='[price]' derivation='Percentile' name='[cum:prc95:price:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[price]' derivation='Max' name='[max:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Sum' name='[sum:price:ok]' pivot='key' type='ordinal' />
      <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_761389843752058888]' derivation='User' name='[usr:Calculation_761389843752058888:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[City (copy) (group)]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Federal Way&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carnation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kirkland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Issaquah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Duvall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Snoqualmie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Bend&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Enumclaw&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maple Valley&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;County&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sammamish&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenmore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fall City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Black Diamond&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vashon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mercer Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bothell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodinville&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Federal Way&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carnation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kirkland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Issaquah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Duvall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Snoqualmie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Bend&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Enumclaw&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sammamish&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenmore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fall City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Black Diamond&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vashon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mercer Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bothell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodinville&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389843752058888:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[attr:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cum:avg:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cum:prc95:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[max:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[none:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:price:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:price:ok]' type='palette'>
            <map to='#499894'>
              <bucket>294111.27857142856</bucket>
            </map>
            <map to='#499894'>
              <bucket>440232.31363636366</bucket>
            </map>
            <map to='#499894'>
              <bucket>618695.10909090913</bucket>
            </map>
            <map to='#499894'>
              <bucket>1356523.9905362776</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>367091.48387096776</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>576834.80831826397</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>810289.69642857148</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>281194.86980609421</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>423665.98999999999</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>594706.54227405251</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>880077.752293578</bucket>
            </map>
            <map to='#79706e'>
              <bucket>304262.10820895521</bucket>
            </map>
            <map to='#79706e'>
              <bucket>469928.76772616134</bucket>
            </map>
            <map to='#79706e'>
              <bucket>645628.22614840989</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>296187.98046875</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>455617.11290322582</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>619944.14922813035</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2161300.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>284908.59649122809</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>423736.90582959639</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>612642.73831775703</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>899607.67307692312</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>353619.07472527475</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>551768.52091254748</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>792187.87381703465</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>234284.0351758794</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>387011.59026369167</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>579109.80827067664</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>849714.80978260865</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>319581.39402985072</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>521740.01467889908</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>685675.84353741491</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>286742.81162324647</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>424734.60451977403</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>617053.96601941751</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1096239.0074349442</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>310612.75572519086</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>489382.01709401712</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>676419.39215686277</bucket>
            </map>
            <map to='#d37295'>
              <bucket>311580.33638025593</bucket>
            </map>
            <map to='#d37295'>
              <bucket>490377.10769230768</bucket>
            </map>
            <map to='#d37295'>
              <bucket>677215.03473945404</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>334921.06267806271</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>529629.78246753244</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>790734.70473537606</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>355678.51612903224</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>359496.26041666669</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>570073.52014652011</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>803990.8194444445</bucket>
            </map>
            <map to='#e15759'>
              <bucket>300340.40293040295</bucket>
            </map>
            <map to='#e15759'>
              <bucket>462488.86925795052</bucket>
            </map>
            <map to='#e15759'>
              <bucket>634558.14482758625</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>289078.3455882353</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>424815.06315789477</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>617254.02127659577</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1194873.6382978724</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>240328.3717472119</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>418019.36094674555</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>585048.77906976745</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>859938.55421686743</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>316742.39055793989</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>493625.30982905981</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>682885.98989898991</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>302896.73928571428</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>464322.38976377953</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>645244.22648083628</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>251296.23999999999</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>420895.47536945814</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>586120.875</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>863228.94323144108</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:price:ok]' type='palette'>
            <map to='#499894'>
              <bucket>294111.27857142856</bucket>
            </map>
            <map to='#499894'>
              <bucket>440232.31363636366</bucket>
            </map>
            <map to='#499894'>
              <bucket>618695.10909090913</bucket>
            </map>
            <map to='#499894'>
              <bucket>1356523.9905362776</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>367091.48387096776</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>576834.80831826397</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>810289.69642857148</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>281194.86980609421</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>423665.98999999999</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>594706.54227405251</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>880077.752293578</bucket>
            </map>
            <map to='#79706e'>
              <bucket>304262.10820895521</bucket>
            </map>
            <map to='#79706e'>
              <bucket>469928.76772616134</bucket>
            </map>
            <map to='#79706e'>
              <bucket>645628.22614840989</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>296187.98046875</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>455617.11290322582</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>619944.14922813035</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2161300.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>284908.59649122809</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>423736.90582959639</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>612642.73831775703</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>899607.67307692312</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>353619.07472527475</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>551768.52091254748</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>792187.87381703465</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>234284.0351758794</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>387011.59026369167</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>579109.80827067664</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>849714.80978260865</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>319581.39402985072</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>521740.01467889908</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>685675.84353741491</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>286742.81162324647</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>424734.60451977403</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>617053.96601941751</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1096239.0074349442</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>310612.75572519086</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>489382.01709401712</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>676419.39215686277</bucket>
            </map>
            <map to='#d37295'>
              <bucket>311580.33638025593</bucket>
            </map>
            <map to='#d37295'>
              <bucket>490377.10769230768</bucket>
            </map>
            <map to='#d37295'>
              <bucket>677215.03473945404</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>334921.06267806271</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>529629.78246753244</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>790734.70473537606</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>355678.51612903224</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>359496.26041666669</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>570073.52014652011</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>803990.8194444445</bucket>
            </map>
            <map to='#e15759'>
              <bucket>300340.40293040295</bucket>
            </map>
            <map to='#e15759'>
              <bucket>462488.86925795052</bucket>
            </map>
            <map to='#e15759'>
              <bucket>634558.14482758625</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>289078.3455882353</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>424815.06315789477</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>617254.02127659577</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1194873.6382978724</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>240328.3717472119</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>418019.36094674555</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>585048.77906976745</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>859938.55421686743</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>316742.39055793989</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>493625.30982905981</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>682885.98989898991</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>302896.73928571428</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>464322.38976377953</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>645244.22648083628</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>251296.23999999999</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>420895.47536945814</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>586120.875</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>863228.94323144108</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[avg:price:ok]' type='palette'>
            <map to='#499894'>
              <bucket>294111.27857142856</bucket>
            </map>
            <map to='#499894'>
              <bucket>440232.31363636366</bucket>
            </map>
            <map to='#499894'>
              <bucket>618695.10909090913</bucket>
            </map>
            <map to='#499894'>
              <bucket>1356523.9905362776</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>367091.48387096776</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>576834.80831826397</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>810289.69642857148</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>281194.86980609421</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>423665.98999999999</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>594706.54227405251</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>880077.752293578</bucket>
            </map>
            <map to='#79706e'>
              <bucket>304262.10820895521</bucket>
            </map>
            <map to='#79706e'>
              <bucket>469928.76772616134</bucket>
            </map>
            <map to='#79706e'>
              <bucket>645628.22614840989</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>296187.98046875</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>455617.11290322582</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>619944.14922813035</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2161300.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>284908.59649122809</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>423736.90582959639</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>612642.73831775703</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>899607.67307692312</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>353619.07472527475</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>551768.52091254748</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>792187.87381703465</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>234284.0351758794</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>387011.59026369167</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>579109.80827067664</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>849714.80978260865</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>319581.39402985072</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>521740.01467889908</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>685675.84353741491</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>286742.81162324647</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>424734.60451977403</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>617053.96601941751</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1096239.0074349442</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>310612.75572519086</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>489382.01709401712</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>676419.39215686277</bucket>
            </map>
            <map to='#d37295'>
              <bucket>311580.33638025593</bucket>
            </map>
            <map to='#d37295'>
              <bucket>490377.10769230768</bucket>
            </map>
            <map to='#d37295'>
              <bucket>677215.03473945404</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>334921.06267806271</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>529629.78246753244</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>790734.70473537606</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>355678.51612903224</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>359496.26041666669</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>570073.52014652011</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>803990.8194444445</bucket>
            </map>
            <map to='#e15759'>
              <bucket>300340.40293040295</bucket>
            </map>
            <map to='#e15759'>
              <bucket>462488.86925795052</bucket>
            </map>
            <map to='#e15759'>
              <bucket>634558.14482758625</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>289078.3455882353</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>424815.06315789477</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>617254.02127659577</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1194873.6382978724</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>240328.3717472119</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>418019.36094674555</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>585048.77906976745</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>859938.55421686743</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>316742.39055793989</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>493625.30982905981</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>682885.98989898991</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>302896.73928571428</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>464322.38976377953</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>645244.22648083628</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>251296.23999999999</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>420895.47536945814</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>586120.875</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>863228.94323144108</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='&quot;Washington&quot;' />
        <semantic-value key='[ZipCode].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7070F0B019364D05818C4FC710D7638E'>
            <properties context=''>
              <relation all='true' name='Sheet1+' type='union'>
                <columns header='yes'>
                  <column datatype='integer' name='id' />
                  <column datatype='integer' name='date' />
                  <column datatype='integer' name='bedrooms' />
                  <column datatype='real' name='bathrooms' />
                  <column datatype='integer' name='sqft_living' />
                  <column datatype='integer' name='sqft_lot' />
                  <column datatype='real' name='floors' />
                  <column datatype='integer' name='waterfront' />
                  <column datatype='integer' name='view' />
                  <column datatype='integer' name='condition' />
                  <column datatype='integer' name='grade' />
                  <column datatype='integer' name='sqft_above' />
                  <column datatype='integer' name='sqft_basement' />
                  <column datatype='integer' name='yr_built' />
                  <column datatype='integer' name='yr_renovated' />
                  <column datatype='integer' name='zipcode' />
                  <column datatype='real' name='lat' />
                  <column datatype='real' name='long' />
                  <column datatype='integer' name='sqft_living15' />
                  <column datatype='integer' name='sqft_lot15' />
                  <column datatype='integer' name='price' />
                  <column datatype='string' name='city' />
                  <column datatype='string' name='Sheet' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='excel-direct.0ccmh9u1t2lkds15bqwkt0bjgqwz' name='Sheet1' table='[Sheet1$]' type='table'>
                  <columns gridOrigin='A1:V10001:no:A1:V10001:0' header='yes' outcome='6'>
                    <column datatype='integer' name='id' ordinal='0' />
                    <column datatype='integer' name='date' ordinal='1' />
                    <column datatype='integer' name='bedrooms' ordinal='2' />
                    <column datatype='real' name='bathrooms' ordinal='3' />
                    <column datatype='integer' name='sqft_living' ordinal='4' />
                    <column datatype='integer' name='sqft_lot' ordinal='5' />
                    <column datatype='real' name='floors' ordinal='6' />
                    <column datatype='integer' name='waterfront' ordinal='7' />
                    <column datatype='integer' name='view' ordinal='8' />
                    <column datatype='integer' name='condition' ordinal='9' />
                    <column datatype='integer' name='grade' ordinal='10' />
                    <column datatype='integer' name='sqft_above' ordinal='11' />
                    <column datatype='integer' name='sqft_basement' ordinal='12' />
                    <column datatype='integer' name='yr_built' ordinal='13' />
                    <column datatype='integer' name='yr_renovated' ordinal='14' />
                    <column datatype='integer' name='zipcode' ordinal='15' />
                    <column datatype='real' name='lat' ordinal='16' />
                    <column datatype='real' name='long' ordinal='17' />
                    <column datatype='integer' name='sqft_living15' ordinal='18' />
                    <column datatype='integer' name='sqft_lot15' ordinal='19' />
                    <column datatype='integer' name='price' ordinal='20' />
                    <column datatype='string' name='city' ordinal='21' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
          <object caption='Sheet2' id='Sheet2_D455470991C14B02AA82BE647CC5BC87'>
            <properties context=''>
              <relation connection='excel-direct.1ndxe5z15tqd0414xgg1x0rvqree' name='Sheet2' table='[Sheet2$]' type='table'>
                <columns gridOrigin='A2:C21439:no:A2:C21439:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row Labels' ordinal='0' />
                  <column datatype='integer' name='Count of id' ordinal='1' />
                  <column datatype='integer' name='binary' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='zip%' id='Table1_C3653261FC414FDCA80BDFBBAC837E9B'>
            <properties context=''>
              <relation connection='excel-direct.1gki5zj14goqhy17ee9u91o1h1nn' name='Table1' table='[Table1$]' type='table'>
                <columns gridOrigin='A1:B71:no:A1:B71:0' header='yes' outcome='6'>
                  <column datatype='integer' name='zipcode' ordinal='0' />
                  <column datatype='integer' name='floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100)' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='regression_data11' id='regression!data1_1444D4035436484C96A62E2D15E302F1'>
            <properties context=''>
              <relation connection='excel-direct.04ref781fqtvvu1foxn9719na3qg' name='regression_data11' table='[regression_data1$]' type='table'>
                <columns gridOrigin='A1:D21598:no:A1:D21598:0' header='yes' outcome='6'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='renovated' ordinal='2' />
                  <column datatype='integer' name='zipcode' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='regression_data1' id='regression!data1_6E1E0865AEB845D1BDB0544B49B7F923'>
            <properties context=''>
              <relation connection='excel-direct.1ca03rh0zan90m16of6ks0vv5bhn' name='regression_data1' table='[regression_data1$]' type='table'>
                <columns gridOrigin='A1:U10001:no:A1:U10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='integer' name='bedrooms' ordinal='2' />
                  <column datatype='real' name='bathrooms' ordinal='3' />
                  <column datatype='integer' name='sqft_living' ordinal='4' />
                  <column datatype='integer' name='sqft_lot' ordinal='5' />
                  <column datatype='real' name='floors' ordinal='6' />
                  <column datatype='integer' name='waterfront' ordinal='7' />
                  <column datatype='integer' name='view' ordinal='8' />
                  <column datatype='integer' name='condition' ordinal='9' />
                  <column datatype='integer' name='grade' ordinal='10' />
                  <column datatype='integer' name='sqft_above' ordinal='11' />
                  <column datatype='integer' name='sqft_basement' ordinal='12' />
                  <column datatype='integer' name='yr_built' ordinal='13' />
                  <column datatype='integer' name='yr_renovated' ordinal='14' />
                  <column datatype='integer' name='zipcode' ordinal='15' />
                  <column datatype='real' name='lat' ordinal='16' />
                  <column datatype='real' name='long' ordinal='17' />
                  <column datatype='integer' name='sqft_living15' ordinal='18' />
                  <column datatype='integer' name='sqft_lot15' ordinal='19' />
                  <column datatype='integer' name='price' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='zip_code_database' id='zip!code!database_31F8A1A90334498888E9393DD709BDFB'>
            <properties context=''>
              <relation connection='excel-direct.0laah2h0kqpeqv0zw3ucm1emb38w' name='zip_code_database' table='[zip_code_database$]' type='table'>
                <columns gridOrigin='A1:O42736:no:A1:O42736:0' header='yes' outcome='2'>
                  <column datatype='integer' name='zip' ordinal='0' />
                  <column datatype='string' name='type' ordinal='1' />
                  <column datatype='integer' name='decommissioned' ordinal='2' />
                  <column datatype='string' name='primary_city' ordinal='3' />
                  <column datatype='string' name='acceptable_cities' ordinal='4' />
                  <column datatype='string' name='unacceptable_cities' ordinal='5' />
                  <column datatype='string' name='state' ordinal='6' />
                  <column datatype='string' name='county' ordinal='7' />
                  <column datatype='string' name='timezone' ordinal='8' />
                  <column datatype='real' name='area_codes' ordinal='9' />
                  <column datatype='string' name='world_region' ordinal='10' />
                  <column datatype='string' name='country' ordinal='11' />
                  <column datatype='real' name='latitude' ordinal='12' />
                  <column datatype='real' name='longitude' ordinal='13' />
                  <column datatype='integer' name='irs_estimated_population' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[id (Sheet1+)]' />
            </expression>
            <first-end-point object-id='regression!data1_6E1E0865AEB845D1BDB0544B49B7F923' />
            <second-end-point object-id='Sheet1_7070F0B019364D05818C4FC710D7638E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[Row Labels]' />
            </expression>
            <first-end-point object-id='regression!data1_6E1E0865AEB845D1BDB0544B49B7F923' />
            <second-end-point object-id='Sheet2_D455470991C14B02AA82BE647CC5BC87' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[zip]' />
              <expression op='[zipcode (Table1)]' />
            </expression>
            <first-end-point object-id='zip!code!database_31F8A1A90334498888E9393DD709BDFB' />
            <second-end-point object-id='Table1_C3653261FC414FDCA80BDFBBAC837E9B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[id (regression!data11)]' />
            </expression>
            <first-end-point object-id='regression!data1_6E1E0865AEB845D1BDB0544B49B7F923' />
            <second-end-point object-id='regression!data1_1444D4035436484C96A62E2D15E302F1' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[zipcode]' />
              <expression op='[zip]' />
            </expression>
            <first-end-point object-id='regression!data1_6E1E0865AEB845D1BDB0544B49B7F923' />
            <second-end-point object-id='zip!code!database_31F8A1A90334498888E9393DD709BDFB' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource inline='true' name='Clipboard_20221117T192916' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clipboard_20221117T192916' name='Clipboard_20221117T192916leaf'>
            <connection class='textscan' directory='C:/Users/Stephan/Documents/Eigenes Tableau-Repository/Datenquellen' filename='Clipboard_20221117T192916.txt' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='Clipboard_20221117T192916leaf' name='Clipboard_20221117T192916#txt' table='[Clipboard_20221117T192916#txt]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='Clipboard_20221117T192916leaf' name='Clipboard_20221117T192916#txt' table='[Clipboard_20221117T192916#txt]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Clipboard_20221117T192916' datatype='table' name='[__tableau_internal_object_id__].[Clipboard_20221117T192916]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Clipboard_20221117T192916' id='Clipboard_20221117T192916'>
            <properties context=''>
              <relation connection='Clipboard_20221117T192916leaf' name='Clipboard_20221117T192916#txt' table='[Clipboard_20221117T192916#txt]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_075478DD64514C6A8538F3E94B8A16DE]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Seattle vs County' />
      <command command='tsc:brush'>
        <param name='field-captions' value='City (copy) (group)' />
        <param name='target' value='Seattle vs County' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_446F9B9FE6B84A99A611450C8DF25864]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Tittle' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Tittle' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='%increase'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Compound Growth Rate.Market YoY</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100)]' derivation='Avg' name='[avg:floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100):qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Floor(((Zip 2015.Price - Zip 2014.Price)/Zip 2014.Price)*100)' datatype='integer' default-format='*00000' name='[floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100)]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100)]' derivation='Sum' name='[sum:floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100):qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;0,5 - 1&quot;' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;1,25 - 2&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='member' level='[Floors (group)]' member='&quot;2 - 2,5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100):qk]' included-values='in-range'>
            <min>-31.0</min>
            <max>14.0</max>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:zipcode:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:zipcode:ok]' member='98002' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98005' />
                <groupfilter from='98007' function='range' level='[none:zipcode:ok]' to='98022' />
                <groupfilter from='98027' function='range' level='[none:zipcode:ok]' to='98033' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98038' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98040' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98042' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98052' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98053' />
                <groupfilter from='98056' function='range' level='[none:zipcode:ok]' to='98059' />
                <groupfilter from='98072' function='range' level='[none:zipcode:ok]' to='98075' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98103' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98108' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98109' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98115' />
                <groupfilter from='98117' function='range' level='[none:zipcode:ok]' to='98125' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98136' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98146' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98148' />
                <groupfilter function='member' level='[none:zipcode:ok]' member='98199' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100):qk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' field-type='quantitative' max='-13483757.930875484' min='-13727095.625032611' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Latitude (generated)]' field-type='quantitative' max='6089343.8306236248' min='5957941.4705573153' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' field-type='quantitative' fold='true' max='-13483757.930875484' min='-13727095.625032611' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100):qk]' num-steps='6' palette='orange_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100):qk]' value='% avg Price Zip'>
              <formatted-text>
                <run>% avg Price Zip</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100):qk]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]' />
              <geometry column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[Latitude (generated)]</rows>
        <cols>([federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)] + [federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{3FBBDB31-1550-4832-84C6-40B4013C9D64}' />
    </worksheet>
    <worksheet name='Diagrama'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Bold'>House Market</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column caption='avg price floor' datatype='integer' name='[Calculation_761389843752058888]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOOR(AVG([price]))' />
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:qk]' pivot='key' type='quantitative' />
            <column-instance column='[renovated]' derivation='None' name='[none:renovated:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Renovated' datatype='string' name='[renovated]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_761389843752058888]' derivation='User' name='[usr:Calculation_761389843752058888:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='level-members' level='[Bathrooms (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='level-members' level='[Floors (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='level-members' level='[none:bedrooms:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='member' level='[none:city:nk]' member='&quot;Seattle&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]' included-values='in-range-or-null'>
            <min>1</min>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]'>
            <groupfilter function='member' level='[none:renovated:nk]' member='&quot;no&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' scope='cols' value='N° Properties' />
            <format attr='title' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389843752058888:qk]' scope='rows' value='AVG Price' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' value='Properties'>
              <formatted-text>
                <run>Properties</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' />
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389843752058888:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
                <format attr='font-weight' value='normal' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='size' value='1.2853591442108154' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='743' />
                <format attr='maxwidth' value='743' />
                <format attr='minheight' value='366' />
                <format attr='maxheight' value='366' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='743' />
                <format attr='maxwidth' value='743' />
                <format attr='minheight' value='366' />
                <format attr='maxheight' value='366' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='743' />
                <format attr='maxwidth' value='743' />
                <format attr='minheight' value='366' />
                <format attr='maxheight' value='366' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='743' />
                <format attr='maxwidth' value='743' />
                <format attr='minheight' value='366' />
                <format attr='maxheight' value='366' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389843752058888:qk]</rows>
        <cols>[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{35BD314B-5894-4B99-A4A3-C446C2E0DB25}' />
    </worksheet>
    <worksheet name='Diagrama (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Bold'>House Market</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column caption='avg price floor' datatype='integer' name='[Calculation_761389843752058888]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOOR(AVG([price]))' />
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:qk]' pivot='key' type='quantitative' />
            <column-instance column='[renovated]' derivation='None' name='[none:renovated:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Renovated' datatype='string' name='[renovated]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_761389843752058888]' derivation='User' name='[usr:Calculation_761389843752058888:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;0,5 - 1&quot;' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;1,25 - 2&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='member' level='[Floors (group)]' member='&quot;2 - 2,5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='quantitative' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]' included-values='in-range'>
            <min>1</min>
            <max>5</max>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:renovated:nk]' />
              <groupfilter function='member' level='[none:renovated:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389843752058888:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk] + [federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389843752058888:qk])</rows>
        <cols>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</cols>
      </table>
      <simple-id uuid='{681F6E4E-A7BA-4956-AD9E-8F195BC410AE}' />
    </worksheet>
    <worksheet name='KPIs'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Bold'>KPIs -Seattle &amp; Kings County                                                 </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city]' derivation='CountD' name='[ctd:city:qk]' pivot='key' type='quantitative' />
            <column-instance column='[zipcode]' derivation='CountD' name='[ctd:zipcode:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:zipcode:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:city:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:price:qk]&quot;</bucket>
              <bucket>&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Bathrooms (group)]' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Floors (group)]' />
              <groupfilter function='member' level='[Floors (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:bedrooms:ok]' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:city:nk]' />
              <groupfilter function='member' level='[none:city:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#4e79a7' />
            <format attr='height' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]' value='19' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]' value='196' />
            <format attr='height-header' value='20' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1a45c5706zag3910h5ka00sn5u7x].[Multiple Values]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{F0F529C0-E94E-439B-8D64-C46C026A913D}' />
    </worksheet>
    <worksheet name='Seattle &amp; King County. Market Price Map '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Bold'>Market Price Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:ok]' pivot='key' type='ordinal' />
            <column-instance column='[renovated]' derivation='None' name='[none:renovated:nk]' pivot='key' type='nominal' />
            <column-instance column='[yr_built]' derivation='None' name='[none:yr_built:qk]' pivot='key' type='quantitative' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Renovated' datatype='string' name='[renovated]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;0,5 - 1&quot;' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;1,25 - 2&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='level-members' level='[Floors (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' included-values='in-range'>
            <min>195000.0</min>
            <max>2161300.0</max>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]'>
            <groupfilter function='level-members' level='[none:condition:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]'>
            <groupfilter function='level-members' level='[none:renovated:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:yr_built:qk]' included-values='in-range'>
            <min>1900</min>
            <max>2015</max>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:yr_built:qk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' field-type='quantitative' max='-13494387.967566084' min='-13701417.370754311' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Latitude (generated)]' field-type='quantitative' max='6091180.289559599' min='5982971.0404296294' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' field-type='quantitative' fold='true' max='-13494387.967566084' min='-13701417.370754311' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' num-steps='5' palette='tableau-map-blue-green' type='interpolated' />
            <encoding attr='size' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' value='N° times property sold'>
              <formatted-text>
                <run>N° times property sold</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='882' />
                <format attr='maxwidth' value='882' />
                <format attr='minheight' value='461' />
                <format attr='maxheight' value='461' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]' />
              <geometry column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' />
              <size column='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='1.7865926027297974' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[Latitude (generated)]</rows>
        <cols>([federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)] + [federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{26B4A055-D5EB-4CE5-934B-457CAD21DFE5}' />
    </worksheet>
    <worksheet name='Seattle &amp; King County. Market Price Map (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Bold'>Market Price Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column caption='Calculation y' datatype='real' name='[Calculation_761389843799560202]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='497414.55307262 -13787.9155057*[grade] +  19850.27900452*[sqft_living] + 87542.72046603*[lat] + 15612.8563094*[yr_built] -61738.00182949*[view] +  5632.79162094*[bathrooms] + 9602.84185567*[zipcode] + 28486.87659874*[floors] + 15383.07477168*[condition] +100721.52111329*[bedrooms] -18639.47918712*[waterfront] +80242.25277166*[long] -8702.806518*[yr_renovated]' />
            </column>
            <column datatype='integer' name='[Count of id]' role='measure' type='quantitative' />
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='Sheet1' datatype='integer' name='[__tableau_internal_object_id__].[Sheet1_7070F0B019364D05818C4FC710D7638E]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Row Labels]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Sheet2' datatype='integer' name='[__tableau_internal_object_id__].[Sheet2_D455470991C14B02AA82BE647CC5BC87]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7070F0B019364D05818C4FC710D7638E]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Sheet2' datatype='table' name='[__tableau_internal_object_id__].[Sheet2_D455470991C14B02AA82BE647CC5BC87]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Sheet1_7070F0B019364D05818C4FC710D7638E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_7070F0B019364D05818C4FC710D7638E:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Sheet2_D455470991C14B02AA82BE647CC5BC87]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet2_D455470991C14B02AA82BE647CC5BC87:qk]' pivot='key' type='quantitative' />
            <column caption='Area Codes' datatype='real' name='[area_codes]' role='measure' type='quantitative' />
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='Binary' datatype='integer' name='[binary]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Decommissioned' datatype='integer' name='[decommissioned]' role='measure' type='quantitative' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Grade' datatype='integer' name='[grade]' role='measure' type='quantitative' />
            <column caption='Irs Estimated Population' datatype='integer' name='[irs_estimated_population]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:ok]' pivot='key' type='ordinal' />
            <column-instance column='[renovated]' derivation='None' name='[none:renovated:nk]' pivot='key' type='nominal' />
            <column-instance column='[yr_built]' derivation='None' name='[none:yr_built:qk]' pivot='key' type='quantitative' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Renovated' datatype='string' name='[renovated]' role='dimension' type='nominal' />
            <column caption='Sqft Above' datatype='integer' name='[sqft_above]' role='measure' type='quantitative' />
            <column caption='Sqft Living' datatype='integer' name='[sqft_living]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_761389843799560202]' derivation='Sum' name='[sum:Calculation_761389843799560202:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Count of id]' derivation='Sum' name='[sum:Count of id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Row Labels]' derivation='Sum' name='[sum:Row Labels:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area_codes]' derivation='Sum' name='[sum:area_codes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bathrooms]' derivation='Sum' name='[sum:bathrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='Sum' name='[sum:bedrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[binary]' derivation='Sum' name='[sum:binary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[condition]' derivation='Sum' name='[sum:condition:qk]' pivot='key' type='quantitative' />
            <column-instance column='[decommissioned]' derivation='Sum' name='[sum:decommissioned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[floors]' derivation='Sum' name='[sum:floors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[grade]' derivation='Sum' name='[sum:grade:qk]' pivot='key' type='quantitative' />
            <column-instance column='[irs_estimated_population]' derivation='Sum' name='[sum:irs_estimated_population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sqft_above]' derivation='Sum' name='[sum:sqft_above:qk]' pivot='key' type='quantitative' />
            <column caption='View' datatype='integer' name='[view]' role='measure' type='quantitative' />
            <column caption='Waterfront' datatype='integer' name='[waterfront]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='quantitative' />
            <column caption='Yr Renovated' datatype='integer' name='[yr_renovated]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:area_codes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:bathrooms:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:bedrooms:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:binary:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:Calculation_761389843799560202:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:condition:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[__tableau_internal_object_id__].[cnt:Sheet1_7070F0B019364D05818C4FC710D7638E:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[__tableau_internal_object_id__].[cnt:Sheet2_D455470991C14B02AA82BE647CC5BC87:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:Count of id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:decommissioned:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:floors:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:grade:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:irs_estimated_population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:lat:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:latitude:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:long:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:longitude:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:Row Labels:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:sqft_above:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:price:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;0,5 - 1&quot;' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;1,25 - 2&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='member' level='[Floors (group)]' member='&quot;2 - 2,5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' included-values='in-range'>
            <min>195000.0</min>
            <max>2161300.0</max>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]'>
            <groupfilter function='level-members' level='[none:condition:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]'>
            <groupfilter function='level-members' level='[none:renovated:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:yr_built:qk]' included-values='in-range'>
            <min>1900</min>
            <max>2015</max>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]'>
            <groupfilter from='98001' function='range' level='[none:zipcode:ok]' to='98199' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:yr_built:qk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' num-steps='6' palette='tableau-map-blue-green' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='1.7865926027297974' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='882' />
                <format attr='maxwidth' value='882' />
                <format attr='minheight' value='461' />
                <format attr='maxheight' value='461' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[Multiple Values]</rows>
        <cols />
      </table>
      <simple-id uuid='{C8948D86-1B50-4B2B-B5F9-4C3C1327E35C}' />
    </worksheet>
    <worksheet name='Seattle vs County'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Bold'>Seattle vs County</run>
            <run>Æ&#10;</run>
            <run fontcolor='#4e79a7' fontsize='10'>Property distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[City (copy) (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[City (copy)_761389843660566532]' new-bin='true'>
                <bin default-name='false' value='&quot;County&quot;'>
                  <value>&quot;Auburn&quot;</value>
                  <value>&quot;Bellevue&quot;</value>
                  <value>&quot;Black Diamond&quot;</value>
                  <value>&quot;Bothell&quot;</value>
                  <value>&quot;Carnation&quot;</value>
                  <value>&quot;Duvall&quot;</value>
                  <value>&quot;Enumclaw&quot;</value>
                  <value>&quot;Fall City&quot;</value>
                  <value>&quot;Federal Way&quot;</value>
                  <value>&quot;Issaquah&quot;</value>
                  <value>&quot;Kenmore&quot;</value>
                  <value>&quot;Kent&quot;</value>
                  <value>&quot;Kirkland&quot;</value>
                  <value>&quot;Maple Valley&quot;</value>
                  <value>&quot;Medina&quot;</value>
                  <value>&quot;Mercer Island&quot;</value>
                  <value>&quot;North Bend&quot;</value>
                  <value>&quot;Redmond&quot;</value>
                  <value>&quot;Renton&quot;</value>
                  <value>&quot;Sammamish&quot;</value>
                  <value>&quot;Snoqualmie&quot;</value>
                  <value>&quot;Vashon&quot;</value>
                  <value>&quot;Woodinville&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='City (copy)' datatype='string' name='[City (copy)_761389843660566532]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[city]' />
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='Count' name='[pcto:cnt:id:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Bathrooms (group)]' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Floors (group)]' />
              <groupfilter function='member' level='[Floors (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter from='1' function='range' level='[none:bedrooms:ok]' to='33' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='551' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[City (copy) (group)]' value=''>
              <formatted-text />
            </format>
            <format attr='size' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' value='Properties'>
              <formatted-text>
                <run>Properties</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[City (copy) (group)]' />
              <wedge-size column='[federated.1a45c5706zag3910h5ka00sn5u7x].[pcto:cnt:id:qk]' />
              <size column='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' />
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[City (copy) (group)]' />
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[pcto:cnt:id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{84CB5CBA-22FD-429E-8858-4C70C3819CA2}' />
    </worksheet>
    <worksheet name='Seattle&amp;King County.Price&amp;N°.Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[primary_city]' derivation='None' name='[none:primary_city:nk]' pivot='key' type='nominal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Primary City' datatype='string' name='[primary_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk]' value='40' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' />
              <size column='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.85759258270263672' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</rows>
        <cols>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk]</cols>
      </table>
      <simple-id uuid='{905E6F2A-7ACB-46C6-B210-1A2CC477BB21}' />
    </worksheet>
    <worksheet name='Seattle&amp;King County.Price.Bar (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Bold'>Seattle &amp; King County </run>
            <run>Æ&#10;</run>
            <run fontcolor='#4e79a7' fontsize='11'>N° sold properties  &amp; AVG price </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;0,5 - 1&quot;' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;1,25 - 2&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='member' level='[Floors (group)]' member='&quot;2 - 2,5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' scope='rows' value='AVG Price' />
            <format attr='title' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' scope='rows' value='N° of sells' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk] + [federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk])</rows>
        <cols>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</cols>
      </table>
      <simple-id uuid='{29238D3A-F4D1-4D29-BEA4-4EA9CB6B9B64}' />
    </worksheet>
    <worksheet name='SeattleCity.map.Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[primary_city]' derivation='None' name='[none:primary_city:nk]' pivot='key' type='nominal' />
            <column-instance column='[renovated]' derivation='None' name='[none:renovated:nk]' pivot='key' type='nominal' />
            <column-instance column='[yr_built]' derivation='None' name='[none:yr_built:qk]' pivot='key' type='quantitative' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Primary City' datatype='string' name='[primary_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Renovated' datatype='string' name='[renovated]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;0,5 - 1&quot;' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;1,25 - 2&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='member' level='[Floors (group)]' member='&quot;2 - 2,5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]'>
            <groupfilter function='level-members' level='[none:condition:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:price:qk]' included-values='in-range'>
            <min>78000</min>
            <max>7556728</max>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:primary_city:nk]' />
              <groupfilter function='member' level='[none:primary_city:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]'>
            <groupfilter function='member' level='[none:renovated:nk]' member='&quot;yes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:yr_built:qk]' included-values='in-range'>
            <min>1900</min>
            <max>2015</max>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:price:qk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:yr_built:qk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' field-type='quantitative' max='-13499097.998936772' min='-13679678.746244285' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Latitude (generated)]' field-type='quantitative' max='6071708.2132048095' min='5949762.2494381992' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' field-type='quantitative' fold='true' max='-13499097.998936772' min='-13679678.746244285' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' palette='orange_gold_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1004' />
                <format attr='maxwidth' value='1004' />
                <format attr='minheight' value='678' />
                <format attr='maxheight' value='678' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]' />
              <geometry column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-family' value='Yu Gothic' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' />
              <size column='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='0.67622220516204834' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[Latitude (generated)]</rows>
        <cols>([federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)] + [federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{6BFC5C2E-3A4C-4A85-968E-D45313924335}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;0,5 - 1&quot;' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;1,25 - 2&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='member' level='[Floors (group)]' member='&quot;2 - 2,5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]' />
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BBD9A260-8E7A-4445-977B-EA68BFB1DBB3}' />
    </worksheet>
    <worksheet name='Yearly. market.behavior (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[primary_city]' derivation='None' name='[none:primary_city:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='Avg' name='[pcdf:avg:price:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.1a45c5706zag3910h5ka00sn5u7x].[date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Primary City' datatype='string' name='[primary_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' scope='rows' value='AVG Price.Count' />
            <format attr='title' class='1' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' scope='rows' value='AVG.Price.%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' num-steps='5' palette='blue_teal_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk]' num-steps='5' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk]' />
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk] + [federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk])</rows>
        <cols>([federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk] / [federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok])</cols>
      </table>
      <simple-id uuid='{C5497B22-D948-41C7-9FB9-47E29BD85245}' />
    </worksheet>
    <worksheet name='Yearly.market.behaviour'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[primary_city]' derivation='None' name='[none:primary_city:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='Avg' name='[pcdf:avg:price:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative,Compounded' ordering-field='[federated.1a45c5706zag3910h5ka00sn5u7x].[date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-2</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Primary City' datatype='string' name='[primary_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' num-steps='5' palette='blue_teal_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk]' num-steps='5' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk]' />
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk] + [federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk])</rows>
        <cols>([federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk] / [federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok])</cols>
      </table>
      <simple-id uuid='{BAD42015-4815-4247-A2E5-C607BA92A0B3}' />
    </worksheet>
    <worksheet name='correlations'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontsize='16'>Correlations: Price vs Sqft Living and Grade</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Grade' datatype='integer' name='[grade]' role='measure' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[grade]' derivation='None' name='[none:grade:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sqft_living]' derivation='None' name='[none:sqft_living:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Sqft Living' datatype='integer' name='[sqft_living]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;0,5 - 1&quot;' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;1,25 - 2&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='member' level='[Floors (group)]' member='&quot;2 - 2,5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:grade:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:sqft_living:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Price: R-Squared: 0,49</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sqft Living: R-Squared: 0,39</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:price:qk]</rows>
        <cols>([federated.1a45c5706zag3910h5ka00sn5u7x].[none:sqft_living:qk] + [federated.1a45c5706zag3910h5ka00sn5u7x].[none:grade:qk])</cols>
      </table>
      <simple-id uuid='{FAC70871-9FA2-48B5-B4DD-0BB065B05400}' />
    </worksheet>
    <worksheet name='diagrama.bueno'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Bold'>House Market</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column caption='avg price floor' datatype='integer' name='[Calculation_761389843752058888]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOOR(AVG([price]))' />
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:ok]' pivot='key' type='ordinal' />
            <column-instance column='[renovated]' derivation='None' name='[none:renovated:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Renovated' datatype='string' name='[renovated]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_761389843752058888]' derivation='User' name='[usr:Calculation_761389843752058888:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;0,5 - 1&quot;' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;1,25 - 2&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='member' level='[Floors (group)]' member='&quot;2 - 2,5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]'>
            <groupfilter from='1' function='range' level='[none:condition:ok]' to='5' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:renovated:nk]' />
              <groupfilter function='member' level='[none:renovated:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' scope='cols' value='N° Properties' />
            <format attr='title' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389843752058888:qk]' scope='rows' value='AVG Price' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' value='Properties'>
              <formatted-text>
                <run>Properties</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' />
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389843752058888:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='743' />
                <format attr='maxwidth' value='743' />
                <format attr='minheight' value='366' />
                <format attr='maxheight' value='366' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='743' />
                <format attr='maxwidth' value='743' />
                <format attr='minheight' value='366' />
                <format attr='maxheight' value='366' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='743' />
                <format attr='maxwidth' value='743' />
                <format attr='minheight' value='366' />
                <format attr='maxheight' value='366' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='743' />
                <format attr='maxwidth' value='743' />
                <format attr='minheight' value='366' />
                <format attr='maxheight' value='366' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389843752058888:qk]</rows>
        <cols>[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{F71A6BB3-4D53-4F41-BB1B-E2C1DC15918E}' />
    </worksheet>
    <worksheet name='diagrama.bueno (2)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column caption='avg price floor' datatype='integer' name='[Calculation_761389843752058888]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOOR(AVG([price]))' />
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:ok]' pivot='key' type='ordinal' />
            <column-instance column='[renovated]' derivation='None' name='[none:renovated:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Renovated' datatype='string' name='[renovated]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_761389843752058888]' derivation='User' name='[usr:Calculation_761389843752058888:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389843752058888:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Bathrooms (group)]' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Floors (group)]' />
              <groupfilter function='member' level='[Floors (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter from='1' function='range' level='[none:bedrooms:ok]' to='33' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]'>
            <groupfilter from='1' function='range' level='[none:condition:ok]' to='5' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:renovated:nk]' />
              <groupfilter function='member' level='[none:renovated:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]' value='124' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]</rows>
        <cols>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</cols>
      </table>
      <simple-id uuid='{B87E9753-1165-4ACF-BE5E-D3D44F1B6DF9}' />
    </worksheet>
    <worksheet name='map. filter.draft'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[bathrooms]' derivation='None' name='[none:bathrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:qk]' pivot='key' type='quantitative' />
            <column-instance column='[floors]' derivation='None' name='[none:floors:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[renovated]' derivation='None' name='[none:renovated:nk]' pivot='key' type='nominal' />
            <column-instance column='[yr_built]' derivation='None' name='[none:yr_built:qk]' pivot='key' type='quantitative' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Renovated' datatype='string' name='[renovated]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
            <column caption='Yr Built' datatype='integer' name='[yr_built]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;0,5 - 1&quot;' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;1,25 - 2&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='member' level='[Floors (group)]' member='&quot;2 - 2,5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bathrooms:ok]'>
            <groupfilter function='level-members' level='[none:bathrooms:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='quantitative' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]' included-values='in-range'>
            <min>1</min>
            <max>5</max>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:floors:ok]'>
            <groupfilter function='level-members' level='[none:floors:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:price:qk]' included-values='in-range'>
            <min>78000</min>
            <max>7700000</max>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:renovated:nk]' />
              <groupfilter function='member' level='[none:renovated:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:yr_built:qk]' included-values='in-range'>
            <min>1900</min>
            <max>2015</max>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:price:qk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:yr_built:qk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:floors:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bathrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' field-type='quantitative' max='-13567818.759265302' min='-13655230.749266498' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Latitude (generated)]' field-type='quantitative' max='6080106.9489439093' min='5977045.7517860681' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' field-type='quantitative' fold='true' max='-13567818.759265302' min='-13655230.749266498' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='391' />
                <format attr='maxwidth' value='391' />
                <format attr='minheight' value='461' />
                <format attr='maxheight' value='461' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]' />
              <geometry column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' />
              <size column='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[Latitude (generated)]</rows>
        <cols>([federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)] + [federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{13A67082-A929-4EED-B499-77C3C16BD48F}' />
    </worksheet>
    <worksheet name='prediction'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[cum:avg:price:qk:4]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:qk]' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column-instance column='[price]' derivation='Max' name='[cum:max:price:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:qk]' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column-instance column='[price]' derivation='Median' name='[cum:med:price:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:qk]' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column-instance column='[price]' derivation='Min' name='[cum:min:price:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:qk]' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:ok]' pivot='key' type='ordinal' />
            <column-instance column='[renovated]' derivation='None' name='[none:renovated:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Renovated' datatype='string' name='[renovated]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cum:avg:price:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cum:max:price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cum:med:price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a45c5706zag3910h5ka00sn5u7x].[cum:min:price:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Bathrooms (group)]' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Floors (group)]' />
              <groupfilter function='member' level='[Floors (group)]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:city:nk]' />
              <groupfilter function='member' level='[none:city:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]'>
            <groupfilter from='1' function='range' level='[none:condition:ok]' to='5' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:renovated:nk]' />
              <groupfilter function='member' level='[none:renovated:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]</rows>
        <cols>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{81B0ADC4-36BA-4C54-ACF7-8666748A98A6}' />
    </worksheet>
    <worksheet name='show.mode'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column caption='mode' datatype='integer' name='[Calculation_761389844023275533]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED  [id]: max(&#13;&#10;if { FIXED [id],price:count(price)}&#13;&#10;=&#13;&#10;{ fixed[id]:max({FIXED [id],price: count([id])})}then&#13;&#10;[id]&#13;&#10;END)&#13;&#10;}' />
            </column>
            <column caption='avgPRICE.aggregation' datatype='real' name='[Calculation_761389844027891727]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='AVG([price])' />
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[price]' derivation='Count' name='[cnt:price:qk]' pivot='key' type='quantitative' />
            <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:ok]' pivot='key' type='ordinal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_761389844023275533]' derivation='Sum' name='[sum:Calculation_761389844023275533:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_761389844027891727]' derivation='User' name='[usr:Calculation_761389844027891727:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;0,5 - 1&quot;' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;1,25 - 2&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='member' level='[Floors (group)]' member='&quot;2 - 2,5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]'>
            <groupfilter from='1' function='range' level='[none:condition:ok]' to='5' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:id:ok]' direction='DESC' using='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:price:qk]' />
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:Calculation_761389844023275533:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1a45c5706zag3910h5ka00sn5u7x].[none:id:ok] / [federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389844027891727:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{31BE1A74-CBC3-4908-91CE-1B4DDF6828B5}' />
    </worksheet>
    <worksheet name='titulo'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
            <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
                <bin default-name='false' value='&quot;0,5 - 1&quot;'>
                  <value>0.5</value>
                  <value>0.75</value>
                  <value>1.0</value>
                </bin>
                <bin default-name='false' value='&quot;1,25 - 2&quot;'>
                  <value>1.25</value>
                  <value>1.5</value>
                  <value>1.75</value>
                  <value>2.0</value>
                </bin>
                <bin default-name='false' value='&quot;2,25 - 3&quot;'>
                  <value>2.25</value>
                  <value>2.5</value>
                  <value>2.75</value>
                  <value>3.0</value>
                </bin>
                <bin default-name='false' value='&quot;3,25 - 4&quot;'>
                  <value>3.25</value>
                  <value>3.5</value>
                  <value>3.75</value>
                  <value>4.0</value>
                </bin>
                <bin default-name='false' value='&quot;4,25 - 5&quot;'>
                  <value>4.25</value>
                  <value>4.5</value>
                  <value>4.75</value>
                  <value>5.0</value>
                </bin>
                <bin default-name='false' value='&quot;5,25 - 6&quot;'>
                  <value>5.25</value>
                  <value>5.5</value>
                  <value>5.75</value>
                  <value>6.0</value>
                </bin>
                <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
                  <value>6.25</value>
                  <value>6.5</value>
                  <value>6.75</value>
                </bin>
                <bin default-name='false' value='&quot;7,5 -  8&quot;'>
                  <value>7.5</value>
                  <value>7.75</value>
                  <value>8.0</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[floors]' new-bin='true'>
                <bin default-name='false' value='&quot;1 - 1,5&quot;'>
                  <value>1.0</value>
                  <value>1.5</value>
                </bin>
                <bin default-name='false' value='&quot;2 - 2,5&quot;'>
                  <value>2.0</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;3 - 3,5&quot;'>
                  <value>3.0</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='Count' name='[cnt:city:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;0,5 - 1&quot;' />
              <groupfilter function='member' level='[Bathrooms (group)]' member='&quot;1,25 - 2&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]'>
            <groupfilter function='member' level='[Floors (group)]' member='&quot;2 - 2,5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:bedrooms:ok]' member='1' />
              <groupfilter function='member' level='[none:bedrooms:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</column>
            <column>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' field-type='quantitative' max='-13500586.892786112' min='-13662572.476291943' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Latitude (generated)]' field-type='quantitative' max='6070849.8510938073' min='5968554.843847272' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' field-type='quantitative' fold='true' max='-13500586.892786112' min='-13662572.476291943' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:price:qk]' palette='tableau-map-blue-green' type='interpolated' />
            <encoding attr='color' field='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' num-steps='18' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dfe6</color>
                <color>#becddc</color>
                <color>#a6bdd2</color>
                <color>#90adc7</color>
                <color>#7c9dbd</color>
                <color>#698fb3</color>
                <color>#5781a8</color>
                <color>#47749e</color>
                <color>#386794</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:city:qk]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' />
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' />
              <lod column='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]' />
              <geometry column='[federated.1a45c5706zag3910h5ka00sn5u7x].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='42' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f5f5f5' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a45c5706zag3910h5ka00sn5u7x].[Latitude (generated)]</rows>
        <cols>([federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)] + [federated.1a45c5706zag3910h5ka00sn5u7x].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{1020F120-0B56-4CAA-89F8-4F1B94B508B0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Appendix'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='49625' id='3' name='Yearly. market.behavior (2)' w='50900' x='4400' y='7875' />
        <zone h='42625' id='6' name='%increase' w='55100' x='1000' y='58750' />
        <zone h='9500' id='7' name='%increase' pane-specification-id='3' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100):qk]' type-v2='color' w='14000' x='1400' y='64875' />
        <zone h='38000' id='8' name='Seattle&amp;King County.Price&amp;N°.Bar' w='42900' x='56600' y='60000' />
        <zone h='47125' id='9' name='Seattle&amp;King County.Price.Bar (2)' w='41700' x='57200' y='10500' />
        <zone h='7250' id='10' name='Seattle&amp;King County.Price.Bar (2)' pane-specification-id='2' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]' type-v2='color' w='14000' x='82100' y='12875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='68' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='67' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49625' id='3' is-fixed='true' name='Yearly. market.behavior (2)' w='50900' x='4400' y='7875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47125' id='9' is-fixed='true' name='Seattle&amp;King County.Price.Bar (2)' w='41700' x='57200' y='10500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='10' name='Seattle&amp;King County.Price.Bar (2)' pane-specification-id='2' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]' type-v2='color' w='14000' x='82100' y='12875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42625' id='6' is-fixed='true' name='%increase' w='55100' x='1000' y='58750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9500' id='7' name='%increase' pane-specification-id='3' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100):qk]' type-v2='color' w='14000' x='1400' y='64875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38000' id='8' is-fixed='true' name='Seattle&amp;King County.Price&amp;N°.Bar' w='42900' x='56600' y='60000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CBA291A7-8794-4FF7-B0E3-71AF6DD47D9C}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Conclusion'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='76750' id='6' type-v2='empty' w='94100' x='3300' y='5125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#e6e6e6' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='30250' id='3' type-v2='text' w='59300' x='22400' y='22250'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Conclusion</run>
            <run>Æ&#10;&#10;</run>
            <run bold='true' fontcolor='#000000' fontsize='12'>The timeline of this data unfortunately is not enough to elaborate an accurate predictional model, since is just two years data. You can estimate some weak market tendencies, such as price/Zip/City or Sqm, but still not being strong enough to be used as a closer predictor.</run>
            <run>Æ&#10;&#10;</run>
            <run bold='true' fontcolor='#000000' fontsize='12'>The main features that will describe if a house is valued at more than 650K are as follows:  </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>sqft_living, waterfront,  and renovation.</run>
            <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
          </formatted-text>
        </zone>
        <zone h='4625' id='41' type-v2='dashboard-object' w='8000' x='86800' y='7250'>
          <button action='tabdoc:goto-sheet window-id=&quot;{A0FACC0A-3010-4ECA-BCD2-B2003E23600A}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Next</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#898989' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='4125' id='42' type-v2='dashboard-object' w='8100' x='86800' y='13125'>
          <button action='tabdoc:goto-sheet window-id=&quot;{2CB44515-ECC5-4019-A1D8-C130E0BC71AA}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Back</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#898989' />
            </button-visual-state>
          </button>
        </zone>
        <zone forceUpdate='true' h='15125' id='53' type-v2='text' w='83300' x='9900' y='61375'>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold' fontsize='11' underline='true'>Python Predicitonal Function </run>
            <run>Æ&#10;&#10;</run>
            <run bold='true' fontcolor='#000000'>Y</run>
            <run>= 497414.55307262 -13787.9155057*</run>
            <run bold='true' fontcolor='#000000'>grade</run>
            <run>+  19850.27900452*</run>
            <run bold='true' fontcolor='#000000'>sqft_living </run>
            <run>+ 87542.72046603*</run>
            <run bold='true' fontcolor='#000000'>lat</run>
            <run> + 15612.8563094*</run>
            <run bold='true' fontcolor='#000000'>yr_buil</run>
            <run>t -61738.00182949*</run>
            <run bold='true' fontcolor='#000000'>view </run>
            <run>+  5632.79162094*</run>
            <run bold='true' fontcolor='#000000'>bathrooms </run>
            <run>+ 9602.84185567*</run>
            <run bold='true' fontcolor='#000000'>zipcode</run>
            <run> + 28486.87659874*</run>
            <run bold='true' fontcolor='#000000'>floors  </run>
            <run>+ 15383.07477168*</run>
            <run bold='true' fontcolor='#000000'>condition</run>
            <run> +100721.52111329*</run>
            <run bold='true' fontcolor='#000000'>bedrooms </run>
            <run>-18639.47918712*</run>
            <run bold='true' fontcolor='#000000'>waterfront</run>
            <run> +80242.25277166*</run>
            <run bold='true' fontcolor='#000000'>long </run>
            <run>-8702.806518*</run>
            <run bold='true' fontcolor='#000000'>yr_renovated</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5f5f5' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='101' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='100' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='4625' id='41' type-v2='dashboard-object' w='8000' x='86800' y='7250'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{A0FACC0A-3010-4ECA-BCD2-B2003E23600A}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Next</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#898989' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4125' id='42' type-v2='dashboard-object' w='8100' x='86800' y='13125'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{2CB44515-ECC5-4019-A1D8-C130E0BC71AA}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Back</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#898989' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='30250' id='3' type-v2='text' w='59300' x='22400' y='22250'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Conclusion</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontsize='12'>The timeline of this data unfortunately is not enough to elaborate an accurate predictional model, since is just two years data. You can estimate some weak market tendencies, such as price/Zip/City or Sqm, but still not being strong enough to be used as a closer predictor.</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000' fontsize='12'>The main features that will describe if a house is valued at more than 650K are as follows:  </run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>sqft_living, waterfront,  and renovation.</run>
                    <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='15125' id='53' type-v2='text' w='83300' x='9900' y='61375'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Bold' fontsize='11' underline='true'>Python Predicitonal Function </run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#000000'>Y</run>
                    <run>= 497414.55307262 -13787.9155057*</run>
                    <run bold='true' fontcolor='#000000'>grade</run>
                    <run>+  19850.27900452*</run>
                    <run bold='true' fontcolor='#000000'>sqft_living </run>
                    <run>+ 87542.72046603*</run>
                    <run bold='true' fontcolor='#000000'>lat</run>
                    <run> + 15612.8563094*</run>
                    <run bold='true' fontcolor='#000000'>yr_buil</run>
                    <run>t -61738.00182949*</run>
                    <run bold='true' fontcolor='#000000'>view </run>
                    <run>+  5632.79162094*</run>
                    <run bold='true' fontcolor='#000000'>bathrooms </run>
                    <run>+ 9602.84185567*</run>
                    <run bold='true' fontcolor='#000000'>zipcode</run>
                    <run> + 28486.87659874*</run>
                    <run bold='true' fontcolor='#000000'>floors  </run>
                    <run>+ 15383.07477168*</run>
                    <run bold='true' fontcolor='#000000'>condition</run>
                    <run> +100721.52111329*</run>
                    <run bold='true' fontcolor='#000000'>bedrooms </run>
                    <run>-18639.47918712*</run>
                    <run bold='true' fontcolor='#000000'>waterfront</run>
                    <run> +80242.25277166*</run>
                    <run bold='true' fontcolor='#000000'>long </run>
                    <run>-8702.806518*</run>
                    <run bold='true' fontcolor='#000000'>yr_renovated</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5f5f5' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5B978A66-E109-452D-B5A8-94C61FD15BB4}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Correlations'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='43875' id='69' is-centered='0' is-scaled='1' param='C:/Users/Stephan/Downloads/image.png' type-v2='bitmap' w='54400' x='2300' y='2000' />
        <zone h='52625' id='22' name='correlations' w='84900' x='5000' y='43375' />
        <zone forceUpdate='true' h='6125' id='49' type-v2='text' w='16300' x='13200' y='49875'>
          <formatted-text>
            <run bold='true' fontsize='10'>Price:</run>
            <run fontsize='10'> R-Squared: 0,49</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone h='3750' id='50' type-v2='text' w='17600' x='53100' y='51125'>
          <formatted-text>
            <run bold='true' fontsize='10'>Sqft Living:</run>
            <run fontsize='10'> R-Squared: 0,39</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='10875' id='74' type-v2='text' w='23800' x='75900' y='41250'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='15' underline='true'>Total R-Squared: 0.7</run>
          </formatted-text>
        </zone>
        <zone h='38375' id='83' is-centered='0' is-scaled='1' param='C:/Users/Stephan/Downloads/image (1).png' type-v2='bitmap' w='43700' x='47900' y='5500' />
        <zone forceUpdate='true' h='3750' id='84' type-v2='text' w='16600' x='62000' y='1750'>
          <formatted-text>
            <run bold='true' fontcolor='#333333' fontname='Tableau Bold' fontsize='14'>Test vs Prediction</run>
          </formatted-text>
        </zone>
        <zone h='3625' id='133' type-v2='dashboard-object' w='8500' x='90100' y='2625'>
          <button action='tabdoc:goto-sheet window-id=&quot;{2CB44515-ECC5-4019-A1D8-C130E0BC71AA}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Next</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#898989' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='3500' id='134' type-v2='dashboard-object' w='8500' x='90100' y='6750'>
          <button action='tabdoc:goto-sheet window-id=&quot;{413B452C-C1B0-4C4F-9572-4FE16BE37E67}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Back</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#898989' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='192' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='191' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='3750' id='84' type-v2='text' w='16600' x='62000' y='1750'>
                  <formatted-text>
                    <run bold='true' fontcolor='#333333' fontname='Tableau Bold' fontsize='14'>Test vs Prediction</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43875' id='69' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Stephan/Downloads/image.png' type-v2='bitmap' w='54400' x='2300' y='2000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3625' id='133' type-v2='dashboard-object' w='8500' x='90100' y='2625'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{2CB44515-ECC5-4019-A1D8-C130E0BC71AA}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Next</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#898989' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38375' id='83' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Stephan/Downloads/image (1).png' type-v2='bitmap' w='43700' x='47900' y='5500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3500' id='134' type-v2='dashboard-object' w='8500' x='90100' y='6750'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{413B452C-C1B0-4C4F-9572-4FE16BE37E67}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Back</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#898989' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='10875' id='74' type-v2='text' w='23800' x='75900' y='41250'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='15' underline='true'>Total R-Squared: 0.7</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52625' id='22' is-fixed='true' name='correlations' w='84900' x='5000' y='43375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6125' id='49' type-v2='text' w='16300' x='13200' y='49875'>
                  <formatted-text>
                    <run bold='true' fontsize='10'>Price:</run>
                    <run fontsize='10'> R-Squared: 0,49</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3750' id='50' type-v2='text' w='17600' x='53100' y='51125'>
                  <formatted-text>
                    <run bold='true' fontsize='10'>Sqft Living:</run>
                    <run fontsize='10'> R-Squared: 0,39</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{40269525-C496-440A-B96F-2579CBF0D4C1}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Description'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
      </datasources>
      <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
        <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='21875' id='69' name='KPIs' w='35800' x='2000' y='10500' />
        <zone h='31625' id='80' name='Seattle vs County' w='34100' x='56600' y='1500' />
        <zone h='7250' id='82' name='Seattle vs County' pane-specification-id='0' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[City (copy) (group)]' type-v2='color' w='9600' x='78100' y='2875' />
        <zone h='65125' id='98' name='Seattle &amp; King County. Market Price Map ' w='96000' x='1800' y='28000' />
        <zone h='10750' id='105' name='Seattle &amp; King County. Market Price Map ' pane-specification-id='2' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' type-v2='color' w='14000' x='75300' y='34625' />
        <zone h='15625' id='107' name='Seattle &amp; King County. Market Price Map ' pane-specification-id='3' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' type-v2='size' w='13600' x='75800' y='43875' />
        <zone h='7125' id='140' param='horz' type-v2='layout-flow' w='96100' x='2000' y='2375'>
          <zone h='7125' id='136' mode='dropdown' name='KPIs' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]' type-v2='filter' w='16800' x='2000' y='2375'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7125' id='138' mode='checkdropdown' name='KPIs' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' type-v2='filter' w='16800' x='18800' y='2375'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='3125' id='255' type-v2='dashboard-object' w='10400' x='88600' y='2750'>
          <button action='tabdoc:goto-sheet window-id=&quot;{D017F83B-3F8B-42DB-9955-010C67D4D034}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Next</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#898989' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='2875' id='256' type-v2='dashboard-object' w='10300' x='88600' y='7500'>
          <button action='tabdoc:goto-sheet window-id=&quot;{2A9E63D5-6015-4445-99A5-F7D99AD51225}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Back</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#898989' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='314' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='313' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='253' h='31625' id='80' is-fixed='true' name='Seattle vs County' w='34100' x='56600' y='1500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='82' name='Seattle vs County' pane-specification-id='0' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[City (copy) (group)]' type-v2='color' w='9600' x='78100' y='2875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3125' id='255' type-v2='dashboard-object' w='10400' x='88600' y='2750'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{D017F83B-3F8B-42DB-9955-010C67D4D034}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Next</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#898989' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2875' id='256' type-v2='dashboard-object' w='10300' x='88600' y='7500'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{2A9E63D5-6015-4445-99A5-F7D99AD51225}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Back</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#898989' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7125' id='136' mode='dropdown' name='KPIs' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]' type-v2='filter' w='16800' x='2000' y='2375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7125' id='138' mode='checkdropdown' name='KPIs' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' type-v2='filter' w='16800' x='18800' y='2375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='175' h='21875' id='69' is-fixed='true' name='KPIs' w='35800' x='2000' y='10500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65125' id='98' is-fixed='true' name='Seattle &amp; King County. Market Price Map ' w='96000' x='1800' y='28000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10750' id='105' name='Seattle &amp; King County. Market Price Map ' pane-specification-id='2' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' type-v2='color' w='14000' x='75300' y='34625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15625' id='107' name='Seattle &amp; King County. Market Price Map ' pane-specification-id='3' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' type-v2='size' w='13600' x='75800' y='43875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{80392DED-0032-4342-A312-454F22EA5298}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='End'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='66750' id='3' is-centered='0' is-scaled='1' param='C:/Users/Stephan/Downloads/scale.jfif' type-v2='bitmap' w='92200' x='4000' y='6125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='67' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='66' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='66750' id='3' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Stephan/Downloads/scale.jfif' type-v2='bitmap' w='92200' x='4000' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{35CBA355-88E4-4C5A-B1F1-7ACBBF36AB86}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Introduction&amp;Data&amp;Objective'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='111125' id='12' type-v2='empty' w='98400' x='700' y='-6500'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5f5f5' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='54375' id='3' type-v2='text' w='70000' x='5600' y='18375'>
          <formatted-text>
            <run bold='true' fontcolor='#606b76' fontname='Tableau Bold' fontsize='15'>Data </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Æ  </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='11'>21.613 inputs split into 70 Zipcodes from Kings County (Whashigwotn State), between May 2014 - May 2015. </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Æ </run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#606b76' fontname='Tableau Bold' fontsize='15'>Variables </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Æ  </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='11'>Our source is composed of a total of 22 variables, which are as follows: </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='11'>Æ  </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='11'>index,id,date of sell, price, bedrooms, bathrooms,sqft_living, sqft_lot, floors, waterfront ,view, condition, grade </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontsize='11'>,sqft_above ,sqft_basement ,yr_built ,yr_renovated ,zipcode, lat, long, sqft_living15, sqft_lot15. </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Æ  </run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#606b76' fontname='Tableau Bold' fontsize='15'>Objective </run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#000000' fontsize='11'>Build a model that will predict the price of a house based on features provided in the dataset and describe which factors are responsible for higher property value - $650K and above.</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5f5f5' />
          </zone-style>
        </zone>
        <zone h='6750' id='102' param='vert' type-v2='layout-flow' w='90000' x='4800' y='11250'>
          <zone h='6500' id='101' type-v2='dashboard-object' w='90000' x='4800' y='11250'>
            <button action='tabdoc:goto-sheet window-id=&quot;{2A9E63D5-6015-4445-99A5-F7D99AD51225}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Introduction</caption>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#333333' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='51500' id='103' param='vert' type-v2='layout-flow' w='14400' x='80900' y='26750'>
          <zone h='6500' id='104' type-v2='dashboard-object' w='14400' x='80900' y='26750'>
            <button action='tabdoc:goto-sheet window-id=&quot;{413B452C-C1B0-4C4F-9572-4FE16BE37E67}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Description</caption>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#a7acad' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6500' id='105' type-v2='dashboard-object' w='14400' x='80900' y='33250'>
            <button action='tabdoc:goto-sheet window-id=&quot;{D017F83B-3F8B-42DB-9955-010C67D4D034}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Correlations</caption>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#bab0ac' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6500' id='106' type-v2='dashboard-object' w='14400' x='80900' y='39750'>
            <button action='tabdoc:goto-sheet window-id=&quot;{2CB44515-ECC5-4019-A1D8-C130E0BC71AA}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Solution</caption>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#a7acad' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6500' id='107' type-v2='dashboard-object' w='14400' x='80900' y='46250'>
            <button action='tabdoc:goto-sheet window-id=&quot;{A0FACC0A-3010-4ECA-BCD2-B2003E23600A}&quot;' button-type='text'>
              <button-visual-state>
                <caption>End</caption>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#bab0ac' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6500' id='123' type-v2='dashboard-object' w='14400' x='80900' y='52750'>
            <button action='tabdoc:goto-sheet window-id=&quot;{AAD8E2C1-623D-46B7-A753-76367C71147A}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Appendix</caption>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#d4d4d4' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='dotted' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='169' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='168' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6500' id='101' type-v2='dashboard-object' w='90000' x='4800' y='11250'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{2A9E63D5-6015-4445-99A5-F7D99AD51225}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Introduction</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#333333' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='54375' id='3' type-v2='text' w='70000' x='5600' y='18375'>
                  <formatted-text>
                    <run bold='true' fontcolor='#606b76' fontname='Tableau Bold' fontsize='15'>Data </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Æ  </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='11'>21.613 inputs split into 70 Zipcodes from Kings County (Whashigwotn State), between May 2014 - May 2015. </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Æ </run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#606b76' fontname='Tableau Bold' fontsize='15'>Variables </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Æ  </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='11'>Our source is composed of a total of 22 variables, which are as follows: </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='11'>Æ  </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='11'>index,id,date of sell, price, bedrooms, bathrooms,sqft_living, sqft_lot, floors, waterfront ,view, condition, grade </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='11'>,sqft_above ,sqft_basement ,yr_built ,yr_renovated ,zipcode, lat, long, sqft_living15, sqft_lot15. </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Tableau Bold' fontsize='11'>Æ  </run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#606b76' fontname='Tableau Bold' fontsize='15'>Objective </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='11'>Build a model that will predict the price of a house based on features provided in the dataset and describe which factors are responsible for higher property value - $650K and above.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5f5f5' />
                  </zone-style>
                </zone>
                <zone h='6500' id='104' type-v2='dashboard-object' w='14400' x='80900' y='26750'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{413B452C-C1B0-4C4F-9572-4FE16BE37E67}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Description</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#a7acad' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='105' type-v2='dashboard-object' w='14400' x='80900' y='33250'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{D017F83B-3F8B-42DB-9955-010C67D4D034}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Correlations</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#bab0ac' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='106' type-v2='dashboard-object' w='14400' x='80900' y='39750'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{2CB44515-ECC5-4019-A1D8-C130E0BC71AA}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Solution</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#a7acad' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='107' type-v2='dashboard-object' w='14400' x='80900' y='46250'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{A0FACC0A-3010-4ECA-BCD2-B2003E23600A}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>End</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#bab0ac' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='123' type-v2='dashboard-object' w='14400' x='80900' y='52750'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{AAD8E2C1-623D-46B7-A753-76367C71147A}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Appendix</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#d4d4d4' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{93829D91-93F8-47FA-BC62-00A8EC967099}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Solution'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Data_MidTerm_Project_Real_State_Regression' name='federated.1a45c5706zag3910h5ka00sn5u7x' />
      </datasources>
      <datasource-dependencies datasource='federated.1a45c5706zag3910h5ka00sn5u7x'>
        <column datatype='string' name='[Bathrooms (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[bathrooms]' new-bin='true'>
            <bin default-name='false' value='&quot;0,5 - 1&quot;'>
              <value>0.5</value>
              <value>0.75</value>
              <value>1.0</value>
            </bin>
            <bin default-name='false' value='&quot;1,25 - 2&quot;'>
              <value>1.25</value>
              <value>1.5</value>
              <value>1.75</value>
              <value>2.0</value>
            </bin>
            <bin default-name='false' value='&quot;2,25 - 3&quot;'>
              <value>2.25</value>
              <value>2.5</value>
              <value>2.75</value>
              <value>3.0</value>
            </bin>
            <bin default-name='false' value='&quot;3,25 - 4&quot;'>
              <value>3.25</value>
              <value>3.5</value>
              <value>3.75</value>
              <value>4.0</value>
            </bin>
            <bin default-name='false' value='&quot;4,25 - 5&quot;'>
              <value>4.25</value>
              <value>4.5</value>
              <value>4.75</value>
              <value>5.0</value>
            </bin>
            <bin default-name='false' value='&quot;5,25 - 6&quot;'>
              <value>5.25</value>
              <value>5.5</value>
              <value>5.75</value>
              <value>6.0</value>
            </bin>
            <bin default-name='false' value='&quot;6,25 - 6,75&quot;'>
              <value>6.25</value>
              <value>6.5</value>
              <value>6.75</value>
            </bin>
            <bin default-name='false' value='&quot;7,5 -  8&quot;'>
              <value>7.5</value>
              <value>7.75</value>
              <value>8.0</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Floors (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[floors]' new-bin='true'>
            <bin default-name='false' value='&quot;1 - 1,5&quot;'>
              <value>1.0</value>
              <value>1.5</value>
            </bin>
            <bin default-name='false' value='&quot;2 - 2,5&quot;'>
              <value>2.0</value>
              <value>2.5</value>
            </bin>
            <bin default-name='false' value='&quot;3 - 3,5&quot;'>
              <value>3.0</value>
              <value>3.5</value>
            </bin>
          </calculation>
        </column>
        <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
        <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
        <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column caption='Floors' datatype='real' name='[floors]' role='measure' type='quantitative' />
        <column-instance column='[bedrooms]' derivation='None' name='[none:bedrooms:ok]' pivot='key' type='ordinal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[condition]' derivation='None' name='[none:condition:qk]' pivot='key' type='quantitative' />
        <column-instance column='[renovated]' derivation='None' name='[none:renovated:nk]' pivot='key' type='nominal' />
        <column caption='Renovated' datatype='string' name='[renovated]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='60500' id='1' name='Diagrama' w='71600' x='4100' y='16000' />
        <zone h='24625' id='10' param='horz' type-v2='layout-flow' w='37000' x='1800' y='4000'>
          <zone fixed-size='101' h='24625' id='2' is-fixed='true' mode='checkdropdown' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]' type-v2='filter' w='10900' x='1800' y='4000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='72' h='24625' id='3' is-fixed='true' mode='checkdropdown' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' type-v2='filter' w='8000' x='12700' y='4000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='59' h='24625' id='4' is-fixed='true' mode='checkdropdown' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]' type-v2='filter' w='6700' x='20700' y='4000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='24625' id='5' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11400' x='27400' y='4000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='24625' id='39' param='vert' type-v2='layout-flow' w='18800' x='79300' y='19375'>
          <zone h='6500' id='7' mode='checkdropdown' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]' type-v2='filter' w='18800' x='79300' y='19375'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6500' id='8' mode='checkdropdown' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]' type-v2='filter' w='18800' x='79300' y='25875'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6500' id='6' mode='checkdropdown' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]' type-v2='filter' w='18800' x='79300' y='32375'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='20500' id='48' name='diagrama.bueno (2)' w='94700' x='2400' y='74625' />
        <zone h='17375' id='75' name='prediction' w='25400' x='74600' y='42750' />
        <zone h='13625' id='81' type-v2='empty' w='44800' x='39600' y='31000' />
        <zone h='3625' id='94' type-v2='dashboard-object' w='9000' x='90000' y='1375'>
          <button action='tabdoc:goto-sheet window-id=&quot;{FB3B482F-8C64-45A3-8D35-915FFDF21DBF}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Next</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#898989' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='3000' id='95' type-v2='dashboard-object' w='8900' x='90000' y='5375'>
          <button action='tabdoc:goto-sheet window-id=&quot;{D017F83B-3F8B-42DB-9955-010C67D4D034}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Back</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#898989' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='153' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='152' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='3625' id='94' type-v2='dashboard-object' w='9000' x='90000' y='1375'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{FB3B482F-8C64-45A3-8D35-915FFDF21DBF}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Next</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#898989' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='95' type-v2='dashboard-object' w='8900' x='90000' y='5375'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{D017F83B-3F8B-42DB-9955-010C67D4D034}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Back</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#898989' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='101' h='24625' id='2' mode='checkdropdown' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]' type-v2='filter' w='10900' x='1800' y='4000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='72' h='24625' id='3' mode='checkdropdown' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' type-v2='filter' w='8000' x='12700' y='4000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='59' h='24625' id='4' mode='checkdropdown' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]' type-v2='filter' w='6700' x='20700' y='4000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24625' id='5' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11400' x='27400' y='4000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='7' mode='checkdropdown' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]' type-v2='filter' w='18800' x='79300' y='19375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='8' mode='checkdropdown' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]' type-v2='filter' w='18800' x='79300' y='25875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='6' mode='checkdropdown' name='Diagrama' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]' type-v2='filter' w='18800' x='79300' y='32375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60500' id='1' is-fixed='true' name='Diagrama' w='71600' x='4100' y='16000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='139' h='17375' id='75' is-fixed='true' name='prediction' w='25400' x='74600' y='42750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='164' h='20500' id='48' is-fixed='true' name='diagrama.bueno (2)' w='94700' x='2400' y='74625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{76F4A3BC-36AB-40CC-B712-4EE9545BBEDA}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Tittle'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='37' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='35' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#555555' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='51500' id='57' type-v2='text' w='77900' x='8700' y='17000' />
        <zone forceUpdate='true' h='49500' id='39' is-centered='0' is-scaled='1' param='C:/Users/Stephan/Downloads/Captura.PNG' type-v2='bitmap' w='76000' x='9700' y='17375'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='11' />
            <format attr='padding' value='0' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='22750' id='3' type-v2='text' w='64600' x='13000' y='23125'>
          <formatted-text>
            <run bold='true' fontcolor='#555555' fontname='Tableau Bold' fontsize='26'>House price </run>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='26'>prediction project</run>
            <run>Æ&#10;</run>
            <run bold='true' fontname='Tableau Bold' fontsize='20'>King County </run>
            <run>Æ&#10;</run>
            <run bold='true' fontname='Tableau Bold' fontsize='15'>2014-2015</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='11000' id='4' type-v2='text' w='24000' x='2700' y='78375'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12'>Team members</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='10'>Javier Salinas</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='10'>Fabian Pietro</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='10'>Luis Lorman</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3750' id='38' type-v2='text' w='10000' x='85900' y='85500'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Bold'>18/11/2022</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='2875' id='42' type-v2='text' w='41800' x='30800' y='89375'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12'>IronHack Data Analyst Bootcamp OCT 2022</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='195' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='194' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='51500' id='57' type-v2='text' w='77900' x='8700' y='17000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' forceUpdate='true' h='49500' id='39' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Stephan/Downloads/Captura.PNG' type-v2='bitmap' w='76000' x='9700' y='17375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='22750' id='3' type-v2='text' w='64600' x='13000' y='23125'>
                  <formatted-text>
                    <run bold='true' fontcolor='#555555' fontname='Tableau Bold' fontsize='26'>House price </run>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='26'>prediction project</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontname='Tableau Bold' fontsize='20'>King County </run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontname='Tableau Bold' fontsize='15'>2014-2015</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='11000' id='4' type-v2='text' w='24000' x='2700' y='78375'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12'>Team members</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#ffffff' fontsize='10'>Javier Salinas</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#ffffff' fontsize='10'>Fabian Pietro</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#ffffff' fontsize='10'>Luis Lorman</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3750' id='38' type-v2='text' w='10000' x='85900' y='85500'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Bold'>18/11/2022</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='2875' id='42' type-v2='text' w='41800' x='30800' y='89375'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12'>IronHack Data Analyst Bootcamp OCT 2022</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{105F8FFA-1640-4DBC-8838-56797D94003B}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D96F8644-A44F-492B-93CD-A053E49954F5}' />
    </window>
    <window class='worksheet' name='titulo'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='225'>
            <card pane-specification-id='1' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:price:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:city:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7371A098-6492-472C-94F6-4A13FD8F4618}' />
    </window>
    <window class='worksheet' name='Yearly.market.behaviour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:acceptable_cities:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:id:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:unacceptable_cities:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{574FC48F-1A0C-440E-A129-DB934595F41F}' />
    </window>
    <window class='worksheet' name='Yearly. market.behavior (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:acceptable_cities:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:id:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:unacceptable_cities:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[pcdf:avg:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7B55388A-6D70-46CE-B2B8-EDEA929B1FB5}' />
    </window>
    <window class='worksheet' name='%increase'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city (Table1):nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city (Table11):nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:county:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100):qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode (Table1):ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode (Table11):ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:floor(((table_2015.price - table_2014.price)/table_2014.price)*100):qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[sum:floor(((zip_2015.price - zip_2014.price)/zip_2014.price)*100):qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{53F82AF1-D19C-4AD2-9547-649B7F941E5A}' />
    </window>
    <window class='worksheet' name='Seattle&amp;King County.Price&amp;N°.Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:id:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{27D4BBCC-0503-4B78-8E51-9E90A71F22D0}' />
    </window>
    <window class='worksheet' name='Seattle&amp;King County.Price.Bar (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='161'>
            <card pane-specification-id='2' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:id:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8636F963-66F8-4916-B8BC-1ABD8B659B63}' />
    </window>
    <window class='worksheet' name='map. filter.draft'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:yr_built:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:price:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' type='size' />
            <card pane-specification-id='3' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' type='color' />
          </strip>
          <strip size='160'>
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:floors:ok]' type='filter' />
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bathrooms:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3E59538B-D5FE-4CA4-A1B8-E43A830919B7}' />
    </window>
    <window class='worksheet' name='Seattle &amp; King County. Market Price Map '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='225'>
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:yr_built:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='3' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' type='color' />
          </strip>
          <strip size='100'>
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:id:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zip:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{547D4AA1-A86F-4124-86AE-0D18D9DA7BCF}' />
    </window>
    <window class='worksheet' name='Seattle &amp; King County. Market Price Map (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='225'>
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:yr_built:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='100'>
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:id:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1D42939D-57A3-4B85-98D7-55E8FC0402C1}' />
    </window>
    <window class='worksheet' name='SeattleCity.map.Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='225'>
            <card pane-specification-id='2' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' type='color' />
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:yr_built:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='3' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' type='size' />
          </strip>
          <strip size='100'>
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:primary_city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{AFA22D8B-FDFB-40FC-B3C9-89A3237894CD}' />
    </window>
    <window class='worksheet' name='Diagrama'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='10' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' size='10' type='size' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]' size='27' type='filter' />
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]' show-domain='false' show-null-ctrls='false' size='10' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]' size='27' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]' size='27' type='filter' />
            <card mode='checkdropdown' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]' size='27' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E668A10-B73C-45E5-AC8E-D745B7272812}' />
    </window>
    <window class='worksheet' name='Diagrama (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:id:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38BEC948-CD7C-4A66-B7FE-E89F496F5912}' />
    </window>
    <window class='worksheet' name='diagrama.bueno'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]' type='filter' />
            <card pane-specification-id='10' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8263B51-82B7-4FB1-B5D0-646FF4363A2D}' />
    </window>
    <window class='worksheet' name='diagrama.bueno (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{007A1791-3744-4468-A0C9-BAA9C66B0339}' />
    </window>
    <window class='worksheet' name='Seattle vs County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1a45c5706zag3910h5ka00sn5u7x].[City (copy) (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:city:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:city:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city (Table1):nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:id:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zip:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{93B79F52-3FF3-4A2C-8A6F-DF952A5BB135}' />
    </window>
    <window class='worksheet' name='correlations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:grade:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:sqft_living:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35BD8596-C49A-4B3E-B29F-9FED84A94D25}' />
    </window>
    <window class='worksheet' name='prediction'>
      <cards>
        <edge name='left'>
          <strip size='199'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]' type='filter' />
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]' type='filter' />
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:ok]' type='filter' />
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]' type='filter' />
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[Floors (group)]' type='filter' />
            <card param='[federated.1a45c5706zag3910h5ka00sn5u7x].[none:bedrooms:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:grade:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:renovated:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:sqft_living:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD56C97F-F856-4C56-AD64-837B941B0430}' />
    </window>
    <window class='worksheet' name='show.mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[Bathrooms (group)]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[avg:price:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:condition:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:grade:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:id:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:price:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:sqft_living:qk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[usr:Calculation_761389844027891727:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52C23DFC-183A-405D-9B32-7902826D4877}' />
    </window>
    <window class='worksheet' name='KPIs' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:city:nk]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:id:ok]</field>
            <field>[federated.1a45c5706zag3910h5ka00sn5u7x].[none:zipcode:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EBC6C250-7109-4192-928F-3F01B5E0BBAA}' />
    </window>
    <window class='dashboard' name='Appendix'>
      <viewpoints>
        <viewpoint name='%increase'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Seattle&amp;King County.Price&amp;N°.Bar'>
          <zoom type='entire-view' />
          <highlight field='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Seattle&amp;King County.Price.Bar (2)'>
          <zoom type='entire-view' />
          <highlight field='[federated.1a45c5706zag3910h5ka00sn5u7x].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Yearly. market.behavior (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AAD8E2C1-623D-46B7-A753-76367C71147A}' />
    </window>
    <window class='dashboard' name='Tittle'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{BE7CAE3A-1DA6-4AEB-AEE4-21985A6917E5}' />
    </window>
    <window class='dashboard' name='Introduction&amp;Data&amp;Objective'>
      <viewpoints />
      <active id='104' />
      <simple-id uuid='{2A9E63D5-6015-4445-99A5-F7D99AD51225}' />
    </window>
    <window class='dashboard' name='Description'>
      <viewpoints>
        <viewpoint name='KPIs' />
        <viewpoint name='Seattle &amp; King County. Market Price Map '>
          <zoom type='entire-view' />
          <highlight field='[federated.1a45c5706zag3910h5ka00sn5u7x].[cnt:id:qk]' type='size'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Seattle vs County'>
          <highlight field='[federated.1a45c5706zag3910h5ka00sn5u7x].[City (copy) (group)]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='255' />
      <device-preview visible='true' />
      <simple-id uuid='{413B452C-C1B0-4C4F-9572-4FE16BE37E67}' />
    </window>
    <window class='dashboard' name='Correlations'>
      <viewpoints>
        <viewpoint name='correlations'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='134' />
      <simple-id uuid='{D017F83B-3F8B-42DB-9955-010C67D4D034}' />
    </window>
    <window class='dashboard' name='Solution'>
      <viewpoints>
        <viewpoint name='Diagrama'>
          <zoom type='entire-view' />
          <highlight field='[federated.1a45c5706zag3910h5ka00sn5u7x].[ctd:id:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='diagrama.bueno (2)' />
        <viewpoint name='prediction' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2CB44515-ECC5-4019-A1D8-C130E0BC71AA}' />
    </window>
    <window class='dashboard' maximized='true' name='Conclusion'>
      <viewpoints />
      <active id='6' />
      <simple-id uuid='{FB3B482F-8C64-45A3-8D35-915FFDF21DBF}' />
    </window>
    <window class='dashboard' name='End'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{A0FACC0A-3010-4ECA-BCD2-B2003E23600A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='%increase' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z7Ak15Um9t005evVs92vvUF3o+ENARAESBAgMLRDjtnljuG4CO1s6Mf+
      UYQipB8KKfavFNIfhUIhrbQriTucWc4OyRmSOwOCADkkQHjvGo32vt/r58qbzLz6kXVunbx1
      MyvrvXqNkJano+NVZWVel8ffc84VUkqJX8Ov4T9RsD7pAfwafg2fJPyaAH4N/0mDw7/UajV0
      u91NNSQhISDGfk6I8Z/5/wsIIeC6rvoupUSv14MQAplMZuh+0lallPA8L/IstTcJkFKqsfC2
      bdtWffi+D8uyYFlWYr80Vj52KSUsazK817Is2Lat2g6CAEEQqDGbxsMhQgDdbheNZmNTA6GG
      x3kJtmXfdAIQQqg++Uuh6/SC4oC/ONOc457n/VI7hUIB2WwWQIhQrVYLnU4Htm1jampKvVje
      tu/7CIIAQgh1L0dMy7Lguq56dtz1JSTyfR/dblcRgeM4yOVysG0bnueh2WyiWCwil8vBcZzY
      ttrtNtrttvrebDZh2zay2WxkneLGqROM/s4sy4Lv+3AcR30XQihGztedCIPWD9AIYKsggVQy
      QEr5iSA/9a0j7FZAn8O4bRNycGQztUvXCLGJcJrN5hDRWZalkJOQYpz5WJYFKSXy+bxqt1gs
      wnEcSCnRarVStUUIT4jHkZf/jZsvgc4IgiCIzJmIlsCyLDiOA9/3je3x9ZgYAQghgP6gRiH2
      KLG5XZCWU6dB3CQxayIC/WUHQYBmsxlpb5T0oWcty0IQBMhkMuh0OvA8T7URyAAOHNTrdbTb
      bQghMD09vSkiyGQyEc4KICKBRoHneUol0Tl2q9WC4zgR6ZUERJSm9dFxjt5NJpNRUjNuXSME
      wKl/K5wxcUISsMQnQwDAAMGT5jeKCDi3ScvF+L26CsZ/F0IoTps0PkKkTCajkFLKgR1GujcR
      y7g6N0kbzn2p36mpKdVm0pxJopnWiBBT5+70m66Wxo2RP6MTQafTATCwE/h7I4gQgMTgBW2G
      APgAYhdG/H/f8OXro6+TaQ34y+H3mz4TYsQhB7VLhEIqFAAEMhh6d7Ztq7bGWfeke13XVX3E
      ERY3ok32DzFa0/OjjFe9vXHGq0NUBZLxqkFaoBeg/43etOnmtwxbnV/Ssyb1z2R0m1QI3i4Z
      mcRhCUn0Z8jgbbfb8PxQ3bCEBSmibZEaMgnVU+fKcchKRKyvF40hjZTj7em/jSN5uRdKhyEb
      YKvIL4SAsASCQAIpjR0pQ9ljbbNkSDu3URIw7ve0KtCosZDx6DiO0mOpfR2JSUeHDL1qupfK
      8zzlLZqU65HGEgekfhABcKIhzg/ESw8TkKeHP5/WmI4zhoEJG8F8Qlb4TiLGoi7yaOB+EC5U
      IMRN8Q7F6eBx17YKm22zWq0ik82Gbs3+iy8UCkOqEfcO6UDu0mw2OyCWbQSSsGSY8+s0ns24
      ZsnTY3pe9wjR76mM61E3pB0s50w0IF0lsG0blogSACG/ehbbG5pE40x6EWkQdpT3J67NcV5+
      EARotVoIfH8Ioagt8qkngZQSnU5HGcrbCfTeifuT+pW2b/6Mrq5yb5L+3zQG/rxpYxEYIQFM
      +qsJSLyaOiawhDWE/IGMuhKllJCBBMzMbOIwaW7IvQxJa5fWySCEgM3ckWQ86pDJZEaqZZO0
      A9KCyevCgeMJXyt6TmdWcd6kpPbpPt/34bouut1u5BkjAYwlQrQFNSG/ECLC2UPOH0QGyO/T
      jedJvjCukm1FHI9zvwnS9Esc3nXdxLAD+k3nsp+kq9m2beP7jTNu47xq9FxcPxyS3ovrukME
      KaXUCECMZ5jwQYzayCHKlpAIpIQwTIDu84MAYATjOA62WTMaGwIZjTmxrdFiy0RweixQoDGG
      TCajEHzUuzFxyc0S+lZAt/VM49iMKkbro7fNf9eB1oTjJ8fT6EYYBoYsDyqKAxP3Nw2awJf+
      0KBNA9axnbvTJmUkb1W6yGCYe+mSUxfxpr7y+XzEOCV9nZ7LZrOpENikAm23vp8EelBlWiLU
      CSStqqhrDTq0222Uy2V0u90IMQypQOMMkgggjvOnEcdpOEJEymwy6tQEuohOgiAIACEgZQCB
      UMT3vN4QA4hbDxOjEELA8zyl4xNwg20UoaYxvIFwV/ZmEYTfN9rTMhlaN1LjTKpSGkmm45Lu
      gAFCbcLzPARSwve9YRVoFOiGiRBiSFLwgYwacBoCiLhSAwlppUfcSUEgA4Q2e9h3uTSFRr0O
      zze7++JAJw4eAGcCPk+Syt1uVxnFo4CL/F6vFxu5OUmI0+05IvPfTUauCUy4ktZmIMlKkino
      ex+Nq5EUPEQd8EHTvbqPn29amNogqoxTtbhKoUJZpQRkAFts3VU0DhFZwgqJoP8947oI8nnU
      G/WxXpx+r8m9GQdSSjQaDRXkBoTSolgswnVdFfsS9+w4fW0FdEQfxQjJvqENqzjpyXGK/08y
      tAm4bUU2gRBiOBRilN6vdxSn5tDObpz/Vx+kPol4kLAmgPyxrSd5bURoJwkhIvE1SSoZV9/i
      +kqjmkgpVYw+dxUSExlFAMB4xLZZIE4LDCI4496tTiimXV56hjNDzkjoM88XiMOfXq+nvFMk
      uRNl6Ka8BwKRsIYk5DcZiWn6+ySMu9A9G46zWCgqVSJOz530fKSU6Ha7KrbHD/xwH6Xfvh7q
      cLNVRCLQRqMBz/PU3NNsPHLgiE7P614wjvwmRqxLiIgjpp/JRs6FxH0A3iD/bdRkrATDOKld
      /tdkV9CEAxnAmkA6s2kOul6t5iEBQMJ1Msjn8yEn6dsDuot2lGeMQxqdnDK02u32oD2JvkQy
      QxrbalJA9kWtVoPv+0NcPQ4IwfVxJjlPdKaZNKa470EQ9PdXMsMEoA+Y/K4md54ulsKeoN5K
      Wt2YtxGXPRT9PCCGrUBcbMmoMcfFsJs+j2qLI4GpzSAIVHRokgqjM5w4r5xJb94KEOev1+uR
      dtP0YVr7pLUzcXkTLiYZ1HSdVFhjQozOPeL0MtMkQkaZDvF1TjkqXkQIEYb7TnBXzORi40Y9
      OQSI29NfIQRy2RyazWboYvRlbECaCSiUuVAoxHotKBao1WrFOiYku99kPOrin/TgSQJPexxH
      8qTZ2ON/Te3q6lAc4cUZxsYR6C4rkz6nNz4YbLSNURPkKs/I+/sbdZOMGI1bLEJO13Ujak4m
      k1WZUq7rolQqI43/mPdDCfHkvTGpXZ7noVarodlsRjK+9PskeTP6odNJQF4k2gyaBHieF0lA
      HyfWKC4ZJu75JNWIfudahAl0RhcZAS08LTi5pUxEwBuklLPQUImm0CXB2JGC2xAPYTLI6Tol
      VwODSNZcP/KSnnMdB1JG1bYkIOTP5/PIZrPG3XTy9VMEp+mFCiHg2E5kDePu4217nodqtYp2
      uz3S3T0KgiBArVaLtE9/R6lAo34zrYn+m4kRJ7XD26OxOqYf0qg6+iBCNQGwhYAUQunXaXS6
      cV7CJPVXXV/kdg4vK6LmCKli6+k3nm/qBz4c2xnqg99bLBaRz+eNnJL0ac/z0Gq1EqUojZs2
      xbgaEncv76Ner6vE982sJ0kTk1RKmzQfN1ZTX/o9pms6ccThH78+ZAQnLSK37OPUobSGb5yu
      GHddShkJp54E0ELonoVsPwnFZKCS+qD2APrqEvm+dcOMV1dwXVchnGndPM9Du91W7s5RQOPm
      ZUr08fKxmIzIzYCUISMw7WKPs48UZ6jHXTMxYK6q6+2n6T/1vjgXa0TlPFdViHA7KEjhDeGI
      Fefu1PsGwlTLSXL/OCTgi0ocniq2eb6nYsupnXwuD98bVieEECiXy4qY4hLTpQzdiFQYaxyP
      UlJ5Fh1MEZrjQhAEqNfraj30vtNy/3GJT5f8cWoQB129NRFSYjBckisNGLhII9SIKBGkARNn
      Up4YYcGyrYkFwJn61K9LOfDo6GNR3iD2Qqi+jZ57SteTYvmJ8xPyA1EmMEqN5GM0vWAO/DpV
      jxuXCIIgiATWxdlQo2BcVXbUnMJYLRlRXUe1NywBxHA8j0mkkQrAQUoJSImgH+8fp9+nsfDp
      vk+qepwu2bi0MyFNXMyTlDJSu9IEvu+j0+lEypuMA0lGvAlIGlFu8bjrSwTNDWiFhBr3n5S9
      pktrroUQ0Dsy7RbTXz8IN+n4JupQPkDaARsnJwAEiOwDqOAlDK4LIQAxHEUa7WDQj+LAE6xq
      kAR8XjpXN3HyOC/WqJwKeob0/TiDLc1vuhQ1vUdC/CSJNAo48nE1ZFSpFxPQrnGa9yo0fDEb
      wdbQOtBfP/BVf7AGuDQkAfQFH8dYEf29eV2/VNTK9GrLsiCDINaxKSFZqLEAUcTNIAKO9Po8
      da9JkqchbchyXKz+KLUi6fc4wmu32ygWi5smACklXNeNGOncPuSQRBBJhJ1mDLwNIcIweR5/
      NkQsGkOl8RqjQTnlJOnKBPpim8IpaKBpja/he25eWh+fG3/R+XxexQHpUsJECHppQVM/aTLv
      dBhlF1CNUPKakSpGHiOSBJvJDZBSDjipNibTOPVn9c/j1ixNcqzoUgKAck/HORaM+wD65zgw
      2Qg6Z9HDdjkBjEP7N7OaAecQ5POn0uAmvTluQ2mUK5MM4HEgsn5xzKlfWIBSUAHAwiA0udls
      otvtolKpDJ0xMAo6nQ7W19cjzEzKQZ43Gyj7LiAE5XIMogXS7kHoTgETWMKKxV31OXQmJnuB
      xuFGXO8jLkOf41xWm0XiSXuBkoB2wW3bRiaTid0TAAYccVwPCCF/JMJTg82sV+iOHu0ipNyC
      cSvGfXTyY3znubcBJ6dsuqBdR339BpCfCYsdQCDjVVFY2AsRasXhiPqfLQEIGeDBIwt46P57
      RvY5CvlN9/B7ed4GJ5JhFWhM0C1tXs/FRARxLzSNqy+YUBZYWiAkTarGQMgfV7Qql8sN3Q9A
      xc1PKiZHZzCBDICAI8VwNT4AaDQaKoYoLaGVSiVkKjsh8jOKlXv1FQQtDyjtVn04bcCaOzTw
      4FD/6PtJAg83Npa35CnieKOrVDy/2LEGuRs6rm3ZotRFDQ/cMtWp2bQas7lNy1Rg8upQ5tUo
      XTup8Kp+nWpmrq6uJkZ4borr9//btt335kUL6uoeI3o/lMCSVoIdueUw7l+0IQPuHTPsb4x8
      YRaaHW/Lam1cQB2PT9Pxjn+fWGlEDnqAll7qblOW/zZSgGmOzWYTtVotFjmI2OPOVCP1SUc8
      CkKLc52mdVHGjYleutv3QIX7KWbVbTPqGwB89QuPYta7PrggBl46fXyxbQuBruenrh43jm0a
      B6Y1jSUA4iabMT65d4N7OXTug01OZNIQJ4Z5hWMdyE4wIbIQQhW00h0C3OWZ9DK3Ii15LaEt
      Sd0YyOVy+OJDxxG0qgM1S78pxat1M1kUCoUhVVE1wYiUr3caojWtLUkGvh6WfsOorfvNgk4Q
      vh/mtKal5s1Sfdq249qnRdeBkJkHhPE1M60dzVvfI4nrP2n946rFZbNZRXyO7cRWrNsqYSyv
      rAG2i6DbROPCu6CQ8CjE6/e57hq+9Mi9KBaLiXtNKiFJjidh4tZTb8sYC8S9Obp1vVlEJK4f
      GmkDlxm57NK2cbNcoRxMfUophwLX+L0UB0RAdgXdoxtwgQxUKDX/3RRmEbdexLxs20a3240g
      j+6yVurRJs8NWN1oQLhleNUltD1ATs1HpECSymp11vHbnz6EQwf2QUqJer0e+1654RrZ+JLx
      YddJRKH/NrI26DgdjAL1Msa4n3zIN2MHWIhw95Z2cNvttpHLcilmWotisWjU/03lAhXI6HU6
      AM9kvMaJdzJqy+UyyuVypIYOGeB8LpSWuZmYoFv2L+KN164iU1nE/C15rF44iSCzfzAvKY1+
      d+n3cN+ii7tuOwbf9yMHBSbhVdKmmuneJNUyUQLoN+mcfyKqSJ8IdMrWwbbCygtpCs9OAkj6
      cbGc5AI1jTuTySCbzUaQipBvVFK7H4QlO3K5HDKZTKSUt04IcUBuWco208c2Ca8TABw/egvm
      3jyNNUzDLlQggmhuQOglCqCbmdLrYt+OaTWXdrsdya/gY6I1ps9vvfchao0mHrr3zpFnIuiI
      bvoOJJwRphtqW7G+TUBIzXcr1eAQJp9T9B6Ngw980kDIz4/uLJfLsbqyyUYKc4RLgzzi/rgb
      jcbIs3Up8lWIMMGGxpGGaKQMK9XxecQR7qTWL5vN4sBsHqsbHoTtwBISEcdo0ANq1yHJBx+K
      AgTdNqQsD8Yi+qHMvoQMgOXlZbQ6HTRaHczNVJB1HUAI3FhZwy/OtiEKczj/9K/wmTsPYWF+
      FjMzM7FzMu0T6DZa7Blhk3I9xQ2MRLZx8H2vGv3GT5HZzs0wivVJ64bkOjVtfHG9n4y4UX52
      TmQOd18aCMDczoT2WsYAKSUO7lnAm6vVMAVW2JGxLc5N43c+e2RQUjKQytZZ3Lmo7qNKbVJK
      vPLGu3j1agDhZADLhTh1GfD6UtB2YZV3AADW8vvw4w+rWLQu4Pe++vkhp4JuY+nA7zcSgI78
      kwYpw0hPXQXifeoin+71fB/WNrj3xnH7ctFNQDuq/HlSfbjuP8qZwL1OpVIpsilnHLdWHYvG
      sN0OAykH0Zd+u45ADAx4KcOI0YX5eeO5ZPzY0osXL+GN908CErhUlbArB1U7QCmch9a3cLIQ
      ThbLzQDP/vJFHNyziCO3HFbjUveNWGshxHBViO1SeUyd87/0WUfsYUSX/bKAk5VI5r7MYOL+
      9KJ1vz9XfdK0ryealEolpe+aDF/btiPeIyqNMqmyJ0lw6foKYA9KsUTmnvB6+OmRzWYLp3o7
      cVocQHvqQKp+FWLnZ/F+eycuXVuO/G4iArquRzsPKYppS5R8khCqT8MeGD8I4PleRAwCAzfj
      KDVkKzuwcdyG5xak5chUBY6McFLNRrWTzWbR7XaxsbERu38xKfB9H+eWqkCMgyJgRDz0GwuP
      P3ToIILmavhD/9akdYr8JgRkp469u3YmMhfTu1HaRGxPIyBpkDfFZWmIP7H7RbOCvooVBOGB
      GhIycqLLUFt95B8VGizlIH9Xr4hgctOZOFEaIqAEeSICIYTy7JCk0TfdyJ1Jz02i7k8SrK2v
      Y7nVr9JnnNNoSSeEwI6FBRxdyAOBP/IZHYLmGkTtKnYv7hhJANw5QO/G87ytEcBm9fBxXomp
      nyT9VgihCIGqyFmiX38+MHic+u2Q8Rs75v6CNZtNNBqNoVTJUQSQxiDj0G63VcCcEALFYhHl
      clllc9Gz5DYtFouRMfV6PXVae9xu6lbgw5Nn4GWmYEJaIQSyTnKqIzEQy7LwO194CNP+jdhz
      4zjwORzKrOFbX3oQhWIx0nd6SCiLQhxG13fpN72siUk/3eqC6wn6vO1x1RUhwnhwU0K/4zix
      8Si8LSKCcYCvg55Hm2Sk0cYZ51rE6XO5nNpAymazKs+XG9ue56Fer6NYLCppkMvlUnu54iAI
      Avz8l7/Csx+uQuTKkJ06ZLcVuj29gb2TG0EAHKanK/jm43fj/3zmA8jiPAAJq1tDwVuH9AMI
      OVjz8D0CgMSRo7sxOzODIPABEV+rip7T11nKhI0w3hDFVtNnvoD8N/6iJwEmTq/r92naILCs
      0CXn+V7E7552zLpzgC9qu90ecoOqPrX8VFPVCVNf3FhstVqquBbv31Rekfolg5irbuQl2gz4
      vo9Wq4VSPosv3znHjMkpyOP3UAV5AMDc3GziO+p2uygUCmoe+/ftw6OHL+CtsxdR61n4ygMH
      8am7P4dqtRo5b4DWg+NcaG+MLpnPnw/HHnNIXpxnhl4e/87vowGlgbRuOkI4y7JhbdGrF7q9
      QlXI831YVlh6JS1XNyW/0BwoyWVqaipCBEN1kzRbwLRenCAajQZs247kIheLRSWZTcV1gTBi
      k8f7U7u8qNe40O120Wq1cPDggcgcdJAyvlK27mLn6/HFxx/F5z/TQbPZxMzMTKQK340bN1Cr
      1bC4uDjkEJBBAKElwowCwmFjeXTOZXWq0TnmZtQcgXQEEOHemxTZQ32LsKgs6cYAYFm28n6N
      8kDom1O6IarfHwc680jadyHOyyvMlctlddqJ/tKFEKnLK44DtPeRRoKMWkspwyC4YqmokveF
      CDcTSR0lhnv+/Hm8/vrrkFIil8vhqaeeihCYYG3C8FkfB33PZXPxleHiGjNtko27aSaEGM8Q
      3kI+sG48D41DSliWGCJwUzuO46BcLqPdbqsqbhSywOuJ6jAJ45PbYkQESVzWhPxJIRJpwHXd
      kadaAlDFgk3ryTWMbrcLv+oj2y85b1o/y7Jw5cqViKq5urqKHTt2qGuWsCJnXNO7TMNkY3eC
      AQxxlXERfWKwSfw32QpKf7ZCjdGyLJRL5ZERkdzVSEYzL5BL0pP3wzPhqI1RSMGf1xmP7nka
      FzbrteNjGPV8JpPB1NQUms0mms1mosEthECn00Gn04HjOJidmY38ns1m0Wq1MD8/jytXrgAI
      ibBSqRglqG4f+r4/svRLtCwK4k9pmSTSCyEgxrAVNlsVWn9hXKWzmRE/TgIQ3RsRwQm6sO6L
      T5I0nMmM40Wjl++67qZLLI5q/9z586jX6uh2u+h53sDN6nnwAx+7Fhexa9euiH0CDNePNYEQ
      AplM1sgYCoUCbrnlFriui2q1ir1796JQKBj3OKhfUuNJNUyqzWSMBt1O4NySU+52QRzHJaCD
      KsbljKP0W1JD9KJg9Lt+jb6PsxbUDz8eNSmClBf8TTtfQrQrV6/jOz/7AL6dBWBDCgtSWED/
      /2OrH2NxcRG+76NWq+HM2bM4c/EqpkpFVMolLK9tRGL/B5MAet02Hvn0A3BiENV1XRw+fDiC
      L5yz8/UEzNEMcU6H7T82XAP10gXG2xHbBiDvylZVAw7Ehbw+l0xqm0skEyPQCUL/nWKNms0m
      crmcymHmu536/ePOpdvrolar4djRW3DP2et4/XwVxYxA3SrxG4F+MHS1WgUAXLy6jLc2piDX
      A8BbhZUtAfbwcVJBYwWfO1jB3OxsbIEBvoZp3hM/2WgU3FQC4KqGClMwiLHIM2Jruclx3M51
      Xbium0pPTNsPIX6r1RpZ82ezxQY4NJtNdZIMIT/dF+dNohNlRkEQBKjVa2g0m/A9D5Zt47ef
      ehhPVGsoFov4t3/7S1xouJDCBgalrwbzE4CwbFhOHsgOdmr5uNzWMv7JI4cxbQEnLlyAd+kU
      cnuPwMpM4fBimDTz3quv4ciDDyDXqeGZ107gNx59MH7M/gbeeus6jt+xT206WsIC4sLucRMJ
      gBuLQWQzYgAhsloQfemwneUQpZQq5XFUdtGodsi/3mw2h8KkTRLAlHbKRXScHaCrNjyWnn4b
      pUaNs569Xj8WqS9RgiDAVLkEx3Hwn3/zSZw+cwYvfnAJ79/AkKMiSerRPOdzAY4fO4JrJz/A
      uy/+FNOHH8Vj+S5OdwO8/coLOLPaw/6ii6tn3gOcGbQ6Xaycfx8//NkruOuRLyO4+hY+Pn8Z
      tz7yDRRX38ev3v8IOw49htswiGDwER5bJWCOUduWukAj24xpV4hBHM9m8lTjQPdeCSGUfs4N
      trhnPc9TKg2/lzh+vV7HxsaG8Zwuk1qje45Mhjr/Hgf6ri7NxUQAtm2rUynTgBAClUpF7dZS
      +yS9HcfGsaNH8PtfeQSf2etAyOEy8r0bZyBbG/Q07NoVHLKX4K6dhly/hKceur1vlwgUC4VQ
      2jRWsLTRwvXrG3j0059C7foH+PELp7BnPpQiS0vXIYMmXnzxXdSDLL75B19F/cJVXOnk8Ed/
      9M8wlx0c1A6EmXIUKmJal0QJwHXUJOCNx3Ev5ZoKAlhiePufxNV2cXwgTL3Lulm4GRfdTnyS
      CYGUYTwOndhIKZJAGMzVbDZVZYhRbemID4RImcvl0Ov1Ioas/hyFQJg22jKZjFKD6JqpjXFD
      IIQQcB0H01MVSD8YsmdIX7eEwNeffBgfnTyp9gl830fQ62BHtofDCz28s7SEjifxtfv34dOf
      uhdBEGBjYwOzs7Oht8bN4eh9n4N74yJOrQYoVlx0skX8P99/BsfKO/DbjxzEmx9dQzGfg+83
      4GRKWJgqozKTh+tmUa5MYePyh/irv/4YB448Go7ddpTLFAhP86zX60Pz3LIKpIdGcEucA/fT
      Uqw4cSvHHs4amgToln8ul0OpWAoRLxvuNibV8O90OqjVakPhA+12G/V6PVLtbjOQzWZVAjwh
      TpzuTvo7BbWRhKREd1OJFloD8rfrpVrSAPWRtAchpcSxo0fhui6KxSI8z8PBgwfx8o0cTq+1
      kaldQrPRxbsnu3jz5EXcectePPLAoChucccOHAWAvXvVtb87fQLL3TyeunUvZnfdgjc/fhFX
      Vqp46BtP4c6Hy5H+7//UHPCpQ+o7HQau7IB+XBQVGiAIgmAyNsAob4WUkipkGI3cSQP3GHA3
      ZMbNRGrnJBFdr9dTZyYDIaFTnD3p+Vtx3woxKJ5L/m5+5q4JgiBQrkR61rKsWMLR1alms4ly
      uTx03yhwXXdkUj+17zgO8vk83j1zFchM4drSEtziATgLszgPCQgLVz9uoFp7AV976jEAiGS8
      dTodvPXO+/j48gpgl/H95z+C+NXH6Igc/B7QarWQz+eN2gUBZ7btdlsdB1UoFCKuacAgAXSd
      NM1LTrpHIb8cTpyQUoYH4E2Q+5t0aCGEOqJ0FOITYtPZXcRFuA1g2qWNM2Lj+tK3/SkUoNvt
      Dqme+vq22214nqfKtyStBYCIW7TRaEQiRdNANpvF1NRUJLAurt9ut6sy0waTo7n218jJY3Xj
      umqHiNn3faytreGdjy/iWjAP2AJNmyXQB+tod8wxTroUJ48jScZisQjHcVAoFNBoNMIMQRhS
      ImlQ4yBlnBqgtqZhptLwt+3T+YFBgF8ulzMmaNPYKdKTDo+gv3QPSQSd8/uBH0m0oXIu4f/4
      gEGTKsLDfmns3FDm6qVe5S2tDRIEgSr6Ow5ks1lMT0+jXC4jn88PRb0S0Prs25ECrzoAACAA
      SURBVDkLSD/0vjhRYpNSIp8ze96y2Sz2zhWNv/lWBteXVyLu9DS4SlGspM5xN3CiCsQXVV/k
      UVwfCNUb27aHjqhRbW6D0asbg/l8XunMcR4TqvNJ6YT0exrpRzWM+PcBxw3gB4NgPo7MuuuV
      q2pJu9fcgOZSwvN9OJp047vt9Cw9N64tQO1RKDI5CIgYqV8qAHbp+gqAOUivCyszeAYARGMZ
      Dz56l7EPIQS5CYd/dHK4tryCe/i9Gijc0yQCrSnFcnmeB2EZDsgw1erhWUm8Mf2zbgvQIOx+
      uDEvdBU3gUkCV3t01Y6MSuLsnNuPBQKRRAwhwtpFvu9DglRACUtGT88x+qT7sSsmNUonCrJj
      QpekAykDeL5UqaDkPcrlciqUmgpuUbtbASGEkga1Wi3iJdrY2IAFlgRE8fr9/Z2dhQC7dy3G
      N66vi5CYsjvwpUC1lSy5TMRNnF+1x6SHUQJIKSPcg4sZTgRJuq5+xq8Q/Tj8PhFs1xnAhBiF
      QiGi8+t2TbvdHsrtHXDTcJHTeKeSk+3NO9G6KkYvyLZtdQr7kJrl+3AdN/Ju6FkicNpdp7mQ
      azWXy205FDoOHMfB1NQUqtWqIgIpJRZnp3Dt9DlUcj047bOhs0MAnrSwWqui0+nE5k/cdusx
      vHTmDazJMmwLOJxdRcUKg/ymshVj0kuSG5jUX7ovZBjh/UYC4O4jvciSyTDTuaYJuek71bDZ
      DiARzQ+BjkNgtVMY+EoVMyXNp+mTV65T0Od2ROy8XxMiEiKXSiVV1oSAJGinGxp0rjPIAtPt
      A25TEaGTW5AkRqlU2pQKFAe2bWNqakq5jOv1OvbvWcS9d90+1E8QBFhf3zDmYFtWWJd1x4LE
      7z9xB/7tsycgRA5TVkdpRJ12S3m+TDjGDX4hxFBJGbL3EgmAbtTFNT2UFOO+HW7NNEBIQKmD
      o7idbdvw+rVzhG31D2+zhtS0tH2bPschO60tEaGpMKzpM32nMQ4zofB8MFLJfN8HRDSXQH9u
      UkA7zSdOnMArr7yCIAgwOzuLxx57bChFdHFxZ2w8EpV+KZfLePDURbx8WaIrbWRFKJUr09ND
      jghSM20RtYtc1x1CfmIKajxxExrqQIbFpaLIb8GybFZ65OYdYqcDN/BGIT+FMAj0pVX/umVZ
      qQhYV/9I4g1xY2He3ab9BQqjMDEWep7A7q+zYztKNSPGQ5uJGdeF6wz0fIjhc3K3snE3CjzP
      w+nTpxWHXV1dxerqauQeKeXIcAw6Xmq6mEEvEDjbncWqV8CNtoP5hR3KG8ftpZ7vD0nwQqEw
      xJBIxSSITYnUVR5Si7iYsfVgtW1a2DRAnpVRtX0ocI1KjuhAAWZ62/xzt9cdWbKdvEEmaRIE
      gdpJJn2UnznAx6Ukq+bRidgITB2geJ+NjY0QOYRUHJJ7qLYDhAhLOS4tLalrL//0afirSwh6
      HQSeh0JlGk/+yb/A4q5dauxxLtlSIQv4DTTg4qw/A6u9itmZ6YiEV14x2ErlBAZSj0uaXq83
      VHJ+KCnepDsr40pbt0kZsXEvJG37RJRxBKC7PJvNZmJuq47wcfaMDtyDNooQCWmz2WxkL8L3
      fWSz2dgNJyGEKrpLrtRsNoter6f2OwCgXC6HsS9eGAOVz+eRcdMfh5oEp06fgSUEDh8+FLme
      yWRw3333AQirWUxXKjj9l/8rpjs19Y4by8VIYgztrpvg9ltvRfaFH6FbCIml6EhMTU2NlCCm
      gg2k+ui4NnRCjBADv3YQMLcnookbYoK6vmmfQEmbFHsFQojYjS6+aeR5njqfdytcMIn7j9Ou
      lFKVUiFOSPE6FB9EQOtBRMa5vmVZKJfLkb5d18XU1BQ2NjYgAoFOu4Net6cO8CBJMy5BLC0t
      4S+eeR3ZoIl/+ScLQzvKuVwODzzwAADg7VdeQr7bVOMHAJkvIV8oqB1vAHjnZ9/D86fXUFk4
      jN//rSdAq/v6W2/i6LSHn1+4hIXFvaFjdYz11ZkQecU4U9N2C0JuARm69wR1yBBfyjBHd1Jl
      SgD02xuu6pW2vgtxf/1ZOsSOuEy1Wo0NGtNBysGOLhGRvgM7CaCXRO2SChYXukxrxOOICDzP
      Q7VaVRyVMt4IgiBAu91GrVZTYR7jQLPZwl/+5GX0KgewGpTwk2d/hmvXr6Ner6PVaqmNROVj
      z2QgRTQKVoowMK/Vag0iYGURj37hccy4Plq1G/i77/4lXnrvHNbXN3D/7UfhtRpoLH2Ms++/
      iaWVa/j4whqWz57G+YsncWm9h/c/PIF29Tp+8FffwSsnLsWOn8JP+P9hU5yIIAEm7U/mXibK
      EiNONyqpmfvQOTJQoSpuMI3zwrkXbDuB5+nShlW320U+n0epVFLZZTrR6rFErVZLIT6PcM3l
      cqo0Ip8b+eHTuEOllDh//gKeefUElsUChLCwce00/vWvzuDHr5zDY7fN4+tf/ZLWVhuezKFn
      ZeA1NlDOZXBqaRU78xU06zXMzMyoO71uHRfPXUDOyeCNl57FqWtruNp4GwuLWeyen8GCU8NH
      b7+BvVN5fHTdQ675Nq5YFg7O+ljCXlw6exb186/g9HIL115/C/cdC0+s199dsVhEtVqN7LrH
      nhBj/C77PmkZIPBDu4AoaRLneAkhVGiBZVsRnTr2/j435ERJyL6Z4lDc9Svk9py2QlGJZJTx
      jaqNjTCBhEKwM5kMcrmcimcBoLbzabwAhvJpyQVLeyONRgNASBy0D5CGkbXbbXz3Rz/FqaoD
      PzsN0X/Pq9cvYP8DX0alXMRLrz+NpeUNfPMPfgcfv/AMzjULuHO/h//j3/wCu1aWcfr8Bdx2
      YC9Ep4s91WX8m//pv8c3/uV/g/uP7QEABEEHF8+cQd6dw+MP7cd7p6rYvW8RAnVkXAdfeuIh
      HCtu4MTVOvbMzcBufohLxfuQL97A8z/8DmqBg3s+fxSFc+9j3+7QXtC9gUKEAZGFQiHieROS
      Yfjq6iqareipfdxtRofWccQMvUGbO2pzq0CqT7lcjlj7FMlJnpBxIAgC5T7cjt1qy7LUoRf1
      eh2e5yGTyaBYLKLbDRPQlbogpSq6VSwWlQuPziGj8VJuMEGhUFD7IVJKFepBSDBOGRgpJf72
      mV/g1WsWhDtQuxoX3sL1q5fRsaZx452f4cjhHfjiN/4EYuVDvPPxKTz+u/8Up1++gt77P8DF
      8xdwdHEeH547j+leEy9ZM3jga9/Cf/kv/nBbSrmQNy2Xy6lsMP5btVpVDMPoBtURnxaK/Ky6
      l+STQH5CEt3zQ+PebFnAgYvXfGrhJIDUETrEotfrRTwUOmJSiHE+n1dSgdREKqNOYl0vNyPE
      4OhXDuN42L76+Gdw8btP45rcqZ5bvvgRVqse8nPTmJ6bxdVWEWhfxqXrq5iamQU8FxuX38Yt
      X/9zyFd/gN6BR3Hsjo+Q8RvY+eZpHDoYepDI4Odrw6UZZcPRbzxzjjNh3d8PQO2CW5alNsWI
      ATUajfAYWl0CtNqtIQIwLQoB1d7fLt9yHJDqUy5Hq7pJGUYpNhqNkZyFNveSPE3cMJ+EAUyu
      5mw2G8k30B0AXIUBQrcmIQIhPxme9J3aJ5WKl33ZKrzx1tv4m7dWYeXChJrW9TNwXBdeqwan
      NAe3sgP7gsv4va89kbpN2j2mOdE419fXFZOg0BYhwiC7ZquJQErYIirFkuZIa0ltBUGAdqeN
      dqs9vBMch/x8E4x//qS4f1xNH7UzqLkQkzalkmDSO6cceeP6JmQg7kjJHPx5Kr9iGh8Z/vyw
      7q3CnbffhjlsIOi1EXRbQOCjeekDuLP74FZ2AgBaXT8Mf2cHc9B/3ZNGcwiCAK12C41mIxLC
      YALbtpU73mPxV3E4yPd/qMCw53lod9qo1xtod9paacQRXJ9zWQobuJmcX+369YOv9NLglOyh
      lyYhiBsrxc/w+fH+toMIyJdv2vXNZrMolUpDu518x5hOj9GB2w6TqHdEkMlk8Me/+Tm89sZb
      EELgspR4Zz0Hv9OElQ0z09a6Dj48eQpHDh2IqKBSSuNYyBvl+T663Q7yuUHegL7evu8riW4J
      ETkkMe27Ic9gz+vB80IGOdILpAMtsO/7kBYwWRMxuV9KG8zn85HzdIHBkaSmfN04BA5k0I9Z
      htr8E7S4Mr7G/SSAh5jQPCga0lSqkSM/VanQwSQNJ2nEL8zP4dGHH0Sn00Gj3UPB24HexjV4
      lgW3PA+vvBtPv3oSRw8fTN0muXgd21Hvia7xsZMrV4j+WdEyCFWhlP3Qenc6HUiEUcnSdEAG
      RxTT4tHvUsrIwQSTBJ0TE5DOqHsxiCAbjcZ4yeoyJGDa/BucGgPEkbbJ2NJ/H9U/R37u8alU
      KrGckpJ3iAD4WIzEHZjLk/MQC5PtkRY834eVnYJdqEB6A6O14Uzj4qVLWNy5U42D/ppUlSAI
      lBePmBjHMQJigGrsQbhzTqf98PvoWa4CqWsIic3q242xXiATmOyC7YC4MVCUIbc9CPnb7XZs
      bUlTAgUw2ISiRVJxUHL0KeNbVYl05OQHXPN7qHodPzWSj0MfG5eIJoTrdDpY31gPE1nKUyPP
      RtMhk8mE0kdKCAH4rRqcqR3qd7swg7c/Oo9DBw+qmKsgCJDL5YzElslkIjo/JwD9Xv68bdmA
      M4isFVYYnWBbdgT5e71eWJSh3xTfQJQy4ZC8JCARsl0QZxzqub00SSpLaII0RKpzwq0gedpn
      uGFOHgp6YWQb8FRN/pypPxNimYAM43EKyPK+lItVXQwg7KjRenGlqZCeELTT6Rg9Uvw7vUv+
      Ljjh8LkKIVTOOTEwz/fhoX++sqAjXAeyXMpBQKdyEZsmmQTKCwTz4W7bBRTpyEMHyMNQq9VS
      j4UWj99v0p3pukkl3Cr3556LTCajNmtoU2vUEaz6OPh4uFrFPxNYVnggSKufWTUuUCJ82Gcf
      Mf3onksAgWq1ipmZGeTzeSUFPM8bCuHQx0ZeJLKHLMtSVfhorny+lrAgRXT+lmXFHow+9Lxp
      knGuJRrsJ+H90eN9aEHpFMFJAV8gk8getUdiGrv+nZhIJpNRnL/VaqmUQtNzIYfz4GnEEdFv
      mc5LBKXbRJZloVAoYHZmdlNeoqEwctuB9HuR8XrCRavdVkhLvn5TCDp3NNi2rewgquQmhIiU
      ftTnTtyeUkElzOcD6M/R2ow8JVKHTyLlkTixEr/9CfBCTXGgI2vc/kbS/ofe3qixKiI1BBVy
      7q3qaBoywXSRT9l4pl1vPi5qn1dAo51QateU9JMWqPQhPW85OcCPqmkdq4CVlRVMVyrwPA9T
      U1Nq30MPbtTX17IsVc+TpFjcQd+6+iSlTPRK0prydUm9EQYMkD+uFN92Ag95IE8IucvG9dPH
      ebriXKejPCZKJ9U8U+R10Pvg2V9J1eY4WMKCsAaFxPiLjPTXv16v11GtVlGr1VTMEa9uvRnv
      D7cd1DU3OxSjn0EHFy9dVt+73S6mpqYAIEI8gFkq8LHRuQdJHkl6Ji3w9R46IyzpIYHtiY5M
      AiGEEokEZPROggiTbIe4BY77HHlWRcpaEa40rieNG+YZZ3DwdVpPHREERZm6rqvCRzYDJIlt
      IRGsnkPQXIOwXARBB1QJ45Y54PLl63j51dfhui7m52Zx6OABCCGwtraO+fk5heRU5rFaq2Fx
      586hpCb6zjUAE1iWBVuGwZoyCENcRN8C5lKSSt4I0S8uIFmLN1ZuoNFoxFLbdlVxTgIhwoC3
      SqWiRHej0UCtVpsIAYwzDv43zf1+4Cu3HIFOcLqtxSWNUjO0e8gBoF9Lsl3oOgWDUYHZZrOF
      9z86hf27d2Lnzh0j5+f7PjY2NpQEjuRy9Ps/eeY8njvbhZUpQAY+ZLcJ0V5HOWujJ1zsyTTR
      kBnkHYFSIYczSw00rCKyfh2fu+sgPvfQfZHQDyrlOIrwuSpJUpYM4kF+iQSfYkQCxAW2bRei
      JVF0ZFyaakFic1JemTRAHCgNcF/1qLFJDA4Bj1OBeN+EBCYPVZr1tCwrYvw+/fMX8Pqyi/zb
      l/DokRl89uEHEnNuqegYGdqmNclnMxCyA2G7oYvUzQHFWTSFgAx8vH/pfeR27YcQLtDwIKYW
      YAHoYQHPnmrgytJz+N0vfU65TSlHmjtAOEPS7R8lpfoMk9THMJo59F6p9dAXh3bVwoUO1Tvb
      tieS8KJDWuTXg7p0ZNTLkWwXmBhDnFGdtj2B0VJFt3P4C9eRkPfPn6NneKkQ3/dxaaUOkS2i
      nVvAz07cwNVr10eOO5vNKq+caQ0S36uwkJk/gO7qxfC7pYVpZ4r4sFnBv/7ec1jf2FA1W0nq
      kf3J587nrNtrdJ9l9Q/T1pw4kW+2bWN6ehq5bA4ZNwPXGdSaoUnfzOhPchVy/Z9HE/KXezNU
      szjVUOfE/ITIuPuk7G/SjEEsupinbDFT+/waXc9ms5GNRN/3sVTtxxT1WvjS3buxp59RlQRC
      hOVP6ExgfVxx6D/4Pdw7iJu7sGxca9o4e/acUn9097BJ+nEi4JuM9BvlRVBlvSEjGBj4YnmQ
      FjVKE6U49O0EIYQ6cYRXQibvCQedMxLwMnnbNUb9JVIapuu6Rk8NPRfIAK49yOrSxbgOpjny
      k1sijEBgqOw85SDwd1qtVuFbWdgAZK+F2X5Yc9q553I5VQoxMn4pB7EHprn02vCb6/DbNdi5
      8hADk70WDhbbWJifU7/pUo67MukalUzk9/HPOgPy4Zt3gqmOJD2oczKKvdlO3du2bZUEwnU/
      HimY5DbcbomgB7IRkK7qOE4EOemv7gcfR4rpXM+yLPUeJAYeDiBcPxL3QghVL5UzkytXr0Hk
      pqjxTXmGqMRKvV4f7NLHjJvm5+SngIXD6K1fhSx1YRdno/PfuIzf+uYTsCwLJ0+eRLPZxIED
      BzA9PR1lIhoR8M9x6qn63GcEEQLgkYL6hgsnhO0OgSBPBdf9ufRJQ3hxUmESwNs2GZ7ZbHZo
      jThyer4PIfoppnKQh2yys+LGzyvKhTdqRM9sPUor5C5GKSWWlm/AyvUPvM5P49nXT2Lvnj3I
      53NjMRDf97G6ttbXs9F3uQ6y16gqHYHlZpFxFyDLc2hfPRnmEzhZ+J0GhO1ivhSqah988AFO
      nDgBALh8+TKefPJJlQ5KoBdO4C5T+mxaQ6uP40MJMXROFWUjkSpCwU180XWOZIK4SMw4EEKo
      Qy34y6I6mkkV3XSYNPLrczR955XeEkYGQMD3AxC/lIE0eo30l6n/FqdiCWugF1P5ExrvxkYV
      b7z7AV47tw4UQgIQlo3LwRz+4kc/x5/9zlOpj1P1fR/f/8nzOLniQfRTSzsbS8jM7uGnJhif
      FcKCU1lE5/L7uHXPNI4cXESv08DRo/fCsiysrKyoezudDur1ekQKcEjKCou7Zlt2fDQopZAN
      Bhsad47rKI5FNXyU20njYJtRQ3K5XCQbilQuvfLBzYJYQ82g/5sMNCmlOirJtmyln+vuT17X
      X4c49Yi4H7kkXeFGxkGuQEoGp+v/9/efxnVrJ0Rhb7RBYeF8w8WJj07ijttvS+XwuHjpCk5X
      bdgzi8qjJbrRZJ0kLHAKFQTlHSgVbNx2660RYt+7dy+Wl5fD+xwXr739Pu698zhmWU0hLoX1
      NUpiQnR/6mgoKcPY9EwQnrFUyBfQ7nbQ7R+/GXeM5jhcmMr56WmOjUYjNtxZhzS+8HFhFOfn
      wHV6ikgcMuREFCmEECrAMM4Y1tUtisrkldhM46QaQPRsvV7HRs+BKOVhhFwFP37tHKYqFezf
      u2ckE3vv5GmgOB/tF8AO/zoynQZ8CdS6QEfk0Pf/IJACsrwTotdCpr0C1wHeu97FXSur2LEQ
      tuX7PoTtoGsXUO8COSFxbdXB3pW1CAEkOQ3i8IAzqrHCAaXsp6tBIpPJopAvoJDPo1arj8W5
      9MHQf9rtJdCTv9PApAlglHeGA1cNg2BwWovuRFAEzoap66yR+2BmJHEJQHpfxP3b7Tb++icv
      oFPcnfhcI7cT33n6ZfwXf/S1kQkzlpBAX8eneebzOXzlc3dhdnZWaRLVag3ZbLh3cOXqdbx3
      7jwWZ6fw0D0PwPM8/M1zr+P1dz/EN770BQChyvPT106iMXUcoiTQkBJ2cx3ZbHbofDUguvbj
      4MrY8bBSSni9MA0tk83AsV3YtoUgSK+D8QHQqSi8/gs9R6rPzcw7MI3RBElGNs0rrr0gCBTH
      N7n4JkXsOuE9//IbONsqA3ayaiO9Du7cP58qXLpQKEEu9cKgOOq3T9lU48e2bczMTKuYrpmZ
      Gdx2/BiAvjEf9PDlh29HZXomUtLRHioYIGMP+6a9IZorl7xJqtymdrWIMzu2o/J0XSed0UQD
      4gWcgOFUNV43/pMsvGVSLfgCbwaCIEDPixrzOufXq0XE5WeMU+FtaXUD0jZniqm5ApgNVvHY
      p+8b2eaFS5fxytkNWO7goOvwf7gVYIphIuBzfOsn38dzL76Av336eZAiLYRAITNA9PXL5+BL
      GSGKJOj5PXi+h54XPW9NSef+tU3nNUZ2JN0MepneSCPVhEw0KH6dCIwKRxUKhdSSYFLqDzck
      gUFVvEklA5n2V3h/+r2b6ZPv+na7XZy50QRKhvvgY7p1GU7QQT0zDyEk7BFSYmlpGf/+2TfR
      zJg2zyTi94OHoTi9H7/91Yfxwt/9PW5cO4N//OnzKO69EyunX8Nbl15Cce9tuPHWz5HZuRf3
      YDeee/YZHLjzs8iuvIfzyzew8/hT+MIDByPvzLEdZR9x/Ip4yoTYnASghrjhO457kgOlOhJw
      vZ8qI9NpKmnHNSkQQqi80rDxybRPRq9+LS0n17lYHPB9lI9Ofox2dsE4lkr7Cgq9FWT9OmZa
      57HR9LCysjp0L4fp6Qoev2MXbrGvI9u+ASnjU0xHQX31DP7Hf/WvkDl4F868/jzOLddRW1nD
      MmZx7xNfQsYt4tDdn8HtD34WlzY6+NM/+2P0bpwGpnbjj/70j1DyGpF+gyAsmcKZV9xabUm3
      4DUu47xAHEw7czzRhYiKkqi3omZsBTgnCQ39QuT6VsFUTFhxpASVRle9Rq0Pj5/p9XpATDaf
      IzuKxgUkhN+NbNyZIJPJ4MEHPoU/++bX8M+/cj8WxerAvw45lPtrmgsR8e5jD+G//u/+W+z2
      lrH3zoexayaPYqUENzcFWBkUSyUUyi4+evV53H14EX/x7b/C/OG7sWNhHkI4mJufjkrTkFOF
      G3/93HXPH2TIcQLdtAoUtyGWBPqCmLh/EASxld1uBtDiUCiGbdvYqFYjbkqTv387x7NVRiCE
      QLlcguytAE5mSDupZxaQ8RoQCNC1i+iJ8lhFBnYt7sRnbt2F7729BpErwZY9o6cmjiD2Hj8O
      ALjjgQcBAH/8Z8ewurqK02sd+HYBC7sKAHbizspOHLztGB5+Iqp23Xr8wFCmGUV/qu8xxL8l
      CaDX1UkCk1ik6Dzd+B3l3qP2Jg0c+ckzJaWE40S9DpOUTCYv0KT64t6SfXv3QjbXhoLkpJRo
      2hUslY7jRuEobhSOQLpFLK2sj9XXnt2LkO0qAMCSnlK/eFkT0+4ylYLR/6+tr6MjXS3yN4CU
      g3Mf+H9eDMAS1tCmrGnHHNiCBAAGLysNt9ANOaqFw9ugWJ+baezy8TmOg2w2q6orB0FYa3Sz
      9s1mIWkDZxyJwHO3pZSqeoOJefREDp4dZolZuRL+8Z3zOH7kkPEMMBMiT1cqEF40coC7IfVU
      xyQ1TkqJTrcHsNpT5bX3sXd+CrlcPqxKx6p6kzZCHslut6vqiApLwJKWuoer28AWJQAw0P9N
      umucx0f29TPSE2lwdGLKzQRKuCmXy5ienlY1emjXVC/yOum+9TUaV/WLk4RCiEj+Rru2io7f
      j9VpDg7h4P+77SZkP6iuVdiNl197M5J/kSTpXdfFQjkklkBGN6b0IsZptIXpqTLs5jL86nX4
      1es4sHMaTz72CPL5UGX2/eH6r9Qn5T0AUNLAtuyhKFxgixIgHIgfqVWp72byDrkLige7AYMD
      3G6W0UtjpfLj5DKkl0xl/ZI2vLbaP/87Tvv8Xj09kICkmSLm2jVcubqGYztWcPH0dRy9+/ah
      dlevfIzp3Xcim7VQ7i7htlvvTT0m27YxW8zgRk8Clo1er6ciN/UNKV7lIY6AZ2Zm8HtP3A3f
      C++dmioPpAoQHqHV33CgFohIqYByp9OJnAxpWsctEQCdwGHa0TR1RsC5Pw1cSnlTVA2u51NG
      FY2FVAaqvrxdxKhz3jQcEYjfdTZdowA4oH8sUDsHdKtYvXAOlf3HcO6lH+Djj8/iji/8M5x/
      +YfI738IO3LreO8fvwe4FfzuXRl8729OYe7A3SjWPsb1ahXFfY/iW7/56dhxHj+8F6feXYEP
      G91ud0hVGjdMYWE+jAsylZAXIqzizdujqGUCPYvMtI5jq0CckuPO240jBnqWRJSu/myn54f6
      ppJ709PTKJfLiksSEVLYtT6WcX3bo8ZCkAYp9F1y07h4m5lMJqJze56Htz++gLmFIi5cb2Im
      b6GFPPbun8fahod9x++D1ViDV5jDnZ//OuZ3LOLl821864//EG7rBjILh/HHf/YnWMwmv5/7
      774Dv3nXHOxeI/Zd6q5eqtiQFoh5ceImoOgBOiFIr4RNnzlsW4Vb3VjjuZm675+47naNg/7T
      oWkU48IlEAVtUZQlf55/pjTErRQHI4kZURFhrg7B+0wLpHOTVDtz9jw+3nAxtecoZrAOJ5ND
      pZRFNXMQO+aKqJ5fRXbuAKYr07CDLqZzPop2gL/69r/Hp7/4dRTRAuBi7/7F2D7Jy/PQ/ffg
      1lsOKoamEyhXKZWdYCWvo8n1LPvqD1jAIc8YTMoh5rCpYDgT19EhCAK1A8d9sDyYiXN/04EP
      WwHueqOEftPmDHF98vbEIT8w8FyRpyp2d3GMJCApZSjKgwDCcNK9HjM1Lnieh5+++iGC/G64
      wsKBo+Fu8O47HwfFhC7s/ArQXsehfBOHd7mYvv9B/N3Lp9BzbVy5cBazfo9RwgAAIABJREFU
      5Tx63S4KxQJqtfCM3yQpPz09rULYTSEekbnEoFDaOZNblyM6V6V1O1TvY3Pl0Q2TGroHUe5G
      wGtUEhKNE+48CnSk10+S0edBEadpVDAppUow4XEmOowj0kepAHHEFLf2PNAQAK4vLeFq24Xl
      ABSuoHNFIQQO5pr4/a8/BcuywvzeNy6imtuJN9Z6wI0epL8KO7iGnPgIDx9dwGOfeXDItcmB
      M4qksXKVOg0Q01T2E6JMma8PlxZx9lYsASRRoC6i+TX6bonw/CQppDrYjOvh9MxmDrOOG68Q
      oS+fkmr00+P1OVAy9yjvE19cz/OQzWbhuu5EpJYlLASIbtHrDgM+Dv43DQgh+qrCAPT353ea
      WJh38T//5T9gtujiW994EgcqAic6CAtb2S5VPUQLwHPn2jh//Rl84wufxtzsbKwkSBrn2HMw
      fLcsC5YMICUiUaIcF/W58mtCJATDpeHI3N0ZZ5zxI0hJn+UT0kN/NwPUBq97aUJ+4h7tfulu
      jvxpPDHUBwXsjXqGiCyJw9Ma6ZUNuMOA+/PVusZINVIpaWw7d+zAQjbOuyYRdBoI6st48cPL
      qOZ242odqNXquOvoAQStDfOY3RzO9ObwnR//MtZzR9LSNN9xIO5+WoewjzDtNMkho0sH+r5l
      I3gU59QpkC8KIa5t25uWAnRwXi6XM4ZWENKTkcurMfN7kowlvnnHPUajQB0sDjE0Jv5C1NFM
      2kviUiyTySSee8y5WrfbRaEQBvC5rosnP3UM333lMpCfjjxjtTfwG7dO4fZbH4fnB3jhtbdx
      /FO3Yr1aw9+9fAqinzmm2pYBrNYKcrKF3dM5PPLQ3YlJM1v1nMU9z9fPElYY+ux7kBiuEGhi
      ghEJu+nRxQw46TfuviIwXUsLevkUQhbKJQCgqrSZvDajOL8uSvmJ5WkIwBL9k0pYifS0CEGB
      gnQEUJx+q4+Xfmu322q8tx69BQfeP4Nz/mAcgdfBg3syePThB9X6//aXv4C1tXX8b3/7PNrF
      PZE1CFobODQV4KuP34uF+flUZxDHzVlXQ+LApGrr11V7CffozIdfH5sA4hbfRGn8Nz3yk64T
      dwMGO3mZTCayNxC3G5vL5ZR6QDue3W4Xa+trKmMtbqH1xRi1YKRWcffdKLAsC0KOL/JzuZyS
      aLTeJmMxjggARAoIO46DxakMzq2x+7pNHFgc5AafPXceOxbm8fe/eBnN3M6B4QiJPVjCZx46
      jONHbzEe4ZoEXOLRXExrz4mF/65Ly9i+taVIO8ZNEQB5cIzjiEHWYrEYe0haXKIzIbSUMrKt
      zZ/jxinp9t1ud2iM43iZTJKC2i8Wi0bu5ziOUY0bJRU5geZyOXUGMifCtDYHHztVcCaJuLzR
      AjBQgWSvjdmZ8CSWXq+Hb//4BWSyOTTcGUg3NJxFawXH5x380y9/0fh+kiCOIeqIT99NNk2c
      BKDfooQB1c4479p4RJLe+SjQqTvpPh2SjOAgCNTCk3+X+qDqxHRfq9VSaZN6LPikgIxaKt9S
      r9dVXEscAfBn9fm7rqtCBuisXH0t6By0URthHJGy2azSzYMgwM9+9SrOdcpUrA0A4MBHLpdD
      EAR4+fW30C3vQc8thPE1fhcH3HV88am7sW/vnk2VTIzT3ceBOClhAktYKiJU9/boWgD/PvYp
      kSbOPw5nGgf4biZVpaNDGYj7kyuTh2WMe45ZnFrHfxcizKqi8uJU4YBsg0ajMfb8COEp94AD
      lzppigFz1yCplEKEB8y9eOIKgulDEZZQzgC5bBbLN27g5x/eAHLzqpriAlbxra8/qQ632yqQ
      J4yMehp3t9vFq2+9B9d18eC9dw6dXZaGqaq59729fhAYXaJxMDEjONUgY4BvYZPhprsFgyAY
      KpnY6/UUF05LYIS8pCOPIzL1c4qJGLjbMQ5MtohlWaporX4vxbOQOsefTbLBdGdDq9VCJxgu
      AVhwwpihl994Fy27pIjDbq/h60/cjXw+pnDWmBAEAX7+0uvY6AGdtWUcO7gX52/UcXhxFrt3
      zuHtq10ErovZynkcO3JYzW8UF9chDHmON3jjriUSwCjOOA6Q+hDnn6fdWDL2XNeNPY+AbIJR
      IQk0ByEG9TFpHJsBfkoJL72eNnI0Inr7EbFc96X2er0e1tfXh17+KDWAxsXbXF5ZhchGObkM
      AhSyYUhKrdUBLEJ2if3FDg7s37cl9yWH69eXsGxNI7t7D5au/BzLywUIexqXLjdROvkWfHsa
      Ij+Np9+9gn947TQAYDYn8Iff+IKax8ryMuq1KmzbwdzCAjJ96R8X2kJgqh6t4/RNIQAhhIoL
      oYQTQiAy8PhRmHqwmc7hya+fRupQlhAdwEwh3PQ7MFp6cY6kt00peUB8/SLuOCDjnQ6B1stA
      ttvtkQRlconS/WSg0z0rq+uwMpoqI33MTYXS66G7bsXb//E1eMWdkN0m7r5nf+paQ0kQBAFO
      nT6Dd05dgDt/DEII5MtTaAsbEAIiU0TdvXVwQk5lj5JC6/UlrK2tYW5uDp1OBy9+9/+Ce/kM
      IASC8gxEZQ6esPDgb/0e9uzbZ+w/jacSGEEA46gVo+6XchDzUygUIhlDHOE50lOdoc0QIblX
      yfNEkZ4msZi2Pd0TQkRQLpfRarWGiFh/tt1uR/YtdOSnOY/aFOTqTjabVetE+j9vd25mGrJ7
      BsJlLuhgQAB79uzGn/zGPfjw5BmsbVRx/OhDW0Z+3/fxznvv4ZcXGnDnjsLqn27p5kuot+pw
      i9OReegQsDIm1y5fgnv5DEp+fxNwrQWsXUFP2Hj16SI+KJcR2A4e/o2vqPOFRwHvd6QNEDfI
      OB96Ekgp1bGYlLEERA911vveLPJT5KZlWco1mhSeG9cOH7tpLagvKotuimyludEp6Dw0nICk
      QT6fV+EZowihVAqrXLXb7ZDDai5UADh0cD92vfohrkupfIXS76JULKvx33LoIG45dDCxrzgg
      KU4OiW63i7fefQ8vnFlFee+x6JrJAEI4ie816NRxtNhCpVKBEAKnX3sJxT7y87YyCDB74kUA
      wPr+O9RajPL80DV6nxMhAP3+UZKAjMZerwfHcYxb/JPQQcnzwDm/jsijxkrcNM5dS/NoNBqK
      8/PFj3Cbfih40tyIg9M5DXFAxjchPbmMTa7Wrz16N77zDy+i4duwZw/A9juo9A+u3izQpiVV
      ceDzbrY6yM3uGtbPg0CVUYzFE9/DsVsPKslW++ANzCMeH5rCwbHHvxR7YB+NlUAIEYZNSMB1
      nNE2QNJvSURgAhogbc4ASPSgbMV1SpUIRi3IKKDxcgNVN1y73e6QCke/cYLTCYIDqT9k3DmO
      Y0wS4hKMfi8Wi4P9D619y7Jw6OAB/Fd/vhedTgevvv4mOp0cdu/ePXYYMv8fBMHQ5mTE2DTs
      WvteFyJrfifqPjHYwLRtGz3LRiAs2IZSiz3bxa5v/Cluvesedc33fbz76kuor6+HTMt1ce/D
      jyLX92qFY5fo9brwPS85HNp0bSvuTh2SfLxbMb4pH4AM3620J6VUZ+MCobrBT2Yk3T2JqEa5
      8OgeHvow6rwFkk69Xk8FA8a1L4QIuZ1t4/OffSSREE3AiZurePzIUt4XYtRMr9MGRm4oC3Wg
      SCaTwW2/9S1c+Ov/HRVvuO5sc+chHL3vAfR8D3Y/ovbUB+9j6Yf/DrleCz4EesLGiVIZ9z44
      yGW+evki3vrx9+BnCuOfDxCZKB92igXliJCE/JsF8qsT9+Q+9HGAEzp3Wfq+HzGEiQBGSRQy
      VpMkY7fbRbPZVNJrFAHwtniVBT4uHkJNf8dlUEEQoN5ooNNph567IF7q37hxA++88w42anU4
      O24F8iX1W+gu7o7cpBRChKcN9J9pry2j6A2ryD1hYfHTj+PG9WuoVddRmZ1HdX0dZ57+Hsq9
      Vt+jJGFJD9fffQP+/Q+o/ZaLJz9C+czbWCouxBOAjpxxEiEt6G7MUdyQSl4QpHHNkU+ep+Jt
      BggJqQ2+h8ARmasjSWmQvAiADuQBazQaY+9PEPfllTnoerVWhed5KJfLyLiZsZEfgAov8fyB
      qzeTyarcZQJq97XXXkO9XgcAWEsfQ5YXgH6FNr/TQgAHdgIBCAGURAvXrtzAdCmPffv2YfHQ
      EbyXKaDUqUfGX3UKwPUrWP77v4TVaeG0nYEbeCgH3ejpOwD8Cydx8sMPcdudd6LX66F2+kMU
      AJS7jeGEGF10cZ1vUKJua/XxqW3eH59c2JcPCanCidO2ySNINzNOGgftV1CAmm3bQ2oGjZt+
      i2uPF2rSx9th0aubAXo3PKtNCAHRV4/W1tZSV9vT2yWC5FybXJRE9JwxRWwW3wPY+nebNUg3
      ObQi59Uw172C2sY6XnvtNVy9ehX7Dh5C9o4HITWcrPSawIv/EaV2Dfmgh0qvgYLfUX1yKDXX
      8fb3vg0pJd78xXPInHkXAFDsNc0ZYUncwmQMpUGyUe5GWlB6eSQCKVvKhHjbBRT6TKVTRnlu
      6KxcYHgzLC4ZH+jXQ+qv31bmI2W0kJcQAvlcXkmtjeoG6o34UiWmcXFd37LCpBMhwoMQ47SB
      48ePq7kGM3sU9weA+o2rsHLlxH4zQVOdLiOlxNraGmzHwY477oeHaMiKLX04fWKkf/qaEFiQ
      cNoNPP+j76P6sx/ACfrlUjCB0ojUmUlKmAYzCpGFEHBsG67jqjLiut64HfYDARmUHOmTkJMH
      7AHDHib9dHb9WYiwBHuSAcvXyWRc0mfujcq4LoqForq33W6hVq+lWrd2u41arRZ5r5R5FwdS
      Shw5cgRPPfUU9h44hF5xQaGklBKdZgt2znA6B+/XnkLQR0nbtrG4uIggCHDk6FF0Dw5XsiO0
      F/1/SbDgNeD98ofIdqKHLcYSgAlR6RqdfhgHJoJIupfXnuR9UlCXSdymAV1Hj3ue7qEjWnmx
      rLjiXxziDOEk7k9zzzCCS5oHEFZaICPcVK+TysrTWHK5HPK5vGImvuenqsCRz+cxMzOjch+A
      vscnSK4A6Ps+Xn/3BE55M3AKbFdWBmg1GhCGg8A5dO0CrudvwfTcDjz55JOYm5uDlBK5fB4P
      /8F/hnW3GHmno9F+AJYM4MjoO5LSUBqRT87kJw76umGcKBwFcZLBBFtVc0gdSHLfUnlE2jfg
      mWXdbjcxJFjptzFEQu0mEQCQvrx8p9NBoVCI6Nq6/7/T6ahITiJqbl+0221jdp7elxBChazk
      83mVk6AHmOnSqFwqIKhHVbpesw4rW071Pnsii3yxrA7Epn7cTAb+mDkeaaTdplSg0FU1+oVN
      UlePUP6YbXKbhaRBLpfD1NSUKo9I8TlUGrHRaKgNqbg2KZDPFLzG65+axsuNV4oyTXMqoxDD
      dfa5SkhqEN1rYmJUHCANkCTWy6TT/gcFMhJh3HnrEewJVhCwQwC9TguivYLW2Zf74RCA1+1E
      9guEEJCBHwa8ySAitZVtiM3bfyZiEGITZ4TZloWMm4Fjj64GoBu3o4DHyNBztDm0GdWH1x/i
      14vFovLykMHX7XbRarWwvr6OTqejbIGk8iNUUc5URzTy4mIIAIA6RnR6ehqVSgWVSkWFQ5ie
      bbVaKsiP5qd7vXhNTJNqFgQBqtVqKs8TzYVyMXgYON+U45LAQtRGK87vwi2f/Srm9x2C165D
      dpbw+t//DWrdKFJe/+gd9ISANIy522nD0phuWobINQH9/6YTYrhqoRu5m+X6tm0PbRjpodFx
      BnAagxUYnEojpYzozFTtDYA6LyBOLyfuV61WhzipTvCjjNtisRghcpI6dE6aKbCu0+mgXC7D
      dV3U63X0ej3l8SFuTWtEOr8+DiklqtVqbI6zPlYi1Hw+r5J1qB39r+f7Q6EQQBgNGtTWsb5+
      Awfuvwer56+g3rqGubvvxvV33ofsLuG9n/8AhTsOI9+TuP+Ju/Dyz07C7ZzB0z98BjM3zuKV
      ageVcgUP76qoeam++wd28znytab9J3quvrB/smVR4oLFdF08jnhInAIDb0oagor7nTi8/rsQ
      YXg0BeFZlqU2cACMVF3oFEsT8pPKUCqVEsdOKg9Xeyiakq47jqNsEIpopTGQn17n8pRnQDYD
      PcOJmY+LaniWSqVYL0+320Umk0Gz2cTGxoZyFlAAIF8bmofQbAQA8LotSEhcOf0Gqt0Mgsw8
      dpez8KpLaGysoTwzjzvv+TxWzr2OjbU1vP/663juR8/ArZ7BpwsCV2wXnzuyA+dubET6VH0w
      vsjnaJLQbWFj7xNfmywBJPmzuf4dB7pBZWozTtpwYqJrpOt3Op3EXVZ9gfR7SUoQIlD1CX3s
      NL9isagiJJNidHQgqQQA5XI5Mo9SqYROpxNRr6hfmjcVCiA1pdFoDHE/01h838f6+joKhYJK
      8+RA5yWUy2VYloV2uw3HcVCpVCKn6ERVIi25v9PC6uULcBcOY/bYE7h9/wGsnP8QsrkKceYV
      3HtwH4puG5dOPIfHPvs5XPvFD/Dsv3sJe7I5zGcBW5RQzGXhCKCSMx/2zSHC+ASGbNauk8XC
      nn3bVx6dICKiDASSxCF1iNtP4P1wiUO+a8raIuSJUwmUO7HTjuTqUuI9tZmUscVDmUulUuwG
      mQko6K5er6PZbKoAPN/34ThOJE+XMsdI/3ddV42ZJBxP4RRCRI6yMjGOZrOJVquF6elpFU/V
      6XRUbFK1WsXU1BQcx1GOgqmpKVVZW0mjftt+twXLycKybfi9DgI7Dytbwa4DYULM/MHbUa6f
      xZ//kz9V4+l0OvjH734bO6+dwZ7985H1WZgK9xH2VopGJhmLSxgQAt3Tk0Aml5+8BDANZhwk
      T7rOfyMuaOLsysDplyrhKZAmKUMQyEGWmo6wFG/P1TQONHdCBFJt+L2jiEAIoapf0CEdRLCl
      UimyOUdSizgdR34ppQqs09+DLiVp7HxdSCWivGuuslarVZTLZVQqFVSrVVSrVeVqlTKMaL3t
      yCH88sTHODSbw/p6G+sdCcdrwbWiawUAWXtgtHuehxf+w18Arz0LS0oV/pAGdKaWRupuyQjW
      OzIt7DiD4ffGcVduKJIfmweRcW5nWVYkaZ67LeOKPNHzeugDIRiJ/yQjnH9vtsI6RaViaaza
      OlSvh+ocCSFUGDaNjQil1Qqzp/iGG7lCk+otJfnIO51OpLQKByKCUqmEcrmMarWqgg+JKe3b
      vQu/VZlCPp9XTMFxHPzji6/h3PIpFkwnUSkN8gNqtRpWGk3Iyi7Mr18BAKxlp+DvDPN+BQBb
      dxX3p+FXV1FZvTy02aXDeraM3tQ8OpYLx7YhJFuJ1dXVTZ3Uwik6jahPolQSo6YXxMOdASgO
      lXZ8QoR5woVCIWIER+6FRD6XR74QZlq5TmgYkruUxL0+Pn3etm0raVAul1Wpw7QgpUStVlOe
      Kkq7pPkn2VobGxubDgUnIGKLi6ylTDRS93gSCwddCnHJpeMM/fazv/0PcF/4EYQQ2MiWEczv
      huz14JWm8ZU//efI5wuR+ZLt9JP/5X/A3NL/W9u1tMqSFOHI6q5+nZ5zx1EYdO4MjKOCI/hA
      EUFc6YAguBJxo0vBnfhX/AXzlwY3oriRcRzczDndfR5dj3RR/eX5Kioiq7rvuQGXvqceWfmI
      d0ZG/Ct914Iv3v1Qfvmnv6S1eBYVaKq4mfKcJ6IBmKyHh4fJ2ZJZJRpLjRLbk4elbmQ2Gyar
      8lQuDcyBwQGRVW4qk9hsNim6FZtmTdPI9fX1aIDeq4L29WvQjIc1AZbEns2Hw0qWXffmV96W
      m2IuZWzkxeNO5NO/y0NRSvPV9+T6upN2cEJwe6LKoJrzoxlXfhr6HRt7ZspzuZgcb08BGzE4
      +Lzb7ZJ6YMXEcHu4HkJIsTTeIfynD4s0sZX5zK42njPGre8/PDwkhDknLBkZJ7ik1Fi263N2
      eXMAA3sqjDkt+Dn8AzPCGsOD9YOf/kwWP/lI9rOV3BelRBFpPvyxfPS73/d27bm9sizlR7/5
      g9x97Rs9f89hvpKbt96Rm7deys1bLyW8+eV0ryiKcRUoZzTqgY4Zr1YSKN2O9R3k9hHpPBW5
      LBLaSOR7L168SHp8LigMVWZwEAbtVVXV20EdI3jeyyiKIrV5jioEW4D3KbBTrA1juDP1CbFL
      wbLHxohfO0FyjBES1cKL4/Eo//3sM/nH3z6Rx3//U37469/Kt779YRpvVVW9hMFgiJ//51P5
      5OO/yuaLz0VE5H9vfyC/+OOfe4TCNuDoSlhIohE+5//PtaUnWLsx8Q96L/ucc8aydR+TlgsC
      AyS/+NVGtlfbXkQqjkZa48F3vLHyPS/61VIZsJcBzg79HgWhdbsWWP0ZgzEGpfEAY9R7DpZn
      EG1xuArfL8tS3n3vPXnn5UsR6fZFUPgD9hDS6GN3PMYob7z5JXlcvSEr+VwKESlXm16+oIHt
      NjoLEybGmhzvPqsrFnfQbSB1OpI+8WR7wMTDgIXxskUAmqaRqq562ajxnjZmmWhzbSJ8Av+H
      Ac9ZrT2CQgiCth308+CIOfUy18ep4BEGE7UmRFZHp7Yr0kl/GP2aecH4jTEm9WmxWMj7P/+V
      3H39e3IzX0vYdulfPFvkojKpU+/lkJsRmReGr2NzB+/O5/Pkn/ZShlj/B6fBRhI2yHK6clEU
      IrFvzIbwVONYZ6S2xgvDF9erqkpcS8f58NkHa7GWy6VUVZUMfyQW42dfV61lQIzdEVWJ4xIk
      hODmgj0XwASstqAOYh3KspTvfPf78v4H35Td7rbnMbLwYxIBWGLP4yZT7AENIAJefOTPFOk4
      G478efqz9z02uJBGpK7rREg6pEFEet4bpGPnvPNlWcp2u5Xb21sX6YC07C3BnFlBbgguA8Hr
      8SDEAju02+22pzvDRnldniH0Xacfz0FO9z9HEsElvNlsBipfXdcpAJAdA+vNRtYndcnrUwgT
      NsKeQ2yOGU7QrwEoERRCF59/OBwSt8av1p+97/E1qEBcY4D1Rw0wQHUWZ23kMVMAMDePMSZ9
      HYF0uu8xxuTdwRFEXSIVoRI6XifG2CvWYY39VaHfxvjm57mgx2MB1oKD9jDHuoggq4I5G9Us
      kPFcXER3gjttXQshyPX1k84WYxykC8H1Xhay07VcwFdd13I8HmW1WqVEtSjbhIMd1sRzhKaG
      nBcEtYRhtMOF60VQikgiRKgO2t/vrcvtfid3dweZFbNnQXYPaiStjVHkRJC5IEO2n/R1Br1m
      iOLVdksIIUlOMCX20lmFRMbw2SQAfimHwLkBcactFSfXXl3XaXDwgPCRRRhbbOzu9/ueLgiu
      gGc5UnKxWCR/OUJ7d7ude0DEy2O0WCwGu8J6MVerVeJYyCCtPVQMHPIMgs0tYNt25aHaGLv4
      mWfkygy8jmBAHrPxrnlc3rJ5NBEAEASI8xDahuQ2mICwm84Qo3EmmG9aIt97Nvc3D9KTCoDb
      29t0HccKEfcCpNCAYhrQB9lo0gYS9xEcA3H3/G3utzV26J2WDSHSLdRisegdJVwsFilL9RhA
      JRqr1NIleu2OGcLwzCGmt4456Yl3Z8VMRElfBCRq5GaC8dRV3li0Ut9oIgghJES+v7+XsixT
      iHjOIYHr1hhfa6Fs71nNAS2OCGRnhPfskePxmJJXYaMLohKZk4uiSP5gRHYy94Z0sUS6Vakm
      hM4tivBltgMwwTDa0Tb6gDBja0MPiIBjj2NQhKLL+GAUEdHt5mCKxChCECnsot5em7l2ed31
      4f6xvuEapDnUR087YSJi6WUSgFZ/ztkS98DTe0HVnlTw3uMBIbMy2uH2oNYwMsGTwiISKpa2
      N4DoGjCRq9VqUNSC+4X4H5GnMBC4MOG5YV82pBm7RXPQtq0ECemM9qVOiykEwCqnvubhyBgB
      iDxxZpx7AGAeLZW8aZo0d1M1FbTJ6pCZFuW59UeRfsTfmFeIDVoLeJHxm6vRy14lJhx4T1Ci
      dLlcDtyTufOyULU2m00yblmKVFU1SKsC1QvPYqOPkeuc+Ye0gDQZU2OeAywCAFzqRMm9Z9mQ
      fGZa74eM2ahYg6IoXk0FsoyKc7jPFLvCsh3OAeyi6nZgwPJWPLguczOvUB+PAYZuVVU9m4D3
      D0SejlZCYiBxVi5AcMr4tPHvSe4xxjMGY+97hq7H5LzrUwGSMxcVnLM327Z9NTeoftb62BhX
      4ve8jl+iiml9D9eALJzhAN4WqCCQAtoX7/WdXXEsuTj0GW46zqgAAw6bfrk4fwvatpWbm5t+
      1oxuoO6cX8pIeLy8M55bX4tgLOmNXyZk/U3rukcsliPDu2eytqlUCFUl5wbMATgxdjW5vUvU
      AW4XiM/V13lDDe5QhEfjPbjWEDrBSIkTZXd3d4NSSOD2IAbYBzxPeFfP4Vh0qgXYpIsxioQu
      Y18b23SsExG0bPA9h3prVWLHePU32Mbi8eprYCI5lZd/+T3vH+ZIu8y1pM2mRpwK+p2cPsYT
      l7hwVUlV170tdi1NLOmiFwHclCcTx/LAfZHfBnp/URQ9AoDrdb1em/r/8XiU/X4/SJ2CyYXE
      0By9aZoUziEyVB+n6PAiT35/xOsXRdHlyAyn/Snpzjbj7IN3cOVc0Do4X0O7Y8Fuuj0Rv/ba
      FJiiQo+9Z8p3jXQWoo0NVBucfB1/o87u3d1BYmwlRp9YPEjW/HzuJrNCAQqoUKxzI06fJQ/a
      0RIJrlnMkd6MA9dt27YXPoFnWYXTyGPNl0X8VkY3vN+2bVKBRCSVT3quIDmNqNbf+qhjTr2F
      xMzZjnxvCvFOwRlua7RCDC8S/+bck9aHrEGAI3cbKX6RaW8C0iDoAAs/A72bVR8RO/EVFhMu
      SyA7vAU4qA7VB0lmsf+A/lipHHNFvT3xjT4gRKMsy/R9PmgDIixCIWH25Prd7/dyfX2ddtJf
      VfWZYqSDCYDgc8AZLHi8lq1wCUxV90wVKGdEWNc8wwX3xtrrFnDousq9t1qt0sGQq6urAfJD
      7UHYMrfhZYUA90JsEBLXIiSDERJpR7jur0ifK3JbHFXKew1jc/Ox9w+JAAAIXklEQVT4+Jg8
      PcfjcRCz5IUktG2bsjd4DIQJaUydOEdNYYmk20Vb1vdynF730VOJ9Ttj4HqBPGMlJwm8AY3d
      m43kjReRQUQm/Pb6oAy3//DwMEB+HGjxFrSua7m9vU3qmeWx0F6LnGcFxKJDIKZ4Y9iQF5FB
      G1o66rUBEXD/cQ9EyfPi9YfxYcz1bUkx3cecHeG9Z41hjIimSBCTAHLAC36pETJFKvB1HEPU
      agySQekavbzI6CvbCJoD4d37+/sUVty2bSoEcrUcbmbhF+kHc1Ugl8vlgBDxi297XhC0i7MJ
      nrTVevfY/OsQkxyMEbj1LEsB3VfGHYuDWyo19wGSRc+ZhVNe/wAXnwizJoU54tj7U2A+n8ti
      sTBzeyJ2vixLiTEmf3hRdLmD+AwtTpJZXB+IH+NTNranmyJBhq4z3jxDfQBvxxgSarPZJBco
      4pM2m03yTnkEgEVEfiBc0wuvw8Nx3Rqvd93jqOfq4qw9eHPOewm59tlxgXcB1okzLW00MWkG
      fnGdYO/+uZPlcRa4ITnORuuAfHKL3Yv8DjwzMM4eHh6S4YrtdIQx6L4XsyKVGM0BJIalp6KP
      6/U6pUiJMaaD/tgEY++VXrT9ft8rWGchFTbxwIRw7hkRrnp8vOPNyDVm73khKnruci7Rqfq/
      JQn4b5Z63j0P8MwkI3gqXIL8luECbm2JfTyvi7ZBZ9fVy/kQe4wxxY5g0riiiu5X0zbStLbB
      ypxEh+zqtvCtq6urZBTjG1YYBFymVVX1pBI/z31AOnYY2fAWQeIM9PSTVNIn4SwkBD4wXnjr
      bHFfjvK0bACrf56aZwHPDb9rEYwFZ9sAzwkaYbDAcNvlFsiiepF+uAQ4LADtMbJa+wbnGvpY
      aG+Bub/b7TZlYV4ul4PwB7R1OBwGMS5oR/fLcv9yChmR7jRXEJEoImUIEk7EovcULGbDf5+D
      H5hjVncs5L8UtEPAsjnG4JWC4c5VeXKGVJQos/DEvbz3LORE+kANHMiGEkgi/YnDWVLrOF05
      L0WCyP6wT8Yogt543DjnC2Lz8vtgp3i73fakgP4uzjNYqge/g//DDoJxy1VhkpojQdp42iqW
      IafUnBT3eJ4tvdoDj7lw2/yr3x0zXq228P+BKptx4U4iAI+6zkV+awBN06T4lW5Lf2hY84ES
      6LZQa4B83kSiPetAi8hTWSadazKe+lY1XYgGp/DWwEYq+gYi0MYp/rayL8f4FLLBfef4dT3O
      9Xqdzh7DI6XbxfiDQiKsJyMqB/bhe6wGeQTgST5rrqxxJFVSuuLoU1WYsWc8mwbjmCwBXkVU
      eciPdnPG13a7dT0s2OiyuL9njPI1jGm9XveKTcQYJbat1CKpSDd7erz+Ymcb4RXw9mjOrQ1e
      /u79iZA8Y1CnEkRYtT7HgDECsfQeBDwxHIGJqi+Hw8ENn7BUpDHcYKK0OHQiCokS2yhS+FJg
      DHKGNxNfYoyjLcpl3h3+sIf8IievxulYn77OyK/70DSNeZCdDUVwVLTn1cACoXFcSghdxfqi
      6PoPYxwRnjmjDgFrQG6rnCj6hmsxxhQXxQTBz2tiQTAhe8Gs+dV9hXrC4Qg8v3ASsIFurf8U
      vLDmiMfR6+uJ2UATyOGN7gf/Wt+21ugsCXAp5MQg7uvtfPjN4aqENwhHBeF718cX+bdt28S1
      tRrCsTtYXCtjQwghLYqI9A7QWGPkhXh47OwKGLqWCqP/f7jrzgl02de68BArDynP1+FwcPOl
      MoJyvz1DkXMSncvwvHFNKQzC88cF2DlEfsr7Y/2yIEsAHhWeIxG0uuC9y88tl8tk0PGBcyt3
      j+4j3sUmGocRVFVlFoED982pNznQRNO0jQQpkiQAp+Y058zZMbZ+Zjc7K0I4EYXlLEA6GUvP
      5/7pv1kKPD4+Js+U5XHy7EF+Zsp8jc0xq4uBGIGG3AagVnmsb752CcAIPxWxjlUl5Xwuu/1O
      OA/llAlG1mAGRISC++tJYzVqysJo+4Kvx/T/E/IFkVjHlNVMRHoBdUC2x8fHLrHVKbs9JA/8
      +lrCWYsNtYptHs1wtCEL5EBt4fv7+4HaYyHPlF1/bt97zlJfmAmxxJ5y3sDDFc1EABcRwKX2
      wJRJCCHI3d1BFmV30DtXkV5DCKGn5zdNkyI6+Tsaga14FQu065I5+RNitdKFdneu3bbtxPqx
      Osrt7lbKeSl1U6fKlYD5bN4RS+x0YDaec7vEnm47NtcaQDAgTm0fWETA82Ahnpb8Vl+svur1
      gcGO8fG93He9b/IzWezy1IEcRV8CzSnlXhm6DR2k+JsSJcrA53frupbdbtfjGnBParAC1Sxo
      23ZQrFpDEQoJRedzr08u1E5895PiYm7B6S3DEMSvEQJEi91iTfg5NQ7IZPVdp3aZAlol0hKK
      n+O2tZHvQc8eU6Hmup9aak0Zw6gNMHb9HEKw2mvaZiDmoPNZHMZqE+8jZr+qqnQCjN/VBOB5
      IzyYwrGAXEFEFqnAnu3Oa2MUkVbms7k0bT+eCFKA2+VvIeZJqwtTQHNR9AnqFvdT2wi5b+Qk
      hL6u51G378UccZuWjj/VcAa4BMDixRMzHuLoSbOgaZpu06MokuWvDTYGrY9isJvNZlApBEmy
      9DhgVDIn4VI7ucXlsXDbMUYJRehJK91OlCi6ZSB5EvEnyRFj5wuP0p8DvZ+g7Ri+fk44APpa
      13VyqWK8+pkpOj/355x3NEw5H60JaOr3GJdGE2NNQWbrA/rZNkaRtpViVkjTdLksYyupivc5
      bTNH1wUnrMxuANgDSKwaY5fvvsuvGWU+m5aWpI0tSaggZbAzx6V5iFFkwB2LRBRTpRDaA5Jj
      A4wl3RjSjLXtwSVq7zm2iNVvy2bLgSc1ct//P0EHQbOj2dc+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Appendix' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Conclusion' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3daZAc533n+W9V1n1fWXff6AONbjROEgRJgYdIkZIoUZJp2ZLt3QiPZ3Y8
      fmHPjGMdHnuGuzHe0W7EjN5MeOzdsMf2SpaGFEVZokjxAgiQBIijgUY3+r6vuu+7siqr9gWo
      JimKpKQ1QZmVn3ddlceTWfXrJ49/Palqt9ttFIoOpf6oG6BQfJSUACg6mhIARUdTAqDoaEoA
      FB1NCYCioykBUHQ0JQCKjqYEQNHRNB80QT6fp9ls3oq2KBS33AcGoNlsIknSrWiLQnHLKYdA
      io6mBEDR0ZQAKDqaEgBFR1MCoOhoSgAUHU0JgKKjKQFQdDQlAIqOpgRA0dGUACg6mhIARUdT
      AqDoaEoAFB1NCYCioykBUHQ0JQCKjqYEQNHRlAAoOpoSAEVHUwKg6GhKABQdTQmAoqMpAVB0
      NCUAio6mBEDR0ZQAKDqaEgBFR1MCoOhoSgAUHU0JgKKjKQFQdDQlAIqOpgRA0dGUACg6WkcE
      YGP+Cv/it3+L3/vjr/3M85x+6i/5z9949j3fr6fX+Fd/9LMvT/HL6QMfkvdPX5N/+6//kMf/
      27cJO/SUUtv88Z/8B5qmAH/2Hx/n//z3vw/NNsaeo/zRP/s8j//pn5LRBfny7V4A/vxrf8Sj
      /+pr/MXX/oR/+4e/y7/7X/+EfEPD17/+n3Do9FRzUf7dH/97yhoX//HP/nf+8//2r/eW9x/+
      4Lc/2k1XfKCPfw/QLpGv2xnr9eFwOPju3/0lRz79OzxwwM43v/8KM4tr/OnX/hOTp5/lh9/6
      f/Ae/gxff/zf7M2+ujBDtQmzN2bJxraZXUswun8EoV3nxuwyP/zWXzN46st88UQXf/Pk8+9Y
      nuKX38c/ACo7I6EWf/nNp3nmxTPY7TYWZia5sbiK0+kAjQ6zQYegBqfTycriDS5Pze7Nrlap
      uPT6aZL5Km29nX/xz36Tq6/8gOm1BAB2h42luetMzy/j+InlKX75CY8//vjj7zdBtVpFluVb
      1JwPg4r7HvgUS9cvU5R1/Nqv/TqpzXnsvUf59UfuRQUcHBsD1Dzyq7+BnNlkJ1PjyPgIDjHI
      iaOHWNuMcPjQQQ4fOsD1yUmGjz/Ap+85ilrQ87nHHqMUWUbnG+U3v/QgatVbyxsbH/uIt13x
      QVTtdrv9fhOk02nlQdmKjy2lo1Z0NCUAio6mBEDR0ZQAKDqaEgBFR/vYB6BeynL+/HkuXp1m
      bmHuXe83qnmypTrTV67SeI9lTE9Psz53hUz1/deVi21waWYZkEmm0mwvL1B8c6FXJ6+8a/qF
      ubfaI9dLpPMfsAJgZ22B+dXtd72eTCXfd74fb+ePxdfniBfftsWNIleml993GfVSlnz1vfbS
      +6y7GGd5O7P3dyr53m2dnpl+Rxs/aJ+/37J+Fh1xGfTZb3yDO37jN3jm//0rTFo7oxP72Frf
      Zv9t91NbfpEXN00MuFV4dRpycplKy45Jr0NdSyFpbCQiG4yG/WitFnZLLQxaLY1sHI1N5N67
      bufMi89SbumRo0vYDj/AkbCO//bXT3GoP4TG78dsDFBOb9CoFukbPcrIvm6ef+YfWN5K8Njn
      H+Tihct0hxycuVHlVz99kMkLl7nzM19k+bXTHDhxgKvLKVILK2hdVnZWZ7j/kw+zsryO2emh
      vD1Hw+xnYWGKu46M0X/bKdauLpNMLdDWurjj0CAXL14l7NNxMWLijn0WdndTeI0SaZWLfeNH
      iC7e4NSJEV56Y5lSYoeJE3fT59XwxD+8jslhQTSpiGfKeI1lZqohfudzd/HaKy9SkDRY1BLI
      FRw9B9ha38DjDVLMxDDqtXhsBqLpDDrUzESb9Adt3H/nYf7L1/8rj335i9yYX8Pp8XPnsVGe
      f+4FDC4fO+tL3HPyNi5cnqHb2Sam8iM67ZRiG7T0doR6mqLKTr/XQCQrsXHjMvd+9kvsrs7R
      Nrj45Kk7WJy5xvxWEoeuhVwrse+uRxBVBa5cuYw9NMjO6jKjowPMLmx+/HuAtzNZHTi1Gl6f
      vIbFYqJULCJ6RfYfOEAqHieXyrF/pBu1KUA2sc6163O05CYAuVSCfC5DaN9h0luXuT63jdyU
      gTrpkoxczmD3Bhge2ofdLTI4OIzNqGP0yDjx9W3i8Tgul5OtnR2gRKGqJ+xzs7WxiZTdpqFz
      MHzgAJE3/45kJTLxBM1mlVQuh6B30KgV8IV68OuL6IJjJKPbFBoaHn3kIQYHBxHqOarNJqlU
      jpagp92osbG1SSm+isp8czuvT13DpFdRrDbpGjnIuW/8V8xdI9Cqk0gVcTot7OzuQquOzuKh
      XskSiacZsMlUBDsHDhwA4Nq16zRaMpl8ifF9Ps699BL7jt1HZG2BRCJJKpliZmmLE/vDxHJV
      uvtHqGQTCHoLg4ODkFwjOHYX0e1l2sVdrq2k9m64bmxukt3eICfBgSMn2LpxjpJso5yJE89U
      ePRTJ9jaSrC2sUqgq4+RARfXr628Nf/WJhtrK+QKZfb3utjNVIjubCOrmlw98yza4Biq9AbB
      sTs64U7wTS6fDw0gekTGxkeIp8v0dnfhEv2sLy7S09tFwOfDIXrQ6824bFa6gx6MdjdBn4jP
      58Mp+rA7XZhNNoIeM3a3H5/opVXLo3cE6An4sLs86AUtheQONm8XXp8XvVqLR3SiajUxOzwE
      vCHKuQhqkx2Pw4JKZ6b/wBFyW0s43DYEnZnu/gFCPgsrGwnC4S5EhwOP6ED0iHQNjJNcu064
      f5Sg34NHFCllUoT697OzuU0wHMb75rQGjRrBaGVk4naiq4scndhPRVbTHQ7j9IZY3Vjj4fvu
      RPXmfpKbLZyiD9HlAEGPx20j7HMTreu5+/bDrCws0t8TxmLUojXaCQd8eESRwL6DROcvM3jw
      GEa1hGBysL/Hy+WrVzEH99Pf5cdtM+IRRZpSCUt4P4nla/SPHsHj70LTzOMUg3g9ToxaAZ3Z
      Tv/wfqKrc4zf8QC6RhpHoIeuUACvKBKPRvGHuhkb7GI73aTLa8biFAl4PaQSMZzeAP093XhE
      Eb3ZgUklUai1GBi7DVVuA0fvAZKrM51xCKT46eqlLMlym7DP9aEsP5+Ksrqb5fDE6F7Aftko
      AVB0tA44BGqwPLdApalGqlXIF/IU0jGqLR2tao6//fO/BUOVgkokvblAMbXFd1+4Simygq17
      gKWZaVyii+2VVTKVBq1qjrXdFCuXfojkOYhQSbG2uU61WqHSUCEVksSyVWxGNZdefprpuAFK
      u+gsLp584lscPHgQgFR0i61EjksXL+ByOtjZ2sBoc7O7toisNbO5NIfF5UUrlHj2h5cR2gWq
      bR1Ws8Dzz7+C1WqmVq2iatWZXlhj6/pZ5lNtBgJ2/uZv/haTxYLaYCYdj1OXJORagc1YFrfT
      TiweR9OWKDfbLM4v4PW6uX71Kka7m0ImTqFcZ3Xx5vp1gorZ6eu8/PrrmDVtipKaF559irbO
      RjUbI1dt47CZATj9wvP4RCsXZ7ZolhK0tBaKuQz1WhW9yUyrXmZ6YQ29SmJ5M4ZB3WZrZwuN
      0YZBK7A8P4PO4mJ3bZ5qQ+aJJ59AdFt4/coq2laedL5CNJbAalAzNbuMQVPm299+ln0jgyzM
      L+HzeWnVy0xOzeL1+5i7PoXd7WNnfX5vXo/DxPTcCj6fSCIe74QfxJS4em2LlmqaWjHJ/iPH
      efXMJXQWM6LdRF93gHIuRTR6Bu/Q7YxbUjgCvZQi13n99DNMHDvJ9595mnrehNZc5eTRwzz/
      5PcYOxLAB8xePIdncJBzMwn0laugktHLbS6qWnzy+DCrF67w7JyM+dIshrft7ZdefomJE/eT
      y2S4eO4ljhw9wNPffRpbcIh9sZd4fbvJpdlt/qdfu5NMNsOLp6f47Be/AmgpVXO8+NKLWAxG
      zBoZS9coJq0acXgMBLC6HAwEzDz1/SfZLVsY9Gmo1uqIehlH4MtcevUcOoOeUqWAWiWzna7j
      1pf5zlPPkFif4uFPneLKVoO+EZmpM8+jHbkL7doqtVqNH/3oKXq6PYwN9bF44xrff+Yp/vD3
      /yUAtx8e5r/8+bf53d98gAtrLUpTz9KQ6rgsBu599Ev86AfPcd/Dn6aSjnH2+0/RPTzE/juO
      8vKPXufew1aefX0J86Vp5EqWz37xKzhcDrpEC69e3uH1xBKtlozNYMTjuZvI7Fmqxk/hcgQ4
      +/0nkFoN4pIJsThPSuPm8gvPIR65nR/84DmkenZv3unJ19DINQpqJ9rtC51xFSixu0FTrcPm
      6ebEkQl8ooN77zmF0KqzuXOzrt/iFNlanKaMgeT6HHUZ3B4XM1NTN098zWYEQeDc2VewGs28
      1SeqsVhMGI1G1Go1arlOti7jNOmYX1xBb3bgsFo4deouAK5PXwdg4uAEZ14+/eYidNhtZgSD
      lXx0jZpgwmqxcequ42+uo83E6BivnH11b61ytUgkmWVk/BBz58/Qsri58eayhWadnYKO1blF
      joxYURmd6NUyu9k6Bg3ce/IA17fL9IcC2LwD9FuyLMTq6AQYGjvK4PAE/bYKF6+uYLFbWZmf
      oyFLnDv7BiajEbdJx/XFVc6cew2zyciVyasAmMVe+rs8WCx2spEV1DoTyFU2Izev1btsJqZn
      F3nl3CtYLRaaLTUWuw11u/22/XTyrW2Vquwkbt4/MBiNmMwWtILA+VdfwWi10mwKZJLrmFxe
      nF37OTwgEh4apbJ+lXRLx8LUFFan6x3zegM+vAOHGQ3bOHzbeCecAxR57ewyd5068lE3BGiz
      sb5Bb1/fL7yEdHSdpUiZO47+4r812FqeJo+T8cGuX3gZHxcdEACF4r11xCHQ+3l7OcJNDVLJ
      LADZZOo9yyMA5uYW3vO9zPYy6/HiP0J7PkiDq1em3/1yq86502c4f/48q5uRd5ViTE5OUkjH
      uLGwypXJq5SySX6WKod8Ksq1Gwu8739NYH1ugZ+sYvhpZQvJZIpifJ3l9S1m5taZnp756QuU
      66TSeeCn7ff32AfvMf/bdUAPUOTJb7yAygCoddx9+zgXL1xmZH8fP3rtOlaLg7E+Dxa7k62t
      LTxhP6d/eJF/+Qf/Cz/8q78g9IkHaMXXqbQNGNpV5FqJrrGjzM0uk88X6PNbqbQNaOQqciXP
      vkPHWVzepNumouEIs7u2gi8UZHdp6WaJQZcPgGe+9yRDEyfYXF3AqNUTEK3spCRiuysEXCYC
      hx4gpK/evH0f6GNpfpkTd9+JV5Pne6+t4rKbkWJL6ELDUJfQUiHQN8zW4hwam0ivpUmr6yi1
      5VcpWocpRRZpVApUZC2f/9x9nH11kshugsce+xyvnTuHKrNMOfQJzPU4Vp2GsZOnmL10jngy
      R7fPzoUbSX7rt3+F//Hf/5ovPfpFsukdFnaTWPRWIpsrtDQa2mj58pc+D8Dpp75D2+/EaXGT
      ybXQCiVuXDrPA1/4KgNePd99/jJHJ0Z44snv8sWH7qSks7Iwn6Rdi/HVr36Ff3jqCRqCiZFu
      kd1onGCXlx+9PMPv/d7v8L0nvonLaqBv/xgrqxuE+gZIbO9SLaaot7WM9/uIpjPYAhN0GZJc
      Xs0z0mXgu89d59jhASKpLP1eB8mc1Ak9QBOt0YlGBZq2tFd6sLGb4MDJh7BRYn4zxcKNKYxW
      CwaDjsHB/Vj0AqIvxIGxQa5dv4Ysy3u31l87e5bBY6ewGDR77+VLNfb5rJw9e4mxO05hbFWY
      v3aZVF2D3JDfKjEAoI3L6WR7Z5dEIk4qlWR6fpVPfOJ29DoD4/t8bCcKe7fvV9ZiOC1adnej
      tOplrGI/meTNMogH7j5EIrFLqigzHDbtlWispav0WupcXi1w4kA38XicehMc1Hn9jSuMHhlD
      0Box6PUkEgm8oo8DB8ZoVYps5auYBNiOJDgQ0HF1fp2TD30GI/CFRx7m+08/wYtvzHHqE4dI
      7CZQ6W0IggqN0Hzbftdw5MRtLN+YJJnKkUolCfUMMtTXhVpnxm5SkypJDA4OYhFq5MrST3xq
      OjRyncW1CPccHWAtXmFw+ABGLegMZg4PiXz36eepayw06gUSiRSNloC23dgrwYjnqpgdIupa
      BkllYnD4ANV0lIcfeZRIIk9AV+6E+wAAWjyiA48oYtBrUOnM9PTvw+v14bCaGOry4OsdJJMp
      0dMziFSO4PL34PdaWFyNM9jjR29xEvJ737ztP8bW/DX8wTADPcG990TRQ9/YBKtTl7C5/fSN
      HaFdSBAM+alVJJxOK+cvXWdkqJd4NIbNKeIyaUFv5c6jY1y6ukCwO4RXFNEa7Vg0TQq1FgGv
      B5kWoi+ITajy4vkb3HHHCYI+Nx5RBHSIdi1ZyUjAqcXudFCpttHKJWptDai1uBxW1hZuIA6N
      06xWObj/AJpWkbVImrDfy+D+URYWVznab2GtbGe0z49Jq2I9CyfGB3B6gxi1sLI4j8bi4d4T
      B5icukGppGJ0dADR40L0iMxOvoEjvA+zWWB5bonjdz9IPRfBIfoZ7g0Qy9exGwQS2Rw+fxgD
      VQx2Lw6XiNNqxSs68flu9pKi6GG4P8zkYpR7Tt1NLrqCN9yPtl1jPVHnS1/4FKnoLl09vdit
      FnxeEVH00CXa90owRDPk8iXCg2NUUxt4uwcJBX3oVQ2yWDvhEOjjRa6XyNUE3Hbje05TSW+T
      1/gI2HXveD2VTOIRPaytb9D/HleiNtbW6O7rR/0z1S40SCVLeETnz7EFH76fpwRDCYCio3XE
      IdDG8jwtnYV8KsJmJIXHbmJqZh633UCu0qZczNOs5llci3Dj1dfIaVpYzU6KsQW+/fRphob3
      MTs7j8/nY+3Cs7y+XiIguslENyk11FhNBuLx+DtKE3xuKzNzK/h8HpZmp3nu5deZGB9lZX6G
      altLLRdnN13C7bQR2VwhlqvidtioFjMsb8Z44bkfMrKvlxtLm/jcFq5OTuHy+lmem8bi8pCO
      7VBpglQqsb65itXpJLmzQ11WsbK0hMfnY31plh889zLRyDZ93UGmF9Z49cxztHU2qBVIFSWa
      9Qr5fAGr1fpRf0wfiY99D9DIrvP1v3sZi1mLXadCYzJgEdTcfscYz3//ZZxjD1GNzlCvVbEa
      NQhtFWN3TTB5Nc0X7unme2c20NYj3H7HGBdnq4wYo2S8x1i6/CNim0nUFit/8Hv/nG988xvv
      KE2IzF2iJddoaBx0HbqH2PxFHvuVL3Dj2iVeemMKr0nF0bsfYri/i7XFGzzx/Zf4oz/8fb7z
      xBN8+pFHePqppzAa9RwZELkwH0dwBBm1Fnljq4ZW3WJjdpp//vv/hvlXXmTo/k9w4ZXTzF5Y
      YXwsQMtspJyt4B66g0ZsnqokYdLruO/hT/PSi8/xpUc/x5PfeQZ1W6JWyhHafxv3nDj8UX9U
      H4mP/VUgtd6M6LByz6lTmM1mNBoBt8PG1NQCgb4BtlfnqNSb0KywFU0BGqw2M6p2CzQmUjtL
      mC03p3d5HKDWsrV8A4fYhc/n4p57TgHvLk3Qum7ecj8y0s32yjy1hgxykXOvXcNk1DNx8BBn
      Tp8B4JUz57CYTQBYjBrmltYBsJv13FjdpW90AltlnaWUvFciMXb0BAG3HWgzc20Sly/IodtO
      MjI0gMXZxd13TJDYXqFUu3lx/8dlCDfLGLagUaJUb2O0ebjnxOG9coZO87HvAX5Wc9OTrEVz
      fPZT93/UTfm5XD37GoOn7qIzD2D+/1MCoOhoH/tDIIXi/SgBUHQ0JQCKjqYEQNHRPvYB+KCR
      4d7L3JXJd5XzXjj3MqX6u28KftCobG9594hxe8tIpn7qHFevTDIzPc363Mxb8zSKLCy/e3S4
      d3hzpLefts3L01coVEq8dPbCu977efYR8MGXTxtFZubW3+PNKgs/8d7Pvi/fkk4lkfngUvJ0
      bJuF1S2yyQjnz58nW6p//H8TrLc4ya2t7Y0MNz81946R4Zpbl1nNyZQqLcwmPX1+GzMrEdwm
      DbU3zlFqgdYQYLzPwdmLl1FrzSSTCY6dOMHS9BU09jDnXnn2HaOyrSycoWfoENV6k1B3N6uz
      8xy9824c+ip/9d/fHDEukcBsDGBoJkiWm8xNXuKzj30VjyrNaknLyuIOIa+BarVKMp7Ab1Ch
      7xsns3KNlcgOubKJtcVpbGKAcnKL8NAExdgaRk8385dOExoepS6ZuTp/lqXVbXp9NrZ3U9z/
      mUdIx7M0WheZ2ajzyVMwc+0SW8kyn3nwXiYvX2B+ao6xQ0Nsb+8QCoTYKQkY6xkatQLO8BBS
      NkKsIPHZTz9ILpPm2hvnKLVMnDx5jHNnztDrMlK1hYkvXsXX18/M/A6xyBZ6rYDNLLC9m2L/
      cC9rsV0KaR0jwwEuXLiMpNJw+fxZHvvqb2OpbfPqag65VMFgNuF5c3Q6j9XOfDrORMjLbqrC
      Zx55iB88+U3G7v0s8xdeZWpuifvvPMLlixcZHBlkZqOA1aDlgbsn+PtvP839n36EF59/ib7x
      E1S3Ln/8e4C3+2kjw5VzKfr3j6BSm6hkE2xubrGxtkYqkSCXybDv8M2R3SxOkcHBQRbnprEY
      NSwsLiOrmkSTpXeNyqaxeTHVszdLdRsSTruJnZ3Iu0eMW5pjczfLysYGXX2D7OsJ4gj1ce6p
      76C1aikWKiQSiXdsw5Uby9x78ijN1Dpz20WachO3y8n29g67yTwTo4M0NDbuPjRAIpXD7e9G
      Kua4tjciXINMPI7T62V4cBhosLW5y9rKxjv20fnZJe67705mr1wgkSmQSiVxuV1sb28zde0a
      mkaLOpBIJPB4PKSim5QlMDVLvLQQg0IUAYn51QjQIpFMkUyl9tpx+o0ZTp26HQ1QzSdIFOqs
      ru3QNzhIT1CkXs7h7d8PKjW1t41ON7W4xUOf+TxT166hV8lUG+ANdHFgZB9WhwetRmZ7Y4tm
      Kc7ydgRHaB+FdBxaVRzefqaunOdXvvI/E9YkeerFa51RCwTvPTKcyajD7BAx6vV4XDaghd3j
      p7+vG9Hnw+ny7I3sBnBgsJ+81CbocVFvQrirG6NKeseobMGgyPjEIeKRXbqCAUqVOh6fH4/T
      /c4R4zRamo06gVCY4W4v6XITl9NNrSUz0e/F7tuH027C5/XtjUzX4zFxdX6bnv2H8Rok3P4w
      7WYVg81Jr9/BdrJAOOBDFD2g1qNrlXF3DXBwuJ+yrKYrHEanUePy+dDrzbjtJhKxKN5AiN7u
      MPx4Hx3Yx8WL05z45MPUE9u4/AEMGjUag439Q720tUbC4SACYDDoqNShv7+HcNBNrtymS7RS
      aqgId/UguryYNHVMDpEjY0OUZTV3HD7A9dk1wl1d+EQ70USW7q4wXaKDclPAYTWjNzuwGfWI
      Htfe6HRHR/rwBn14LCZktZ5wOITXbmR5O01QdOERRUx6DS3BSHfvAG6nG4dZj+jvhnoGqztE
      o5xhNVriM49+TrkRpuhsHXUIpFD8pI/9STC0mZ+Zwh3aR6MQQ9LY6As4+L/+jz/jvi/+FtpG
      if3jEzz5rW/SRsUXP/cQ67E8XrsZq0VHoa5BJdfJxHdwhffRqBYIBoIf9UYp/pF0QABa1KpV
      nvrOU5hUNe5+6PMg6BkYn6C+PYvv2Em+/8wLe1M/9/xpBkQ9Z67VaJlFPBaJWrHK9maKL37l
      Fx/PR/HL6WN/CCQXY7x2bR2jXsvBQ+OcPnN27723Rn5z771m1qtZ3c1yxyduZ356nsLKND0H
      TzI61s/ZVy8SjUY+is1QfEiUk2BFR/vY9wAKxftRAvBRa9Z4+cxrxH+iFGLmXQ/mqzJ55ecd
      NQ7y6RQ/pXqDhZmrbMfT7znfz1qSUM1s/0Ij4AHQqJLMllievvKu0pBbRTkEusXOPP8MzvAQ
      ldQW6USWwZEw33t9B31pg0ce+yr7em5eYfr7b36TkbCPukZH94GDrM5dp17WUyls3RwxrctN
      IpPAM3AXB/vd5LZm3lFC4XNamVmJIGQ2MI3di6WyS6rSxqlrEcuW2Vpe4b5Thzk3vcnh8TEq
      2Ti9fSFmt8pYNU0mr13iq7/1O3T5bp4fybUiFy5fQTD5SGzcoCGYGA472d1cQDf0MCOqLb53
      YZWD4/1k4yn8HjtVFWj1bvKxdQSzE01bwqgRCPd1c/WNywwPBnn6tW1ODrgJj3SxtLKNPxRg
      9doSWpeVzz30wIf+eSg9wC3243KCSDyD26zF5vEyODRC95ulEG+XSyUIDQ3wnb/8v3H3DRCP
      Z/ZGTJtb3eVwv0iqfPPRpz9ZQvHjkg7RG+DAgRGuXbuOSpbZjSZ45NFH6RkcxGtRc+DkQyQi
      N0dfe+PS9ZulA/kCg4ODe19+gHxih0JdYGVtfq8N82tRbj+0H4BqIcPRex9m+cbNUofdncTN
      MpLpi5R1QQrJKKV8nlguT3Tz5uh8ktbB4P4DlFJxLk3Nctd997E8e3nvgYC3gtID3GKzU1co
      NnXYtBKXX7vIA1/5dXK5BkYpSUmCYrEACOhMRtw6FZ7BcS6ceYEHHrybmekdNBoZNS3UzQrz
      M1eQnQN0Dxzg2HCQM2fOMNTroyZ4Se/Mka+rOHmwn+sbOZzaOrmaCrtFz+joKHNzC3S59eS0
      fnTlKLPLWxwa6yffdlJN70KzTKtZJ91yc+rYMNVshIuzW9jsNgyCGjUtzDrYjsUJDB7DLsVo
      OHqREitsJXK4rHbCw33sLkcpFyJorF5CVjWbZTUWOU8inmDo+CdYvHwRl8tF174gk5euMzJx
      kEKiREtdpVKpcuzI0Q/181AC8BHKp1MYHB70ws8/bzaxy0aixKGx4V/aB9D9U6AEQNHRlHMA
      RUdTAqCgVqtRq9U+6mZ8JDqgFkjxQQwGw0fdhI+M0gMoOpoSAEVHUwKg6GhKABQdTQmAoqMp
      AVB0NCUAio6mBEDR0ZQAKDqaEgBFR1MCoOhoSgAUHU0JgKKjKQFQdDQlAIqOpgRA0dGUACg6
      mhIARUe7JT+JFIRfYNwPheIW+NADIAgCFovlw16NQvELUQ6BFB1NCYCioykBUE/MHWoAABOF
      SURBVHQ0JQCKjnZLrgLFV67z3MUFAn4/t992nEY5y+T1Gfx2PXVzF+NDPeRTUeweP8V0krbG
      gN/r5ht//Rdg8vKpB+9Bq1bTqFUw2t3UChlefeMqXo+d40cOkchV2FxdplEvs3/iOEglzE4f
      lXySpkqPWdumJMHG1DUmHnqQ137wFBg8HD06jlEASb75QHCnx0c+GaGUT5OUjLQrKY4dniCZ
      r2IzaChWKnh8QfQa5f/Gx8UtHRnO5xO5fP4sgs5KNpPFb/eTj63x0sY86Gyo2jeoZIpojCa+
      9IVHAHB53Fx69TSDw8O8fPYiotdJqyEgaAXK5RKnX3qJ4UO3US6VKZWy1DJbXFtJoW7PUy8m
      QGul12/j0vw2h8L+txojCExeuULA3CJWUqFSq6jXrqI2uemyNCjJApRLnDl9GnW7SVXWYDJp
      8Va1TOzz3crdpvgQ3ZIAaI1m7rrnAfaFXLywMs3IiftQvZGlJRgZGuonmS0Q31oj0D9Iy1UH
      mgAMjR/htuO3cenyJYYGh1hb3cDfO0hsdRHMdpw2AyZNm91oEqfLSdhrIysJaOUyYvcgKskB
      baiXsni9IjaXEwFw+bu57fhxrl9+nY2dKIFwNz6vl3S+xO7GOo59Y6zPbxJ0uzAJLVZ2M3SH
      PLhEFw2t9lbsMsUt8qEPjy4IAtVq9eYyWhKbuyl6uv7pPmjaarVis9k+6mYo/pHckgAoN8IU
      v6yUszlFR1MCoOhoSgAUHU0JgKKj3ZLLoAtXzrKwW2H08DhCq81AbxcrU69RM/egqmWwevxE
      dnYZHQixGStgaEv0HDjAyuXX8E/cRSOxRaEB2lYNwWhH3SxTrNaRqg0sdhu5ZAxfzwDRaAyv
      w4hgsKNqlClJMDTQS6WYJ54tYtWr2E0WcVk05MtVpIqEzemkkEnQP36cbGSVsgR+UwPZfYDk
      6lVC3SFWVxP4vDYy6QIWuwGt3oogV0nn8tSqMr19fpK5BnZdg0ZboCWYEOpZJpd3GAp62D9x
      mHQygc/rRaqW2Ywm0bQlyhJo23XaWjPNSg6vKBJNZwl2DWJUVVlY36XL62A3mUdHHYvDSSFb
      QqPV0GrW6do3xNzsEj6nCb3VBVKJUrlKriLhs+sxuYJENpaoJXa4tLJNz8QpPn/3BGSW+c6l
      KAdHRxFtajLpFM16BYe/n8TWMj2DYxhbOYoaH6rCDhs7cdzBMJGdXbwOM3qrC41cpVBvom5K
      6GxenEaYnVumb18v0XgGk6aFSm9FL2eo4aLWqOG2mag02mhbNcoNFU6zhnSuSLnSIFMqMBxy
      I+iNvH5plq/86ueJJ27us2xqk6rsJhtfIRAOsbOToKeni3gqjd9lZXUrxuGJMRZmp1HrrVQL
      KcKhEJFMibBfZHllHa/bSqWhol0vYrSLaMpRyqZuhMcff/zx9/vyVqtVZFn+hb/8arWaYO8g
      czOzjA52U2u0sOpabGzuYvKEkLIxxK5eTHojqWSMSq1ByO+l3aqyvZ3A4BQxa1pEdxPYnDbS
      mTwOiwm5JWGyeVELKqw2GzaTDpvdRSGbIlesYLeY8AaCVPJp1AYr7aaETiNQa8i4rEY8Ph/Z
      fBmLw4HVasXrsqMVVGxH4gz3+CljolXNUSrVEIQmuZJMwGWlpdORSWXwe+w4/b2Eg15ePX+e
      QqHI6uY27UaZN67foCFVaWWWubycxmCykoru4g+F0el0NKU6DpuV7Ugcs0FLSy2gF1TkM1nE
      rjDNhhq9poXN7sJm0mKweTBqIZvL4nAHyWUSdAVF1iIZmtUSDpeDTLaI1aTH39VH0Othduoq
      y5PnUZm0RJMCp+4Zp6YP0ieaoZrh4uR1SpUGqzsxmqUMiUKZtSvP0DJ62SobMJS3iVcErHqo
      18q4fGFMBiNaoUUqk6NcKNKQm5jMdsIhH3qDHpVawKDV4HB7kGUZlVwmnc1TKTdAaJLNFGlW
      KwhWG0aNGr1Oi6zWMTLYz9bWNsnoDou7CfwOB11BLzdm57E5PTgcBiplaMtlSsUchVoLjVaH
      xahDKwjYHG6MBj2ZdJK2WoVGLZDP5Wi0ZVToacsNtCYTeo0au81MMhGjUq6gsQdu3WXQbCaH
      0+XYe73VqFFvtsnki/icNtAZ0KhuPrAtGdtFZ3HhsRmR5DbQJp0r4TBpqMoCrVoBg81DvZjF
      5fPTlBpI1SKJTIlw0EO+3KBZySEY7fhFF6V8hlgyj8Nhoq02YDXpMRgMRHe2cPmCtGWZdruF
      LFWpt7U0yllkwYgg17B7fCRjMULhAIlkDrtZS0kCm9mw92ytq6+9wHxaxcOfOI5UzFBSGVGV
      MxhcftI7a/SPHsZiuNnZ1soFdqIJnE4nCDo0rRqyYEQqZbGLAXKpBB6Xk2KlTCZbIhTyYzQY
      iEV2cHqD5JMxXD4fiXiSYMBPrVajUSsjoaOST6IzO/F5nCzPXcfh72b5ystY++9mqM/N6twN
      UtkCXq8Xu8OO3eEknSliNQq0VCpolPn2N77Fp776uwx4zQC05QZbu3GCPg8qnYFqPo2EDrfD
      Sq1SZCcSx+VyYbFYaKk0VHIJ8lUZt1WP2mDDoldRa6rJJKJ4Az5i8TQeu4lKU02zkkNnceGw
      mshkc2QSUSxuH/lUguGRkb3vSjK2S1UWMKibWFw+SpkERouVeDyBxWKhVJUI+UVq5QIqvZVy
      LokY7CIVjWB32MjkK4iOt9ZpcwcwCDK1lka5D6DobLesFigZ2yFfayPajRSrMm2pSL7SwKCW
      qUstpKZEz/4jVBIbZMsNTEKLltaEVC0z3ONlankLjydILh7D5DQhSRB0mYkVyjQKFUxWM4VK
      jb6eEM1igoLgopLL0hUQqUsSBr0Bh9NMIl7E63MR2d6gKgtoqSMY7CAVKdZb6JERzE7cFi2z
      c4tYXS5kGYIOFXV9N7ndBQLhbhLxbaSWEblew2DR0pQFAk4TsWyRUr7MTmKb8bFjtEop9EaB
      S7M5NMUtbv/k/RQLNSxaCZ0zRHJrmVCoi/VIBK1ai8uioW10E/I6SSTieB0GJud2sOjVtAQ9
      NpNAIlumy+sglikxtr+fqckpnL4w2Y1Vuo4cJBfPoparFOttDOomdjFEfGeVgM9PLFchKLpY
      XlnH4zDREjSkchV8LjNSpYjYPUJkbQWPaKOtc1JJb7O8s0PQE2Li8EGy8QRWnxepkGVhdQub
      RU+toSbgNJIuVyhnS1gsJhpqLUOD+4hsLJMtN/A6TCTzFXTtBsHeHlYX1rG7bFTLZTRGI7Xa
      j6ep4rG1KZZNlOtF3nj5aSzBYzx4cgiVxUsuso4YCFNuNMlHtxmaOIZeYO98IRNdpq7vIbMz
      hz/cRTKyhdQy0JRqBHpCRHbjHD00zuL8DbR60605B6iVC8QTacr5Av6+AZrVMkadBo8/TKMh
      IdUltFoVRqubZq2CTqtB0OoRVG1sNhs6tYpcrY5GrcPjF3FZTGxH4jTqZWoN8LqMVFtaRgb7
      eP3l75JO5Xnu/DT1Wp1SbpOrV+eQVQZM2ibLG3G6wn4aUo1ILIkamXyxgsNiRlap0Ag6QuEg
      eoMBVGq8LjvbkThD/UEqkoZ0YpdmS0Zv9mDRq7AYdJgcThLxBFKtTK2pYmJ8lO3dGMndXVLJ
      DXYTERyOIXTaFunNaXYyBrK5GJHZM+RVTl797g8o6Czk6gVapRzFWhuTpsXS2hahnj6axTSJ
      dB4BiWLTgNuqR6vT4fF40WvaJFI5ZKlIvlDHEQyjR0ZuStQbLSwmPflSCZ0gkM9kadDCYHZh
      t5gIhcNYjSrWtjKUsjFSpTKLZ7+HpudOdlbniUXnyWUgs/wKy+kW4f79RFdu0NQaMWrVWGwO
      5HoFSW5RKuSp16uoNSZkqUKrLaHSOWhLJaqSTMBjx+bxkYjsIjWaCIIKncFKKZNAa7IiN9+c
      xulmZ2cblcbO6HAvRRnceg3RVJro2kXyNRNnn/o2gSNHWb70Bo6eUYxUmZ2bx+4ScVi0VCQd
      balAsSJhNhmoSw20qiZGu4t6vY5P9FCp1VCpVLfuEKgtN9iNpzFpIV+VCXjdGPRaNje38AVD
      xKNxPF4POlWLXKWJUZBpaUzkEjsYbW5qpQJ2h41EMoPH40RGe/M4tFYjk0rgDXahUauI72xj
      9zgp15qsrm4yEPbQRMDsELHo3/pxvlQtkcpX8diNZMsNkEoYrA7S8TgOlwuTxQJtNc1agXpb
      S7OSQ0KHWQsavZFEIoEvEKBUrGAxqGmqDThtZmq12s3zi61VqioLjVIat89HKpHC5/VBqw4a
      K+Xsztt6gG7qqBGENqVkFL0zRMBjf7OlbXa2dgh2hYjsRgn43CRzFQS5SlUWEF128pkUdjGI
      ptWg3qwTiyURRZGqJKNDQjDaqeSSuHwh0vEoXp+IrNKh16jIpaLMrccY3dfD6dMvcN9Dj7K1
      tLjXAxSTO7j8PnbW1hk9fByDRgWwd17l9TqoNVR43Q5qtRrZVAKXL0QqHsXldkOrQa7cwGkz
      YzAYyCTj6K0OMvEYotdDplDFZdGRfds0IFOrtTAYtGRyWdQtqBbT7+gBLE47NyavMX70GDpB
      tfe5xiPbSOjQqxqY7W6S8RjBUJBoPI3LqqckgcNqQqqW0JgcyjmAorPdsnOAfD6Pqi1TkdrU
      SxlUejO1fAaTzUUxm8DsCVLMZgkG3DRkNV6Pi5XFOVyin0w6hdliR2rKuGxGSnUZfatI2xym
      kt5CpTVQq5RRCVoaUgOnxUC5FKHlPsw+Ub/Xhqlrlzl0+PjP1N5KMU+2VIdGiVpLi7Zdx+Rw
      U0inQKWm2WgQ3jeMUSUxu7iJ06KlJDVRNWScHje5YgWPzUAsnsXpsZFIFQjaBdTuAQqRVQS9
      GanRYKCv5x3r3Vhdp3egb+/vYnSBGyk9d4z3vWO62OoG9oFejG/u21I+Ta2lRZCraExWGuUS
      JodIIrpNX3eIjUiasf2DxHa3qLU0SKUMHl+QdDqB3mAlk0riC3hJpn/czn1ktuYRfT52o2lC
      ITe5fJVsKsOhwwd/6j4rZlNEYnEsTg+JRArRbqSh0qNDoqUx4bXqWIvEMBmtFMtVfE4TtZYW
      uZrDaBcpZFN0+z2sRWI4bFYabTPdQefP+A17p431VXr7Bvb+vnZ5isPHD71rulsSgEI2xez8
      EsduP0k1FUejNwMlLI4u2u0SVqcHr9OCmjZOp4d4PA7c7D0q9QZmkxGn20M+m8Jqd1KJx3G5
      7MRLbQwGPRVZjdlkRKc3Et1YQXIMoW4UOPPck/ywKlFvtBn1W6iom0y+cR2v30FTJ1BP1dCq
      YqxEDVgsZkLdBnTWPu482IvG5ECjrlGRmtTlNpVaAVkwYtCpqcsa2s0smYJEaXeeXLnBQNcA
      ellLIRklnSvhtJloNhpIDQmnR6TZFPDYIS6rMZnN6IwWGs0Gz3/3r4hXdegEM6/PzHGi18uN
      GQeTSwlG+l24WgVyKgv/I5FEFVvCKFTYyEMpBw/+6qfpt2qZX9rA63UiyW3sVgu0WpjMJuRy
      ip14mmAojNN585DKYDSiFwxkqnlqjSZmgxm3P4Ba1SbgFZHlH7ezRiHfQKps0baYKVdlLCYt
      VyZfYXl5jtUiuLVNupx6EpKOxz51D+lsnobUwOL00G42UatABxh1JgSDlZZcptGQKLQa+G0m
      koUCtLVY9TdL5m02Gy25SaMh0VLr0dWS/P3fPUNOMPDJO25nqL+bcy/+CINNx3eePk3PwUPo
      mjX6RDPZmoC1XaDUMHH2yjTHxwIs3LjOhalNjt82SCJS+egCYHN6OHLEQjkbJ1so4zRrUem9
      VPNxnL4ekOuUinlq5RrJZIxcsYrNVkUQBHTqJsl8DY0uQzqdBiCdK0JToCzXUDdqGE0GUvka
      Pr0RvStAl99FVTtKIKpmoCdMqlDHQoWmzoD7sItKIUFTZ6ds2cTlHmakbUWr1dJUl5EaWuwu
      kVI+Qzqdw+k0o5Y1GG16WiqBUqmNw2Em05RxGluExw+Rz+dptFV4HFaq2Rhul5vd3R2cTidG
      kxmpXMUX8BHbWaEqtJDyOcSQDdHtxh0ex69RY3HasXlF9occVKU2ZrGPUMiD39Ci0NSgsQXZ
      nC7hdHkYNVkplyWEFjg9Po5Y7BSyKaqyBnWrjsZoIhVL4+/q4uRxkUatTLUsUa5WyWWz6CxO
      NBotmlaDVKWOrV7G5vBQeUc71Xh9Vow2J9lUErvDhVnfZuLkKda24zx4sB+7QWDhyjnKNRVG
      ix2/SsVWU0YjlXH5AlQyMRoqPdlsAotLi1qjxqgz4nLbyBTKdHm9pAo1NOomGp2OQiZB2+HE
      qDPicDgxq83UVFf51J3H8Nn0nDt3DsweDh8dpVBo4QyGcZj1yJUCjqaOdjHDWHcAk8vNcJ+I
      VGuitQUJiEZsluZP/W4q5wCKjqYUwyk6mhIARUdTAqDoaEoAFB3tQ78KJMsy+Xz+w16NQvEL
      UXoARUdTAqDoaEoAFB1NCYCioykBUHQ0JQCKjqYEQNHRlAAoOpoSAEVH+8A7wRrNLX2IjEJx
      S33g7wEUio8z5RBI0dGUACg6mhIARUdTAqDoaEoAFB1NCYCioykBUHQ0JQCKjqYEQNHRlAAo
      OpoSAEVHUwKg6GhKABQdTQmAoqMpAVB0NCUAio6mBEDR0ZQAKDqaEgBFR1MCoOhoSgAUHU0J
      gKKjKQFQdDQlAIqOpgRA0dGUACg6mhIARUf7/wCfKiQkrJ+CaQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Correlations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Description' width='192'>
      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
      NP1/7SE3ca+gQFcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Diagrama' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Diagrama (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='End' width='192'>
      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
      ymK6PJxxLDnjfC/vaIbcVgswt1ncA3fcaFrChvRlDeTUQjnDK3WtvjwfdNs2m4JWUlZoT8D0
      /QTTp1ta8+RSnIOmSFU9UZUJPRdpWMS6W6jorvF6JEsuAyV6D3ptyRGDinKV5oruuCSICQra
      o1Ls5XDyLQfRtEp3B0m50A481hdtUAptojA2Uwk6MW16Ev21tEDMyk0yykESMfjQD+woFGut
      H9CrlNrSQ5CtgFacr9xPysqOddYhxpFzUlTNepXoSVFrv9yV99qnqrrCvrYDjDbav0Z7jRRo
      tNH+9dnoAKPttI0OMNpO2+gAo+20jQ4w2k7b6ACj7bSNDjDaTtvoAKPttI0OMNpO2+gAo+20
      jQ4w2k7b6ACj7bSNDjDaTtvoAKPttI0OMNpO2+gAo+20jQ4w2k7b6ACj7bSNDjDaTtvoAKPt
      tI0OMNpO2+gAo+20jQ4w2k7b6ACj7bSNDjDaTtvoAKPttI0OMNpO2+gAo+20jQ4w2k7b6ACj
      7bSNDjDaTtvoAKPttI0OMNpO2+gAo+20jQ4w2k7b6ACj7bSNDjDaTtvoAKPttI0OMNpO2+gA
      o+20jQ4w2k7b6ACj7bSNDjDaTtvoAKPttI0OMNpO2+gAo+20jQ4w2k7b6ACj7bSNDjDaTtv/
      A1r9e2R7L5NNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Introduction&amp;Data&amp;Objective' width='192'>
      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
    </thumbnail>
    <thumbnail height='80' name='KPIs' width='192'>
      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
      AAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Seattle &amp; King County. Market Price Map ' width='192'>
      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
      VAGSEgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Seattle &amp; King County. Market Price Map (2)' width='139'>
      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
    </thumbnail>
    <thumbnail height='164' name='Seattle vs County' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACkCAYAAADBuSFLAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAGsUlEQVR4nO3cT0hUex/H8c9xMiJxhP5ajpSW1sIwsiAVKoi2gi1CKAgMop05LhIKK1pE
      /xZhf0CpXRCKRCCUhRFUiEGk2T9SyFKbSJ1yolRGz+9ZxDM8ci9xbz0X5/J9v+Bsfkd/5wzM
      e37nwJzxnHNOgFEps30CwGwiAJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHA
      NAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBp
      BADTCACmEQBMIwCYRgAwjQCQFHzfV3Nzs7KysuR5nrKysnTmzBlNTk7+o8clACSFrq4uXb16
      VY8ePZJzTg8fPlQ0GtXIyMgvzzk4OKhwODxjLBaLKRwOKxaLSZLm/NZZA/8n/f392rhxo1au
      XClJysnJ0cmTJ//5AzsgCbx9+9Zt2LDB1dXVuaGhoT/sb2trc3l5eS4lJcUVFBS4rq4u55xz
      vb29bvPmzS4QCLhAIOB27tzpotGoa2pqcpISWzAYdA0NDS4YDM4YJwAkjYGBAVdZWenS0tJc
      UVGRe/78uXPOuaGhIRcOh92nT5+cc851d3e7ffv2ue/fv7vh4WH38uVLNzU15aamptz58+dd
      S0tLYr7q6uoZxxgbG3PV1dVubGzMOecc9wBIGqFQSFeuXFE0GlVdXZ0OHjyoSCSip0+fqr6+
      XkuWLJHneSosLFRbW5tGR0cVCAR06tQppaena86cOaqqqtKzZ8/+8jEJAEln7ty5Kisr044d
      O9Tf36/JyUkdOnRIzrnENjAwoFAopMbGRhUWFurLly9yzqmpqelvHYsAkBTu3r2rhoYGxWIx
      +b6v7u5utba2atGiRVq3bp1u3bql+/fvy/d9jY+Pq7W1VdFoVPF4XLm5uQoEAurr69ONGzdm
      zPvmzRt9/PhR8Xhc8Xhc0o8b7nfv3ml6epoAkBxyc3N17949ZWZmKjU1VRUVFTpy5Ijy8vKU
      l5enw4cPa/fu3QoEAgqFQmpvb9e8efMSfzd37lxVVFQoJycnMefSpUuVn5+vFStWKBQKqaen
      R8FgUFu3blVpaanmz58vzznnZvF1A7OKFQCmEQBMIwCYRgAwjQBgGgHANAKAaQSApNLZ2akF
      Cxbo2LFjibGvX7+qsbFR69ev14kTJ376/83NzfI8L7FlZGSoo6NDktTR0aGMjIwZ+wkASWNy
      clL19fXas2fPjPGamhqNjo7q9OnTSktL++kcfX19amlpSXxnaGxsTMXFxZKkSCSi2traGd8p
      4oEYJI3r169rzZo1ys/P16tXrxLjDQ0NkpT4JP+ZkZERbdu27U/3vX//XqtXr54xxgqApBCJ
      RHT79m0dOHBAKSm/9raMx+P69u2bsrOz/3T/58+fFQqFZowRAGad7/u6dOmSKisrtXjx4l+e
      Z2JiQi9evFB2dnbiwfqLFy/K931JPy6PSkpK5HmeFi5cqNraWgLA7Ovs7NTExIS2b9/+W/Ok
      p6frwYMHcs5penpa7e3tam1t1Z07dyRJ165dS1z79/T0KBKJEABm34ULF3T27FkFAgF5nqdd
      u3bp+PHjKi4uTvx6w9+VkpKitWvXqrKyUk+ePPnD/uXLl/+43Prdkwd+1/9+Mv/3qa6jR4+q
      o6NDwWDwL8/z+PFjhcNhffjwQZLU29ury5cvq7S0VENDQ9q/f79ev34t3/c1PDysc+fOEQCS
      WywWU3FxsTzPU0lJiWpqauR5XmJ1uHnzpsrKyjQ+Pq6ioiIVFBRo06ZN8jxPpaWl2rt3r7Zs
      2aJly5apvLxc5eXlSk1N1apVq1RYWMgDMfj38n1fVVVVieeHfwUrAP61BgcHlZmZ+Vs3z6wA
      MI0VAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgA
      phEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBM
      IwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhG
      ADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0A
      YBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHA
      NAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJj2H3xiYnCVfwSoAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Seattle&amp;King County.Price&amp;N°.Bar' width='192'>
      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
      azR4w5AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Seattle&amp;King County.Price.Bar (2)' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='SeattleCity.map.Filter' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAHBklEQVR4nO3afUuTfR/H8c+85nSbnq28mdZsad4klmQSJRUFPYaeT48qgqKizVkunTe0
      w8hslYm6sU13o2ubx/nHCUFwBV07Oa8T+r5ffw3Gvux3cLw5fvw2j+u6rgCj2v7tLwD8mwgA
      phEATCMAmEYAMK3lAL5+/arHjx/r8PBQ+/v7evLkier1uorFohzHkSS5rqt0Oq1KpfLLc13X
      1drammKxmBqNhhzH0Zs3b3RycqJMJqPd3V01m03F43E9evRIR0dHrS4BkLfVD5bLZc3MzGh1
      dVXValVTU1NaWFjQ4OCgcrmcJCmXyymRSOj06dMKBoO/NPfo6EhdXV3yeDxyHEd7e3sKBoPa
      3t5WLpeT3+9XV1eX2tradP/+ffl8vlaXALT+BIhEIvrw4YMmJib0xx9/KBKJ6OTkRGNjY/J6
      vWo2m3IcR9euXfuf5gYCAQUCAVWrVXV3dysajWpoaEi1Wk1jY2PyeDxyXVeZTIYnAP62lgN4
      /fq1RkdH1dXVpcPDQ21tbam9vV2VSkXValX5fF57e3t6+fKl0um0fvX3tlKppI2NDU1MTCgU
      Cunjx4/KZDIKBoMql8sql8tqNBq6ffu2wuGwstlsq0sAWt8C+f1+pVIpjYyMaHZ2Vo7j6ObN
      m1pZWVGj0VA2m9WDBw9ULBbV0dEhj8fzS3Pb2tp0cnKixcVFzc7Oanh4WEdHR+rp6VEsFlOz
      2dTx8bH29vbk9/t1/vz5VpcAyMNfIWAZx6Aw7T8PHz58+N/eqNfrSiQSKhQK6unpUTKZVK1W
      k9/v18LCgkqlkvr6+iRJm5ubWllZ0cDAgAqFwvfXGxsbchxH4XBY7e3t32fn83klEgl5vV75
      fD7Nz8/L5/PJdV0lEgmdOXNGnZ2dkqSdnR2lUimFw2GlUiml02kNDAwolUrp3bt3Onv2rLze
      lndyMO6nT4BGo6HR0VFls1ktLS0pGAxqa2tLlUpF4+Pj2t7eVqlUkiQFg0FdunRJ8Xhcy8vL
      6u3t1crKikKhkMLhsN6+ffvDbNd1NT09rdXVVSUSCV28eFHr6+tKJBKanJxUMpmU67qq1WpK
      JpO6fPmyJKlYLOrGjRtqNpuq1Wq6fv06x6D4W34agN/v1+bmpg4ODhSNRuU4jra2tlSv15VO
      p1Wr1RQIBL4fS7548UKRSEQ9PT2KRqNqNpv69u2blpaWNDg4+MPsYDCo+fl5dXd369y5c4rF
      YvJ6vRoYGFA8HtenT58k/XXDFwoFPXv2TPl8Xjs7O3r69KmOj4/15csXPX/+XLVa7Z+9Qvit
      /XQLdHBwoP7+fpXLZZ06dUpXrlzR/v6+Lly4oEgkomKxqGAwqM7OTh0fH2tyclKrq6uq1Wrq
      6OhQqVRSOBxWJBJRJpP54bSmUChofHxc79+/V6FQ0N27d5XJZDQ9Pa2hoSGVSiWNjIyora1N
      pVJJY2Njymazunr1qqS/tmdTU1NqNBryeDwKhUL/l4uF389PN8/t7e2Kx+MKhULq7e1VLBbT
      zMyMfD6fXr16pb6+PgUCAeXzee3u7mpnZ0f37t1TpVLRxsaG5ubmtLa2pkKhoFu3bv0wu16v
      a3FxUZOTk+rv79f8/LympqZUrVa1vr6uO3fuKJfLqbu7W8PDw/r8+bPm5ua0vLwsSZqYmFAy
      mZTX61U0Gv1nrxB+axyDwjSOQWEaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA
      0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACm
      EQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwj
      AJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYA
      MI0AYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBg
      GgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0
      AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkE
      ANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgA
      phEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBM
      IwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhG
      ADCNAGAaAcA0AoBpBADTCACm/Qk9Vio1zneVNQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Solution' width='192'>
      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
      cAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tittle' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Yearly. market.behavior (2)' width='192'>
      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
      d4T9E+el13QXgTsmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Yearly.market.behaviour' width='192'>
      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
      9TQ7OuwcPzuGJgg8t3cPRulWrp4Yv8ZQvITTqHJxcILnX3yZ5qD7Vs5fL/Hphevs3dzK4SMX
      sVhENu54BrflVglTjI9yengOr8PCxUuXePaFV+loDCwqPT49eZK9O/s5cvQsdpNK86ZniThv
      TUDXCjMcPDNByGvj4qVL7Hz2AD3tDYuqYZ+ePMneXVs59ekJjJKMt/c5Ony3Tfwup/j49AA+
      t4ORoWs09Oxgd38ncCtTuHzxLO09mxg+dxxVErE29bOhyX1Lo1bg2KkL2J1OEpNDaP5eDuzs
      xSCJCxpTwxcR/T3kh09TNlgQHY1s7W68paHUOHPqJJLVRWVulBmxhS/s3YzVJC1o5KavMUUz
      ttQ1UpiRNRt7tnQv+n4vnTqCbHIh5ae4mPPwRwd24rIab32/6WE+nfPRZZhlIidTLms8/+zW
      RRqD509QFKwYynNcnFX4wkv78TvNtzQKUT6dUOkPylwcSVKVNV7at2uRxtTghaezBGjuXIdF
      q2Nz+gg2tRFyW+84QqOczxCfGMPevB6zWEe5I6vxN7XjM4PR5iHQ0ERTwHXXearFHHMT1xHC
      3bitApXa4pLEFmimyW1EMDvxhSK0N/jv0pDLBeamx5GdESJeM7nyHSWJPUJ3xIYmWXAHQnS3
      Re7SUKslErNRcpKT7gYnyfwdpYDFS0+TDxkD3mCQno6WuzS0eoXkXIJYRaCvxUe6UF58gNFO
      d1sDdRn8oRCdHW1I4uJqoCbXSaWSjGVqbGqPUCgVF2uIRtZ1tVOvKQRCAVraOrAY77iFNIVM
      KslQosDGzlYqlcJdsXb19KDU6vj9PiItnTgtd+fDuXSSsdk5Wjt6UGq5uzXWr0erVXF6vIRa
      OvA57l4pophLE52O4m/tQVDufrZtbO9CeuONN964653PiGKxiMPhQJRMhCINqJUcGMzY7Q5M
      xtvq/gYLIbeNkmKgJeLHKBnxeNyIgrCgIYgGAuEGDHKRmibhdDgxGW9LaNFA2O8hVxVobQxi
      FCU8Pg8G8TYNQcIXjGATaxRr4HY5MZkWLy8SDgXJl2UaI2GMkoTb68VsEG/TEHD7w7gsArmS
      gtfluGtZj0g4TLFUIRSKYJCMuH1ebMZbGggCTm8Av8tMJlfB4XRgty5eUMAfCCHXSvgCESwm
      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
    </thumbnail>
    <thumbnail height='192' name='correlations' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd3Sc13mnn2/mmz4DDHohiA4QIEASLGIVKYlUpWLLlhzZ8Sa7yfHuxs5x
      1ptscpLsH3uyye7ZrDc+J8WbtRNHthMnjizZsiWrW5VNJNFBVKL3jhlMn6/tHxAQUWIBiAFY
      5j7nUAcQBt9734v7+25773slwzAMBIIkxXSrCyAQ3EqEAARJjfzRb/x+P7FYbNMLoes6uq4j
      y/KNP7zG55pMG69xwzCQJOmOtwGbU2fLo+6N9mc1vki3wxwgFosRiUTwer0JfW48HsdqtSb0
      mR/HMAwURdlwO/F4HIvFsuGNZjPqTNM0DMNI+Avv46zGFzEEEiQ1QgCCpEYIQJDUCAEIkhoh
      AEFSIwQgSGqEAARJjRCAIKkRAhAkNUIAgqRGCECQ1AgBCJIaIQBBUiMEIEhqhAAESY0QgCCp
      EQIQJDVCAIKkRghAkNSs+1DmwuQgbd1DZBZWsjVFp7m9j9KavXilRZraeymqqiPNtEhjez9l
      NbsxK0FystIZHJmipHhrInwQCG6adQvA6c3l4IEM6lsuoy0Y7D1wDx3t3SyadHbt20dX52Xm
      iXHPPbvo7B7BZpPQQ/OYPAWJKL9AsC7WLQBZVrl4pglH9lZQgzhsdmSzjmSyY7fbsJlAMtux
      2R1Y0Yn5Z2kNwr3HqjAMA1VV0TQNVVWJx+OJ8GkFTdMS/sxbZUfTtA19/kftbLQvhmFgGAa6
      rm+ondX4su60KBNDl5kPxpj2RShMkVhQAEsamWY/s1EDXfaQJvkJKGDYMnGYYpTkp9Mx7GfP
      jgokRFqU1SDSoqyd1fiy7hJk5OQjO8MUl6XikMHrD5DiTcOMiscXwONNQzZUFj78/4amYrVa
      2F7uWa9pgWDdrFsAVruLLLtr5fuMjIzln1z9a/OSIh0Ox3pNCwTrRiyDCpIaIQBBUiMEIEhq
      hAAESY0QgCCpEQIQJDVCAIKkRghAkNQIAQiSGiEAQVIjBCBIaoQABEmNEIAgqRECECQ1QgCC
      pEYIQJDUCAEIkhohAEFSs+4jkTPDPbT3j6JZ06jyRmkci1FSWoFXm6FzaAZvfjnZ0jw9Y3Nk
      bK3GboQoL8yitW+WfTu3JcIHgeCmWXdWCMMwCPlnGJwMIvuHmTalUlNdxXR/H2W11XS2tiOZ
      oLa2ivbWy2jKAv6omT333IPbZl5JXRGJREhJSUmUXwCoqrrhmQdgKcuB2Wy+423A5tTZcloU
      k2ljByCr8WXdnobnxxn2G1RVlqBEstmixWm5dIkMuwVV09AMkHUVTVPRMCE7vOTZYyyGYrht
      Tsxm88q/RFf8ZqTeWP5jboYds9m84WlRNsMXXddX/NlIVuPLuj0dHxlh0hdlwbdIcapB78gM
      WUXbyLVHuXD6DAUVO0mXFjh9+jxFVXXISpCtW7Lp6BkmP2MpL9AyG/HH3egGs5l2JEnaNDub
      we3gy7qHQIlAJMa6MSIx1tpZjS9iFUiQ1AgBCJIaIQBBUiMEIEhqhAAESY0QgCCpEQIQJDVC
      AIKkRghAkNQIAQiSGiEAQVIjBCBIaoQABEmNEIAgqRECECQ1QgCCpEYIQJDUCAEIkpp1C0CN
      Bbhw5hQDEwvEwwucP/cBvoiKEvFx/twHzIcV1PAC586dxxdWWFhYAAwmJycTUHyBYH2s+1Dm
      4kKA2n37aW9rJzSusm1HNV3tHaSaY1TUbqenvR2HFKWmtoKurl7cDgk9NMuikUZuIjwQCG4C
      XdcZHR1dvwDSsnMY6O0mb2sJCzNjeN2pOKwqkuTG43bjspqRzG7c7lRc5kmi/hkujMD9x8sx
      DANVVdE0DVVVicfjifBtheWcQxvNZtjRNG1Dn/9ROxvty3IqGV3XN9TOtXzx+XzU19cTCATW
      L4CxnjY0dz4ep5WgEmZ4fISoasdhDjE+Pk5IlXBrISbGRwljwZWay5FSB739Y9RWFmCxWNB1
      HVmWE56NYLOyQgAiK8QauFVZIaLRKJcuXaK3t5fi4mKOHz++fgE4UrzMTo8zHPZSVV1Nb98I
      tbXbsBkRLvcOU1NbjZMwXb2jVFdVYMQjeDxu8s3z6zUtEKwKTdMYGhqioaEBt9vNQw89RHp6
      +lKeJZEXaH2IvEBrZzN7gHA4zNmzZwkGgxw8eJAtW7ZckZFu4xNnCgS3gFAoRH19PZOTk1RW
      VrJ9+3ZsNtsnPicEILir0DSN3t5e2tracLvdPPzww3i93mv2nEIAgrsCXdeZnZ3l/PnzxONx
      Dh48SFZW1lXf+h9FCEBwxxMOh2loaGBkZIQdO3awbds2rFbrqpZzVyEAhRe+9zfYtuzGJKfw
      6AN1CSiyQLB+FEWhs7OTrq4u8vLyePzxx0lJSVnTQsEqBBAjHIX53l7cW2vWUVyBIDHous74
      +DgtLS1omsahQ4coKCi4qRWyVQjAzYOPn2RgZJ7Smp03UVyBIHFEIhHOnz/P2NgYe/bsoby8
      HIvFctPPW0UwnI9TZwY4sK+EU2/X37QhgWA9xONxGhsb+fGPf4zFYuGpp56iqqpqXY0fVtUD
      eMjy+Pjhs69Tds/xdRkTCNaKYRgMDw/T1NSE3W7nxIkT5ObmJmxD8AYCiNNa38zcXAhfMMrC
      nA/YkhDDAsH1MAwDn89Hc3Mz09PT1NXVUV5envB7xW4gACs79+3ELDk4UV2JyypWTQUbi6qq
      zMzMMDExwcTEBNnZ2Rw+fPiG6/k3yypatMFIbytN3e0UVe3l6J6KDSmIILkxDAO/38+5c+cI
      BALs37+fXbt2bfhNktcVgK5GOfPWGwSsaTz+6MOkOUQPIEg8kUiEpqYm+vv7qa2t5cSJExse
      kLfMdVu0f6ofP7nsr1KobxjkoXvLN6VQguRA13UuX75Ma2srmZmZPPbYYythypvFdQUgmQz6
      ms8yfNlg3q+jmR7j0cNiM0ywPgzDYHp6mubmZiKRCAcOHGDr1q2b2vCXEecB1ok4D7A2IpEI
      Fy9eZHBwkL1791JZWbnutfxrsRpfxKBesCmoqkpHRwft7e3k5+fzqU996rphypvFugVg6Cqz
      s3N4M3LQowsMj8/i8maRk2pjZGySrC2FOIgxNDZNzpatoMZwOh0sLgZISUlJhA+C25jluJ3m
      5mYAjh07Rm5uLoZh3PLGD4lIizI7ydjoOGZPDpGRPmLWPNKtMgPd7aj2VNrau0mVAsiuFNq7
      BnBZVAqz3AwuGOwUArirWT6VNTo6yq5du6iqqkKW5U3LcLEa1i2A1OwCcsMBACLhGJNTfTjt
      1ai4KCsvo6u1Hc3sYlt5BZ2t3UT9M5welbjvgWMiLcoabWwGifBlOUy5tbWViooKnnjiCaxW
      K7quE4/Hb3lalI+S0DlAZnE1xR4H5y62kukwEwqHCSs6djVKOBwgoptwpuayJw9GJuao3Jop
      0qKskjthEmwYBoODgzQ1NeF0Ojl58iQ5OTmfKPOtSotyNdZdgpnhbjr7x2FKYXdxKufOdVBW
      W0eGJUpjSyvlO/aSwiINzV1U7twDsQAZGenERscxgFs/ChSsF8MwWFhYoLm5mdnZWerq6igr
      K9vwXdxEIJZB10myL4MuJ5vq7u6mtLSUuro6HA7HdX/nruoBBDePqul0D88SiavsKM3GKsvc
      Bgsjq0LXdYaGhqivryclJYWTJ0/eFsuaa0UI4Bah6Tp/91IDcVXHabfwxsU+vvrkflKcGxP1
      mCiWd3EbGxsJh8Ps3buXkpKSO67hLyMEcIvoH18gFFX43acPIUnw3LsdnO8Y46F9pbe6aNck
      EonQ1tZGX18fFRUV1NbWYrfbb3Wx1oUQwC1C0w3MZtPKKoBsNqFpG7sseLOoqkp/fz8NDQ1k
      ZWXx+OOP4/F47ti3/kcRArhFVGxJ5zXgmVeacNmt9I3N89Un99/qYl3B8nDn4sWLKIrCkSNH
      blnQ2kYhBHCLMJtNfPmJfbT0ThKJqfzSoQrcjttj/G8YBoFAgLa2NkZHR6mqqqK6unrTYvQ3
      EyGAW4jdKnNge8GtLsYVxONxent7uXTpEpmZmZw8eRKPx3Ori7VhCAEIgKW3/uzsLO+//z6S
      JHHs2LGr7uLebQgBJDnLZ3EbGhqYnJxkx44d7Nix465v+MsIASQxiqLQ0dFBV1cXBQUFK0Fr
      ydL4QQggKdE0jfHxcerr65Flmfvvv5/s7GwkSdqU6NnbCSGAJMIwDBYXF7l48SLT09Ps37+f
      0tJSTKbkvS9dCCAJWA7Ya2lp4fLly5SXl3PkyJEbBq0lA0IAdzmapjEwMEBzczNut5vHHnuM
      tLS0W12s2wYhgDWiqBpv1vfT2jfFjrIcHl5F7M5CIMLQpJ/iPC9e9+bEzhiGwfz8PBcvXsTv
      97Nv3z6Ki4vviBj9zUScB1gjP3qnnWhM5VhdEe+3DGGVzTx5tPKadlr7pvjRO+1szU5leNrP
      Fx/cQU1x1prtrvY8gGEYRKNRWlpa6O3tpba2ltra2lXH3t9t16SK8wAJprl3kt/7wmHSPQ5S
      XTa+/sOzPHm08pqf/+mpLv7jp/dSmJ3K4ISPH7zZelMCWA26rtPV1bWyi/v444+L4c4NEAJY
      IxkpDkamF/E4rIxML5Kecv2JZFzVcHyYVdthl4kriT/crus6U1NTNDc3E41GOXjwIAUFBUm9
      urNa1i2AsH+Grr5hKmv3oi0M0dzZT/H2vaRJfpo7+tlauYt0k4+mziFKquuQ1RD5uRn0Dk5S
      UVaUCB82lS8+uINnXmnmxdPdmEzwG4/tvu7nH9hTwvdfa6GuPJfGngkeTGC8v2EYBINB2tra
      GBwcpKamhu3bt29YprW7kXXPAeKREFPjg7jyaxjraqSitob2S504JYOt1dV0d/RgIc627VV0
      dI5gtUGqWYOMYgoy3MCdNQcAiMZVFkMxUlw2bBbzdc8Ea7pO5+As3SOzVBVmUl2Uhcm09p3W
      j88BdF2nu7ubxsZGCgoK2L17d0ISjYk5wBqxOlxYzB92tbIFm8WKSdKQTHZsVgsWQJKtWKw2
      ZHTi/lk6QnCosPqOzQtkArwuC6CjKPoN7VQWeKksWBK3qio3ZXM5L5BhGIyMjNDU1ITFYuG+
      ++4jOzsbICG+bkaOo9spL9C6e4D5iUEam5ox52ynxL7IqC+CI20rWaYFhuZC2FPzyGCBCX8E
      R3ohdiKUbc2itXeGfXVVSNx5PcBH2cysEOFwmLa2NiYmJqiurk7IJXFXs5NMPcC6BaDGY8QU
      FSQzTruFSDSGze7AhH7VrzF0zGYTiqIiWyxCAKt4fjwe5/Lly1yob2BLQSH3HjqAy+XcEHvJ
      JoB1l0C22pCt/3qSyelc/sOYr/k1ICZqq0DXdYaHh6mvr2doOshI1MOgDmPxbv7NgzuwiTvb
      1o2owQ3CMAzG54IMTiywrTCTjBTHqsOMPxq05vP5KKuspn52lD/89SOkuGy8eLqbXzQM8Pgh
      cV/behEC2AAMw+BU6zDvNA1Qmp/Oq+d7+dWHdlJVlHnD3wuHw/T09NDV1UVRURFHjx5l2h/F
      ZZ8hJ82FJEnsLMvhrcaBTfLm7kYIYANQVJ23Ggb47Sf3k+l10jc2z3PvdvCHRfde83d0XWds
      bIzTp0+TkpLCI488Qnp6OgDZXjMGEvXd42zJTOG1C70cqtm6We7c1QgBbBAGxsp6v9lsQtev
      vtawHLR27tw5IpEIR44c+cQurs0q85Un9vDce1286uvl/t3FHNwuLixPBEIAG4BFNnF0ZyF/
      +1IDVYWZNPdO8uSx6k98LhwO09rayuDgIBUVFdTU1Fwz01qqy8ZXntiXVMcVNwMRDbpOProM
      ahgQjSu09E5hNks4bBbGZhbZXpxFQVbKSuNVVZXBwUEaGhrwer0cOHCA1NTU6zbu2zU79M1w
      Vy2D3o3ML0YIRePkpruxyKuPnw9F4/z1Ty6Qm+4mrqiEowq//dQBZLMJRdWYmAugRkO0tzYS
      jUY5duwYeXl5G+iJ4EYIAXzIxFyAsdkAi6EYb9b343FYsVjMPHagHE3T2V6SheUGh0kauscp
      yknlV07UYgDf/MkFuodnKc718pfPnaWno4WF2Wk+/+kTPPXph7HZbo9McMlM0gvAMAzeahzg
      dOsw6SkO3mse4s9/6yGKcrz8r386zd+91EhVUSYvne3hPz11gBTX2hptPB7nOz96ncBoP7/x
      WB3VNTv5yxcaOakYiPZ/60magPFITOH59zr4i+c+4HzHKMszn1BE4VTLML/79CE+e7SK3HQ3
      L57pZnjKz/CUn+qiTL70+G7SPHbebhzgelOmvdvyGZry873XWvjbFxuYmJhksKOelrYOTj58
      gt37DjDpj2M2mYjEbi4oTpBYkqIHUDWdb7/YwPCUn8KcVL79YgO6AYdqCtB0ncVQjG88ew7Z
      LKFqOqMzAdoHZwiEY+woy+H//PAsU/NB2vqnscgmTh6suOpk1GW38rWnDnC2pY/X3nqfgaER
      QsFt3PvAg7zROsNzZ0dYDMcwm0xMzAXJTXeLVZ1bTFIIYG4xTOfQLF//8oOkuu283zLEa+d7
      OVRTwKw/TDAax2SSkCSY9oWoKc5ieMrHzrIcXjrTjWw2kZHq4Dc/tY+/+dlF9lXlk5Pm/oQd
      VVXobG+lp6WZUNzgz/7rb2G1O/nuK00shmIU5qRSmp/GzrIc/unNNnaV5WA2CwHcSpJCACZJ
      wjAM3m8ZorFngpiqY7cuTWg7h2cxDIPKrRmkp9jRdYOqokwevqeMSEzl//30InabzBdO1JLm
      tuOwWojG1Suev3xfVnNzM7Isk1G4nfvKPFQULa3w1BRn8fIHl/mjh+8lN92NLxhFUTVu+fqz
      IDkEkJ7ioKIgnWdeaSY3w00gHKOiIINYXCXLuxRf8+j+MmxWmQud43zQPsqD+0px2GSevK+a
      777STEvvJJNzQTxOKwVZSyevDMPA5/Nx8eJF5ufn2bdvH6WlpYzNBvjeq81ML4SQJOgemePR
      /eX8w2stHKwpoLl3koM1BZg/djJM03WmF0LYrTJmk4lgJE6W17mmpVjB2kiKjbCXz/Xw7Nvt
      S8McJL761H5eP9+7NMQ528O0L4TLbsFsMqHpOlbZzGMHy3nq2HYkSWJ0xs+5S6Okpzi4d2ch
      dquMoig0NzfT1dVFWVkZdXV1KyHfhmFwum2YN+v7ATixp5R7d2ylfWiG9v5pKrZmUFeei2z+
      1zWIaFzlu680MbsYYTEUQ9cN0jx2bFaZ3/rMPiwmxEbYGtmUAzGJYCMFMO2P8t+/+y66sTQX
      wACHzYLVYkbVdKwWMztLc2i6PEEkplKYk8q/fWQX336xnnBMwW6VOb6nhCePViPLJjRNY2ho
      iIaGBtLT06mrq8Pj8Xyiog3DQPsw/sdskm7YcF+70Is/GOWR/eX8+b+cJa5o/JfPH6K1f4rp
      hTC/fN82IYA1InaCgbGZRWZ84SvG26quo0Q0FE2nIiOdfVV5lOZ7+d6rLUgSfOPZs/hDMfIy
      3ATCcX78Xgcep5W9Jam0tLQQCAQoKKkkLSsfpzsFrjKalyQJeQ0T3Kn5EJVbM4gpKjaLjMdp
      IxCOU5ybRmvf9PorQnBVEioAXVWIxOKYLVZssoloNIb1GkciVVXb8DcAQCASx2DpFkZdN9AN
      A1XTkT+MtgxG4vzD663EFQ3dMDBJEqGogskkUZzrxe2w8l5THz979R2mSuzInhwMZwk/rZ8m
      Nz2CLxjh0f2lvN86iqbpPH6ogp1la79Z5eD2LTz7djufPVZFKBpncj5OOKbw6vleTuwp2YCa
      EUCCh0DjnefpnDdRuLUIW3iMobkQtpRcMk0+xhfCONKLcEgRSrdk0DHsZ09tObBxQ6BAMMyf
      /csHXOr/1zeoJLGyCSZx5bv7oz8DsJglPFKQ1pYWaipLyCwoI6hIzPkjFOak8HufP0zv+Dzf
      f7WF43tKGJhYYHDSz3/79fsoykldU1kNA7qGZ3jzYj9ejx2L2cTUQoh7dxSyd1s+iiKC4dbK
      pg+B/L4gqmonNdXFvM/KwcM76WxuJyRbOXxkF+0tPcSis5yanOPwkYMJT4sSjim8cKqHsdkA
      24uzsMoSkWj8iob90Qae5XUy4w9jNpkwSUsHWZaJhRaZnuzD0DXyS6uJuzLRJAt/8IV7+J8/
      OI2i6rx8roey/DRCUYVZX5D7dxXyhtLPmdYh8u6rWnP5y/JSKfv0JxNtKUp8JS3KRpNsaVES
      KoCSusNUynD2YiuZTiuxuIICWNQ4SjyGiglrajbb0mLM+kIUZnmQZRld15FleV0H5f2hGP/3
      pw143Q4uDUzTPjBDNK7idlixWeRPrN0DTPvCwNJOMYBJAjUWxTc9RMQ/R2r2FnIKStmSlUrv
      2DwzvjAms8yRHYW8caGfy2ML9I4tYLWYeeJoNV63nTMdYzT0TPBLh7cRU1QyUpwk6qW9WYkE
      NtqOrusYhrEpmapv5EtCh0CTQ130DE6RW7qdXHuU5o5+CrfVkSYt0Nw1REn1bsxKgPy8bHr6
      RqisKL3ptChxVeNS/zRWi5lITOG5dzoYmw1gNklkeV08/UANf/7s2VXn4jR0neD8JIHpQWxu
      L6m5pTicTuxWmWyvixl/mLiiUZDlYUtWCqdahtlWmMHRnUW8dKYLA4mcNBc56S6aLk+Sl+HB
      YjaRn+nh1x7Zic1yc+8aXTc4fWmYix1jVBZm8vC+0g3NBpFsQ6A7chk0GInz9R+epW9sfiU4
      7U+/9AD/4x9PEQjHkJAoyE6hf3zhhs8yDINYyM/8aA8ms4w3vxSbc+lwit0qE1NUDGNpKVM3
      DDxOGw/uLaV9YJqvfe4A+ZkemnrG+Msf11NdlMnUQghdN/gf//4B7FaZZ99pJyfNzUM3mRP0
      rYZ+OgZnOLGnmNaBGSJRhX/3aN1NpVdcDckmgDsyGvS95kEiMYWvf/lBvvT4HiIxlb9/pYnM
      VCcSEnFVW1XjV6Ih5oY7mRvpwp2RT3bZLuwuL5IkYZIkbBbzypzB47RhNplI9zj45fu3k+l1
      EoouRXRmeV2kOK0sBCJkpjopyErB47Rhkc1syUyhY3AGRV3qiUKROC+c6uKZl5voHZvnRq+f
      023D/PIDNZRvSeNThyrpn/BddTgnuDnumH2AWX+Yf3nrEguBCMGoQkmeF4/TxgunOtENg/aB
      GWSzCU278cRK1zQCs6MEZkdxpmSQV7Ebk2wFJGSzCYtsItVlRzcMrDGFz91fg24YnGoZYnI+
      yOR8kKeOVfPMK00U5njpHJpGMww+c7QKXzDGc++0c/bSCIFwjGffbqc418s3nj3Hl5/Yx3d+
      3si2rRnsKM3mB2+08qsP76R8S/o1y5rldTE85cfrymRuMYpVNl2xgyxYH3eEACIxhb/+yQU+
      c2QbOelunnmliXOXRpj1hxmdWVz5nHqDxm8YOtHAAgvjfZjMMtmlu7A6rozqNJskvG471UVZ
      jEz7mV+M0DM6h9O2VFWZqU6yvE48Tht/8MV76Rufx9A1ygsyV1KV9IzM8dKZbqYWQvzO04eo
      Lcnmjfo+vvWzeiRJ4lNHti2VB3i/Zei6AvjCiVr+5oWLvHGhl7im82sP7cRqEbFBieKOEMDE
      XBC33cruyqXoypMHK5icDzI85b/hEGIZJRZhfqwHNRbBm1uMIyUL00dWIUzSUsPfV5VH79g8
      Q5M+/sOn9hKKxHn2nXYausfJSXPjtMtMzAXxOG2kuGzUlecyPR9gaiG4Ev7gD0X5zNEqftEw
      QG1JFpLEh+eENRRNQ1E1LLKZyfkg6Z7rX7CR7nHw+184zOTcIhleN27Hxo7Pk407QgAZKQ78
      oSgzvhAuu5VLA9N85t4qakuz+dpfvXbdMbGmxlmcHiHkm8blzSJzaxUm+crb0CUJTCaJe6ry
      KduSRvPlSeYDUf7+5UY+e6yardkppLnt/P6vHGFqIcgzrzTxB188srKyc7h2K99/vY3//c9n
      iMRU9lTmUVeRx0tne/j+ay2U5KXxXssgTz9Qw9hsgD/5/nu4HTbMJomvPLHvhv7brDJ5GW6R
      T3UDuCMEkOq28/QDNXzzhYsYhkHFlnSO7Sri+fc6rrnMaeg64cVZ/FODmC02sktqsdivfgLL
      MJZE4AtGeb9lCH8ohsMqM70Q4qenupicD+J12XnhVCf37y5GVXUUVcf2YXu0Wcx85TP7GJle
      xG6RyU538caFPrxuO2aTxE9Pd3F0ZyHbCjPZVrg0/g9F42zNThXj+VvMHSEAgB2l2VQWZKBo
      GmaTieff6+Clsz0YHwtEMwwDJRpiYbwXNR4hLb8chycD6Tr3ZeWmu7FZzJzvHMNmMVOQlcJX
      n9zPXzz/AROzAWxWGYd9SRB/8r332FWei0mSiCkq1g9j9c0mE8W5S8u4MUXl7KURfufpg6R5
      HNxXV8w/vt7yYXIsiew0F+DaqKoSrIE7RgCSJGG3ydiReeaVJrqGZqktyeZC59jKZzQ1jn9y
      kLB/Fk/mFtwZNZjlGw8bbBYzs/4waR4HgXCMSEzFH4oim0ykeRw8sKeYjBQHjT0TwNJdwX/2
      T6eRJImqokyisTh7KvPZUZaDSVo6cyCZJJQPJ+UxRRWHWm5TzH/8x3/8x7e6EMuxQNdKC/hx
      vvWzBr72uQM8sLuE023DhMIxgnMTzI10YzKbySioxOm9cpJ7PfyhGCZJIsvrZDEUIxhRONM2
      QjASJ65qDEz4kCSJnDQ3bQPTxOIqv/crhxmfC/BmfR/7q/I52z6K1SJTkJWCySRhtcj885ut
      DEz4eKtxgC8+WEtGys1faqFpGmazecOD4ZbtbCTLm5cbfYvlany5Y3qAj+J2WBie9pOT5uLI
      tgy+/c9n0dQ4GQWV2D1eluI8b4zZJKHpBpIEMUVjfDbAA7uLae6dJN3jwGw28Ue/ei/f+Xkj
      59tHQYLSvDTmAxFev9DHyJSffdvyycvwsHfbFr7zciMHqrcgSRKHawqoLEhncNLH5+6vJsUp
      kgDdjtyRAvjCiVr+6kdn+NY/jDA6OsruHTsIm1OJxHUkSVr1TqmuG+Smu1FUDeK1R7sAAAiw
      SURBVH8ohiRJfNAxymMHli6emF4IkuJcSkr7m9/4OY/uL2d/9Rb+9qUGLnSO4bDJDE/7Kc3b
      wdhc8IpGLklLMUlZXjHWv52545YgVFXFrixwMDfEib0lfPNP/zPpeUUc2VmM2WRa6V6X+wDT
      dYYMBjDjCxGOKSshusd2FVGYk0r38CxzixHeahygfWAGDCjK8VKQlcKushwiHx6XNEsS33ut
      hR+908Hnj9dufAUIEsodEwy3fIFES0sLhmFQV1dHQUEBkiTR0jfFj95uZ2ohSJbXxeR8EEM3
      8IeXDpe77EsT4VBUwWyScDusWOSliW9RTirZaS7a+qcp35JG2ZZ0TJLEw/vLcFhlXj3fSzAc
      p7Y0m3ebB1FUHafdwpdO7iY9xcFCIML4jJ/i/HRc9o3bpBLZodfOXRENunxtUGNjI8PDw+zc
      uZPq6uorKs8wDMIxhbii0dw7ycRskNrSbL75kwtkpjo5vqeE851jNPZMcKR2K1lpLn5R34+m
      6xzbVURL7xSLoRi/8/RB9lReO1tzLK4Siiq4ndaV5c/NvCZVCGBt3PGH4hVFobOzk9bWVsrK
      ynjqqaeuulIkSRIuuxWXHSyyGVXXqSnJ4sTeYl4+18vPz/VwqKYAr9vOhc5R7qnewlP3VfP8
      ux0U53pJ9zgYmFhgZ1nOdctjs8riZsa7jNu2BxgYGKCpqQmbzca+ffvIzs5e1dsvHFX45k8u
      kOq2EYkpGEh88cFaslJdhKJxfvBmGyNTfrLSXDx8TxmdgzO4HVbu3Vl4U3E2ogdYO7dTD3Bb
      CSA1NZWFhQUaGxuZn59n165dlJeXr2ld2jCWNqouDUyDobOjLBfZbF45lqgbBpqmL50DTsCh
      EiGAtSME8DFisRh+v5+xsTE6OzspLi5m7969675A4m64KX4ZIYC1c9vMAcZ7W2kfnCK3pBa7
      HqJ0azatvZPsrq1c+czp06dxuVw89thjpKambvguoUAAmyIAg7mwzvHj99He2ktYD9LYMk/F
      jivTf9TV1VFUVLQpmQIEgmU2Z0nDWPkPkllGVuPEVf2KvEAOhwO/348syyvdvK7rK/Ecyz3C
      8u+YTKYrxKIoylI6wo90q7FYDJPJdEUcvaZpK2lYrmdnLbaj0SiyLF9hW1VVDMO4KdtXsxOP
      x5Ek6RM+Xs3v9dhWVZVgMLiq+r2andXYNgxjZRh0s3/b1dhRFAWz2XzN+jWbzZszB5ga6KCt
      b5yCil1YtSAlRbm0tA+xa2fVTadFWQ1iDnBzdpJpDnDbTIKFAK6PEMDaWfMk2O/3E4vFNrRQ
      V0NVVRRFSXhKvs0I7d0sO3eTL8txV7dDOPRd3QMoirLh52iXx7Mb/TZbGbNucA+wGXW2WakR
      V+PLXb3WKG5gXDt3U52txpe7OrBlM+4f+PjqxEaxGTY2y85m7fGsxpe7ugcQCG7EXScATYnQ
      3dLGXDhGPBBgIRTCNz2GL5zYm9l9U0Ocev8Ug5M+fFNTxA2NwaHhhF59aqgRmi+e4+yFJsJx
      jempKeKBGcbmggm0skRwepjW3lHCMzMENJWJsRGiSiLz9xuMdDfzzrvvMjS1yOzUFKoSZXh0
      MrF1Zuj0tTdyuv4S8UiUOZ+P0Nw4M4tXX2C56wRg6DoOq52oFkeJRFj0T9E76sfjSPDEzuLm
      4IE65icnCczPMzrUjW5LXeVp5FUiyVTu3EueW2JuMczczCRdvWOkpVw/m9xaMdQI3cPzxBan
      ifp8zC9MMLOoYZUT2DwMncWozL33309RTgoL8/MM9XZhcSe2zlT/EHPkcLCuCkOJ41uYomtw
      jjTP1ZdD7zoByDYXXrf9w0pVuHT+Ao7cAhJ9IbvLaaWnZ5CyylIiwWmauqfIz/Ak1IZktjA7
      1MnwfBS3w8ZoTxsBkwtHIhsmBqP9vaTl5aMpCroRofF8C97cHBKbgV3CpAc5/fYv6BqaZXF6
      iK7JCNkpq8sEslpi/kWmpgZ45633mI8p9DQ1YErLRr6GL3edAJTIIv3DwwwPDBJRLOw4egIm
      ulmIJHYI1NZwEaw2FhcDONzZHD9cQ3tnL3oC+/N4yE/EsOG1SswHQmyt3kOhLcJIQodABpJJ
      ZnZ0gNGJaaKKjYPHjzHf30VETdwQyDAMbK4U8vKyiYSCpGQXcbgmn46+0VXnd10Nzux8Mp0u
      slKsRFUT2/YfxbU4wkzw6vtbd90+gBYLMTnrA0kiPSMbsxlMuoqKjD2Bp7n8c9MEowpWp4dU
      hxXZbicaCmF3uhL25jQ0lbm5WTTJSmZGGmo8htVqJhzVcSU4zYphGESjUSwmE1itaNEIJuvS
      ZX0JMkA46MMXjJOdk40Wj2G1WYmEozicibtGyjAMgv45IppMpteDquvIkk5MNeGwf3IYfNcJ
      QCBYC3fdEEggWAtCAIKkRghAkNQIAQiSGiGAOxqD8d5mnn/+eeo7h674SXCii5/8/F3GZubQ
      PlybHW07xbAfQGNqauYjn9Y/9n3yIARwJ2MYNJ45x46jj1K5JZ3g3Civv/Y67b19vPiDHzIf
      ifC9b32Dl9++iArMj19mPgqg0NfbS//lPuLxKP1DA/T19TM73seZ99/hYscgUf8Ub77+Ko1d
      QzcoxJ3NXR0NetcjSRz/9BO8+ebzNLhLsE0PcM8jj/D+6TOUbi3C88Bx2tUZjuzfwZWR9wp9
      fSMEpwcJhgoYC3mZ7evDEhnBtOUwTedeZcohsf3oSd59/zR7qopukYMbj+gB7mQMg8vdPXgy
      8gj7F3DaDFpb2wjHJWSzjNVmI8Mu0XDpMhpLcVLNH7xL/4QPkNhXU8iPX6ynbk/Z0vNMZtwu
      N7JsxmmXaW9tJRC7+h1sdwtiI+xOxjCIRUIshqJ4vGmYtRhzc7O8X9/MZx5+EMnmRFLC+MMq
      6WkpKJEgvkAYpycVk7GU5XphMYLX6yYSjiCbJSTZRjwWZaqnntfOtJJXfZDPHr/xTZZ3KkIA
      gqRGDIEESc3/B0j4BRnJQz5UAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='diagrama.bueno' width='192'>
      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
      1iQAQmv/DxTQ8YI3jj+WAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='104' name='diagrama.bueno (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABoCAYAAACnk/+EAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAOSElEQVR4nO3de1xU5b7H8c+W8QblS7dpW22rtTXPRkOThQzQjCKFW81LWiLinexiqTvL
      Mim8tFFMTVPxdlJEweqke0upoYnKECPIRaOCtI4iZSOEx5coowxzOX9wF1AUdnLO+r1fL/6Y
      tZ71PM8M6zvrmZnnmfmDw+FwIIRKNbvXHRDiXpIACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMA
      CFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhV
      kwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMA
      CFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhV
      kwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwCIJi8rYgSKojB4RXq9jzkfFYSy0HDbchIA0cRl
      cTQOps0KAEMyWY1cuwRANG3nUzEW6dEGeaIrMJJ6vnGrlwCIJi0vOZHTXu701fTGrd9pDh2r
      TMD5qCCCouq+za/xLJvki5eioBsdygGTtXS7YWHF8EgCIJqwS3x97BQe/fuioT2Kthenk9O4
      VO/jezB+81ccTz7E4r4pvLd0f41jJQCi6SpKwZjaC63SHoBuHt50SjWSUlTP4zt342FnDWj+
      yOApAXQ9nsH3NxXRNGqHhWhERQnxJHCahLEK66psj08oYtgwlzur7MZ1zM01NU54uQKIJspK
      eoqRTtN2kJaWVvaXzIZn22BMSadsNI/p5wtYsGI+l8i+ZFP1KoqLsQBWczYx6/ZQ5D+QvuX7
      LvzMBasEQDRV1gyMiQ/wN1/XKhs19B/sT+tEIxlW6KIbxqPxr+Pt9RSTI87SuWeHKmX/SN/C
      j3lap6DVv8BnLi+yKUSPC0A/P8YWbGKUVscfHA6H4/e9Z0I0HXIFEKomARCqJgEQqnbbt0HT
      0tJ+j34IcU/Ii2ChajIEEqomARCqJgEQqiYBEKrW8AAUHeB1RUFRXmZPlbmmeZ8+j/Lynpum
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='map. filter.draft' width='192'>
      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
      GHG/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='124' name='prediction' width='192'>
      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
      xRCfQgiMmv8B9DdQ56PaUUMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='show.mode' width='192'>
      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
      s1n4P6bUVoB82XmkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='titulo' width='192'>
      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
      gWbfCP8fUMKQXcgP4+oAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
